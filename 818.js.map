{"version":3,"file":"818.js","mappings":"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","sources":["webpack://@dev/web/./src/components/ZoomableLineChart/styles.module.scss?37a4","webpack://@dev/web/./src/components/ZoomableLineChart/index.tsx","webpack://@dev/web/./src/hooks/useResizeObserver.ts","webpack://@dev/web/../../node_modules/date-fns/esm/addDays/index.js","webpack://@dev/web/../../node_modules/date-fns/esm/subDays/index.js","webpack://@dev/web/../../node_modules/date-fns/esm/addMonths/index.js","webpack://@dev/web/../../node_modules/date-fns/esm/subMonths/index.js","webpack://@dev/web/../../node_modules/date-fns/esm/sub/index.js","webpack://@dev/web/./src/components/DonutChart/styles.module.scss?a1ed","webpack://@dev/web/./src/components/DonutChart/index.tsx","webpack://@dev/web/./src/containers/Quotes/styles.module.scss?548c","webpack://@dev/web/./src/containers/Quotes/Investments.tsx","webpack://@dev/web/./src/containers/Quotes/Transactions.tsx","webpack://@dev/web/./src/containers/Quotes/index.tsx","webpack://@dev/web/./src/components/DonutChart/styles.module.scss","webpack://@dev/web/./src/components/ZoomableLineChart/styles.module.scss","webpack://@dev/web/./src/containers/Quotes/styles.module.scss","webpack://@dev/web/../../node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js","webpack://@dev/web/../../node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js"],"sourcesContent":["\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  ReactNode,\n  createContext,\n  useContext,\n  useEffect,\n  useId,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport {\n  ZoomTransform,\n  area,\n  brushX,\n  extent,\n  group,\n  select,\n  scaleLinear,\n  scaleOrdinal,\n  scaleTime,\n  line,\n  curveCardinal,\n  axisBottom,\n  axisLeft,\n  zoom,\n  zoomIdentity,\n  brushSelection,\n  timeMonth,\n} from \"d3\";\nimport { Subject, of } from \"rxjs\";\nimport { delay, switchMap } from \"rxjs/operators\";\nimport useResizeObserver from \"../../hooks/useResizeObserver\";\nimport cx from \"classnames\";\nimport styles from \"./styles.module.scss\";\n\nconst ZoomContext = createContext<any>(undefined);\n\nexport function SyncZoomProvider({ children }: { children: ReactNode }) {\n  const events$ = useMemo(() => new Subject<any>(), []);\n  return (\n    <ZoomContext.Provider value={events$}>{children}</ZoomContext.Provider>\n  );\n}\n\n// https://github.com/muratkemaldar/using-react-hooks-with-d3/tree/16-zoomable-line-chart\nexport default function Chart({\n  list,\n  move,\n  type = \"line\",\n}: {\n  list: { group: string; date: Date; value: number; value2?: number }[];\n  move?: boolean;\n  type?: \"line\" | \"area\";\n}) {\n  const stream$ = useMemo(() => new Subject<any>(), []);\n  const events$ = useContext(ZoomContext) || stream$;\n  const id = useId();\n  const svgRef = useRef<SVGSVGElement>(null);\n  const tooltipRef = useRef<HTMLDivElement>(null);\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const dimensions = useResizeObserver(wrapperRef);\n  const [currentZoomState, setCurrentZoomState] = useState<ZoomTransform>();\n  const [selected, setSelected] = useState<object | null>(null);\n  const tooltip$ = useMemo(\n    () => new Subject<{ x: number; y: number; data: object } | null>(),\n    []\n  );\n\n  useEffect(() => {\n    const tooltip = select(tooltipRef.current)\n      .style(\"opacity\", 0)\n      .style(\"pointer-events\", \"none\");\n\n    const subscription = tooltip$\n      .pipe(\n        switchMap((selected) => of(selected).pipe(delay(selected ? 0 : 400)))\n      )\n      .subscribe((selected) => {\n        // console.log({selected})\n        if (selected) {\n          const margin = { x: 30, y: 30 };\n          const { x, y, data } = selected;\n\n          const wrapperRect = wrapperRef.current.getBoundingClientRect();\n          const tooltipRect = tooltipRef.current.getBoundingClientRect();\n\n          const transform = `translate(${\n            x +\n            (x < wrapperRect.width - tooltipRect.width - margin.x\n              ? margin.x\n              : -margin.x - tooltipRect.width)\n          }px,${\n            y +\n            (y < wrapperRect.height - tooltipRect.height - margin.y\n              ? margin.y\n              : margin.y - tooltipRect.height)\n          }px)`;\n\n          if (tooltip.style(\"opacity\") === \"0\") {\n            tooltip.style(\"transform\", transform);\n          }\n\n          tooltip\n            .transition()\n            .duration(300)\n            .style(\"opacity\", 0.9)\n            .style(\"transform\", transform);\n\n          setSelected(data);\n        } else {\n          tooltip.transition().duration(300).style(\"opacity\", 0);\n        }\n      });\n    return () => subscription.unsubscribe();\n  }, [tooltip$]);\n\n  const data = useMemo(() => group(list, (item) => item.group), [list]);\n  // console.log({ data });\n\n  useEffect(() => {\n    if (!wrapperRef.current || !svgRef.current) {\n      return;\n    }\n    const svg = select<Element, unknown>(svgRef.current);\n    const svgContent = svg.select(\".content\");\n    const { width, height } =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n\n    // scales + line generator\n    const xScale = scaleTime()\n      .domain(extent(list, (d) => d.date))\n      .range([10, width - 10]);\n\n    if (currentZoomState) {\n      const newXScale = currentZoomState.rescaleX(xScale);\n      xScale.domain(newXScale.domain());\n    }\n\n    const yScale = scaleLinear()\n      // .domain([0, max(list, (d) => d.value)])\n      .domain(\n        extent(\n          list\n            .map(({ value }) => value)\n            .concat(type === \"area\" ? list.map(({ value2 }) => value2) : [])\n        )\n      )\n      .range([height - 10, 10]);\n\n    const lineGenerator = line()\n      .x((d) => xScale(d.date))\n      .y((d) => yScale(d.value))\n      .curve(curveCardinal);\n\n    // https://d3-graph-gallery.com/graph/stackedarea_basic.html\n    // https://d3-graph-gallery.com/graph/stackedarea_template.html\n    var areaGenerator = area()\n      .x(function (d) {\n        return xScale(d.date);\n      })\n      .y0(function (d) {\n        return yScale(d.value);\n      })\n      .y1(function (d) {\n        return yScale(d.value2);\n      });\n\n    const color = scaleOrdinal()\n      .domain(Array.from(data.keys(), String))\n      .range([\n        \"#e41a1c\",\n        \"#377eb8\",\n        \"#4daf4a\",\n        \"#984ea3\",\n        \"#ff7f00\",\n        \"#ffff33\",\n        \"#a65628\",\n        \"#f781bf\",\n        \"#999999\",\n      ]);\n\n    // render the line\n    svgContent\n      .selectAll(\".myLine\")\n      .data(data)\n      .join(\"path\")\n      .attr(\"class\", \"myLine\")\n      .attr(\"stroke\", (d) => color(d[0]))\n      .attr(\"fill-opacity\", \"0.5\")\n      .attr(\"fill\", (d) => (type === \"area\" ? color(d[0]) : \"none\"))\n      .attr(\"d\", (d) =>\n        type === \"area\" ? areaGenerator(d[1]) : lineGenerator(d[1])\n      );\n\n    svgContent\n      .selectAll(\".myDot\")\n      .data(\n        (([start, end]) => timeMonth.count(start, end))(xScale.domain()) > 6\n          ? []\n          : list\n      )\n      .join(\"circle\")\n      .attr(\"class\", \"myDot\")\n      .attr(\"stroke\", \"black\")\n      .attr(\"r\", 3)\n      .attr(\"fill\", (d) => color(d.group))\n      .attr(\"cx\", (d) => xScale(d.date))\n      .attr(\"cy\", (d) => yScale(d.value))\n      .on(\"mouseenter\", (_, data) => {\n        const x = xScale(data.date);\n        const y = yScale(data.value);\n        tooltip$.next({ x, y, data });\n      })\n      .on(\"mouseleave\", () => {\n        tooltip$.next(null);\n      });\n\n    // https://github.com/d3/d3-axis/blob/v3.0.0/README.md#axis_tickSizeInner\n    // https://observablehq.com/@d3/styled-axes?collection=@d3/d3-axis\n    const margin = {\n      top: 10,\n      bottom: 10,\n      left: 10,\n      right: 10,\n    };\n\n    // axes\n    const xAxis = axisBottom(xScale).tickSizeInner(\n      margin.top + margin.bottom - height\n    );\n    svg\n      .select<SVGGElement>(\".x-axis\")\n      .attr(\"transform\", `translate(0, ${height})`)\n      .call(xAxis)\n      .call((g) =>\n        g\n          .selectAll(\".tick line\")\n          .attr(\"transform\", `translate(0,${-margin.bottom})`)\n          .attr(\"stroke-opacity\", 0.5)\n          .attr(\"stroke-dasharray\", \"2,2\")\n      );\n\n    const yAxis = axisLeft(yScale).tickSizeInner(\n      margin.left + margin.right - width\n    );\n    svg\n      .select<SVGGElement>(\".y-axis\")\n      .call(yAxis)\n      .call((g) =>\n        g\n          .selectAll(\".tick line\")\n          .attr(\"transform\", `translate(${margin.left},0)`)\n          .attr(\"stroke-opacity\", 0.5)\n          .attr(\"stroke-dasharray\", \"2,2\")\n      );\n\n    // brush\n    const brush = brushX()\n      .extent([\n        [0, 0],\n        [width, height],\n      ])\n      .on(\"start brush end\", ({ sourceEvent, selection }) => {\n        if (selection) {\n          // console.log('brush.event', sourceEvent)\n          if (sourceEvent) {\n            events$.next({\n              type: \"select\",\n              selection,\n            });\n          }\n        }\n      });\n\n    // zoom\n    const zoomBehavior = zoom()\n      .scaleExtent([1, 20])\n      .translateExtent([\n        [0, 0],\n        [width, height],\n      ])\n      .on(\"zoom\", ({ sourceEvent, transform }) => {\n        // console.log('zoom.event', sourceEvent)\n        events$.next({\n          type: \"zoom\",\n          sourceEvent,\n          transform,\n        });\n      });\n\n    if (move) {\n      svg\n        .select<SVGGElement>(\".brush\")\n        .call(brush)\n        .on(\"dblclick\", function () {\n          // https://observablehq.com/@d3/double-click-brush-clear\n          // const selection = brushSelection(this) ? null : xScale.range();\n          const selection = brushSelection(this) ? null : [0, width];\n          select(this).call(brush.move, selection);\n        });\n    } else {\n      svg.call(zoomBehavior);\n    }\n\n    const subscription = events$.subscribe((action) => {\n      if (move) {\n        if (action.type === \"zoom\") {\n          const { sourceEvent, transform } = action;\n          if (sourceEvent) {\n            // const selection = xScale.range().map(transform.invertX, transform)\n            const selection = [0, width].map(transform.invertX, transform);\n            svg.select<SVGGElement>(\".brush\").call(brush.move, selection);\n          }\n        }\n      } else {\n        if (action.type === \"zoom\") {\n          const { sourceEvent, transform } = action;\n          if (svgRef.current && sourceEvent) {\n            if (!svgRef.current.contains(sourceEvent.target)) {\n              svg.call(zoomBehavior.transform, transform);\n            }\n          }\n          setCurrentZoomState(transform);\n        } else if (action.type === \"select\") {\n          const { selection } = action;\n          if (selection[1] > selection[0]) {\n            // const indexSelection = selection.map(xScale.invert);\n            svg\n              .call(zoomBehavior)\n              .call(\n                zoomBehavior.transform,\n                zoomIdentity\n                  .scale(width / (selection[1] - selection[0]))\n                  .translate(-selection[0], 0)\n              );\n          }\n        }\n      }\n    });\n    return () => subscription.unsubscribe();\n  }, [currentZoomState, data, dimensions, move, events$]);\n\n  return (\n    <div className={cx(styles.Chart)} ref={wrapperRef}>\n      <div ref={tooltipRef} className={styles.Tooltip}>\n        {selected && <pre>{JSON.stringify(selected, null, 2)}</pre>}\n      </div>\n      <svg\n        ref={svgRef}\n        style={\n          move\n            ? {\n                height: 150,\n              }\n            : {}\n        }\n      >\n        <defs>\n          <clipPath id={id}>\n            <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" />\n          </clipPath>\n        </defs>\n        <g className=\"content\" clipPath={`url(#${id})`}></g>\n        <g className=\"x-axis\" />\n        <g className=\"y-axis\" />\n        <g className=\"brush\" />\n      </svg>\n    </div>\n  );\n}\n","import { RefObject, useEffect, useState } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\n// https://github.com/muratkemaldar/using-react-hooks-with-d3/blob/16-zoomable-line-chart/src/useResizeObserver.js\nexport default function useResizeObserver(ref: RefObject<Element>) {\n  const [dimensions, setDimensions] = useState<DOMRect | null>(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    if (observeTarget) {\n      const resizeObserver = new ResizeObserver((entries) => {\n        entries.forEach((entry) => {\n          setDimensions(entry.contentRect);\n        });\n      });\n      resizeObserver.observe(observeTarget);\n      return () => {\n        resizeObserver.unobserve(observeTarget);\n      };\n    }\n  }, [ref]);\n  return dimensions;\n}\n","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\n\nexport default function subDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\n\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  var dayOfMonth = date.getDate(); // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}","import subDays from \"../subDays/index.js\";\nimport subMonths from \"../subMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\n\nexport default function sub(date, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = duration.years ? toInteger(duration.years) : 0;\n  var months = duration.months ? toInteger(duration.months) : 0;\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\n  var days = duration.days ? toInteger(duration.days) : 0;\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0; // Subtract years and months\n\n  var dateWithoutMonths = subMonths(date, months + years * 12); // Subtract weeks and days\n\n  var dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7); // Subtract hours, minutes and seconds\n\n  var minutestoSub = minutes + hours * 60;\n  var secondstoSub = seconds + minutestoSub * 60;\n  var mstoSub = secondstoSub * 1000;\n  var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);\n  return finalDate;\n}","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { PieArcDatum } from \"d3-shape\";\nimport cx from \"classnames\";\nimport styles from \"./styles.module.scss\";\n\n// https://medium.com/react-courses/drawing-basic-charts-with-react-typescript-d3-part-ii-pie-scatter-chart-da4fc653b715\ntype Data = {\n  label: string;\n  value: number;\n};\n\nexport default function Chart({\n  list,\n}: {\n  list: { label: string; value: number }[];\n}) {\n  const groupRef = useRef<SVGGeometryElement>(null);\n  const innerRadius = 60;\n  const outerRadius = 130;\n\n  // https://codesandbox.io/s/r5wp0v08xq\n  useEffect(() => {\n    const createPie = d3\n      .pie<Data>()\n      .value((d) => d.value)\n      .sort(null);\n    const createArc = d3\n      .arc<PieArcDatum<Data>>()\n      .innerRadius(innerRadius)\n      .outerRadius(outerRadius);\n    const colors = d3.scaleOrdinal(d3.schemeCategory10);\n\n    const data = createPie(list);\n    const group = d3.select(groupRef.current);\n    const groupWithData = group.selectAll(\"g.arc\").data(data);\n\n    groupWithData.exit().remove();\n\n    const groupWithUpdate = groupWithData\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"arc\");\n\n    const path = groupWithUpdate\n      .append(\"path\")\n      .merge(groupWithData.select(\"path.arc\"));\n\n    path\n      .attr(\"class\", \"arc\")\n      .attr(\"d\", createArc)\n      .attr(\"fill\", (d, i) => colors(i));\n\n    const text = groupWithUpdate\n      .append(\"text\")\n      .merge(groupWithData.select(\"text\"));\n\n    text\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"alignment-baseline\", \"middle\")\n      .attr(\"transform\", (d) => `translate(${createArc.centroid(d)})`)\n      .style(\"fill\", \"white\")\n      .style(\"font-size\", 10)\n      .text(({ data }) => `${data.label} (${data.value})`);\n  }, [list]);\n\n  return (\n    <div className={cx(styles.Chart)}>\n      <svg>\n        <g\n          ref={groupRef}\n          transform={`translate(${outerRadius + 20} ${outerRadius + 20})`}\n        />\n      </svg>\n    </div>\n  );\n}\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  ChangeEventHandler,\n  MouseEventHandler,\n  useCallback,\n  useMemo,\n  useState,\n} from \"react\";\nimport { format, sub } from \"date-fns\";\nimport cx from \"classnames\";\nimport styles from \"./styles.module.scss\";\n\nfunction getValueNearDate(values, date) {\n  for (let i = 0; i < 5; i++) {\n    let value = values[format(date, \"yyyy-MM-dd\")];\n    if (value) {\n      return value;\n    }\n    date = sub(date, {\n      days: 1,\n    });\n  }\n}\n\nexport function Percent({ value }: { value: number }) {\n  return isNaN(value) ? null : (\n    <div\n      className={cx(\n        styles.Percent,\n        value === 0 ? styles.eq : value > 0 ? styles.gt : styles.lt\n      )}\n    >\n      {new Intl.NumberFormat(\"pl-PL\", {\n        minimumFractionDigits: 2,\n      }).format(Math.round(100 * 100 * value) / 100)}\n      &nbsp;%\n    </div>\n  );\n}\n\nexport default function Investments({\n  investments,\n  rates,\n  selected,\n  setSelected,\n}: {\n  investments: { id: number; name: string }[];\n  rates: Record<string, Record<string, number>>;\n  selected: number[];\n  setSelected: Function;\n}) {\n  const [expanded, setExpanded] = useState<number[]>([]);\n  const list = useMemo(\n    () =>\n      investments.map((item) => {\n        const [date, unitValue] = Object.entries(rates[item.id]).pop();\n\n        return {\n          ...item,\n          date: new Date(date),\n          unitValue,\n        };\n      }),\n    [rates]\n  );\n\n  return (\n    <div className={styles.Investments}>\n      <h3>Investments</h3>\n      <table>\n        <tbody>\n          <tr>\n            <th>\n              <input\n                type=\"checkbox\"\n                checked={selected.length === investments.length}\n                onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                  ({ target }) =>\n                    setSelected(\n                      target.checked ? investments.map(({ id }) => id) : []\n                    ),\n                  []\n                )}\n              />\n            </th>\n            <th>Fundusz</th>\n            <th>Data wyceny jednostki</th>\n            <th>Wycena jednostki</th>\n            <th>7d</th>\n            <th>14d</th>\n            <th>1m</th>\n            <th>3m</th>\n            <th>6m</th>\n            <th>12m</th>\n            <th>24m</th>\n            <th>36m</th>\n          </tr>\n          {list.map((item, i) =>\n            [\n              <tr key={i}>\n                <td>\n                  <input\n                    type=\"checkbox\"\n                    checked={selected.includes(item.id)}\n                    onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                      ({ target }) =>\n                        setSelected((selected: number[]) =>\n                          !target.checked\n                            ? selected.filter((id) => id !== item.id)\n                            : selected.concat(item.id)\n                        ),\n                      []\n                    )}\n                  />\n                </td>\n                <td>\n                  <a\n                    href=\"#\"\n                    onClick={useCallback<MouseEventHandler>(\n                      (e) => (\n                        e.preventDefault(),\n                        setExpanded((expanded) =>\n                          expanded.includes(item.id)\n                            ? expanded.filter((id) => id !== item.id)\n                            : expanded.concat(item.id)\n                        )\n                      ),\n                      []\n                    )}\n                  >\n                    {item.name}\n                  </a>\n                </td>\n                <td align=\"right\">{format(item.date, \"dd.MM.yyyy\")}</td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(item.unitValue)}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            days: 7,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            days: 14,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            months: 1,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        rates[item.id][\n                          format(\n                            sub(item.date, {\n                              months: 3,\n                            }),\n                            \"yyyy-MM-dd\"\n                          )\n                        ] -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            months: 6,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            months: 12,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            months: 24,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            months: 36,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n              </tr>,\n            ].concat(\n              expanded.includes(item.id)\n                ? [\n                    <tr key={`${i}-details`}>\n                      <td></td>\n                      <td colSpan={11}>\n                        <pre>{JSON.stringify(item, null, 2)}</pre>\n                        <pre>{JSON.stringify(rates[item.id], null, 2)}</pre>\n                      </td>\n                    </tr>,\n                  ]\n                : []\n            )\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React, {\n  ChangeEventHandler,\n  MouseEventHandler,\n  useCallback,\n  useMemo,\n  useState,\n} from \"react\";\nimport { format } from \"date-fns\";\nimport { Percent } from \"./Investments\";\nimport styles from \"./styles.module.scss\";\n\nconst getInvestmentTransaction =\n  ({\n    names,\n    rates,\n  }: {\n    names: Record<string, string>;\n    rates: Record<string, Record<string, number>>;\n  }) =>\n  ({\n    date,\n    investment_id,\n    value,\n  }: {\n    date: string;\n    investment_id: number;\n    value: number;\n  }) => {\n    if (!rates[investment_id]) {\n      return null;\n    }\n    const unitValue = rates[investment_id][date];\n    const round = 1000;\n    const units = Math.round((round * value) / unitValue) / round;\n    return {\n      name: names[investment_id],\n      date: new Date(date),\n      investment_id,\n      value: Math.round(100 * units * unitValue) / 100,\n      valueNetto: value,\n      valueBrutto: value,\n      unitValue,\n      units,\n    };\n  };\n\nexport default function Transactions({\n  transactions,\n  rates,\n  names,\n  selected,\n  setSelected,\n}: {\n  transactions: { date: string; investment_id: number; value: number }[];\n  names: Record<string, string>;\n  rates: Record<string, Record<string, number>>;\n  selected: number[];\n  setSelected: Function;\n}) {\n  const [expanded, setExpanded] = useState<number[]>([]);\n\n  const quotes = useMemo(\n    () =>\n      Object.keys(rates).reduce((result, id) => {\n        const [date, unitValue] = Object.entries(rates[id]).pop();\n\n        return Object.assign(result, {\n          [id]: {\n            date: new Date(date),\n            unitValue,\n          },\n        });\n      }, {}),\n    [rates]\n  );\n\n  const list = useMemo(\n    () =>\n      transactions\n        .map(getInvestmentTransaction({ names, rates }))\n        .filter(Boolean),\n    [transactions, names, rates]\n  );\n\n  return (\n    <div className={styles.Transactions}>\n      <h3>Transactions</h3>\n      <table>\n        <tbody>\n          <tr>\n            <th>\n              <input\n                type=\"checkbox\"\n                checked={selected.length === transactions.length}\n                onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                  ({ target }) =>\n                    setSelected(\n                      target.checked ? transactions.map((_, i) => i) : []\n                    ),\n                  []\n                )}\n              />\n            </th>\n            <th>Fundusz</th>\n            <th>Kwota transakcji</th>\n            <th>Liczba jednostek</th>\n            <th>Data wyceny jednostki</th>\n            <th>Wycena jednostki</th>\n            <th>Wartość</th>\n            <th>Data wyceny jednostki</th>\n            <th>Wycena jednostki</th>\n            <th>Wartość</th>\n            <th>%</th>\n          </tr>\n          {list.map((item, i) =>\n            [\n              <tr key={i}>\n                <td>\n                  <input\n                    type=\"checkbox\"\n                    checked={selected.includes(i)}\n                    onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                      ({ target }) =>\n                        setSelected((selected: number[]) =>\n                          !target.checked\n                            ? selected.filter((n) => n !== i)\n                            : selected.concat(i)\n                        ),\n                      []\n                    )}\n                  />\n                </td>\n                <td>\n                  <a\n                    href=\"#\"\n                    onClick={useCallback<MouseEventHandler>(\n                      (e) => (\n                        e.preventDefault(),\n                        setExpanded((expanded) =>\n                          expanded.includes(i)\n                            ? expanded.filter((n) => n !== i)\n                            : expanded.concat(i)\n                        )\n                      ),\n                      []\n                    )}\n                  >\n                    {item.name}\n                  </a>\n                </td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(item.valueNetto)}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {}).format(item.units)}\n                </td>\n                <td align=\"right\">{format(item.date, \"dd.MM.yyyy\")}</td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(item.unitValue)}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(item.value)}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  {format(quotes[item.investment_id].date, \"dd.MM.yyyy\")}\n                </td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(quotes[item.investment_id].unitValue)}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(\n                    Math.round(\n                      100 * quotes[item.investment_id].unitValue * item.units\n                    ) / 100\n                  )}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      quotes[item.investment_id].unitValue / item.unitValue - 1\n                    }\n                  />\n                </td>\n              </tr>,\n            ].concat(\n              expanded.includes(i)\n                ? [\n                    <tr key={`${i}-details`}>\n                      <td></td>\n                      <td colSpan={10}>\n                        {/* <pre>{JSON.stringify(rates[investment_id], null, 2)}</pre> */}\n                        <pre>\n                          {`Data wyceny jednostki\n${format(item.date, \"dd.MM.yyyy\")}\nData realizacji\n${format(item.date, \"dd.MM.yyyy\")}\nKwota transakcji netto w PLN\n${new Intl.NumberFormat(\"pl-PL\", {\n  minimumFractionDigits: 2,\n}).format(item.valueNetto)} PLN\nKwota transakcji brutto w PLN\n${new Intl.NumberFormat(\"pl-PL\", {\n  minimumFractionDigits: 2,\n}).format(item.valueBrutto)} PLN\nIlość jednostek po transakcji\n${new Intl.NumberFormat(\"pl-PL\", {}).format(item.units)}\nWartość jednostki w dniu wyceny\n${new Intl.NumberFormat(\"pl-PL\", {\n  minimumFractionDigits: 2,\n}).format(item.unitValue)} PLN\nWartość\n${new Intl.NumberFormat(\"pl-PL\", {\n  minimumFractionDigits: 2,\n}).format(item.value)} PLN\nOpłata manipulacyjna\n0,00 PLN / 0 %`}\n                        </pre>\n                      </td>\n                    </tr>,\n                  ]\n                : []\n            )\n          )}\n        </tbody>\n        <tfoot>\n          {[\n            list\n              .filter((_, i) => selected.includes(i))\n              .reduce(\n                ({ value, valueNetto, quote }, item) => ({\n                  value: value + item.value,\n                  valueNetto: valueNetto + item.valueNetto,\n                  quote:\n                    quote +\n                    Math.round(\n                      100 * quotes[item.investment_id].unitValue * item.units\n                    ) /\n                      100,\n                }),\n                {\n                  value: 0,\n                  valueNetto: 0,\n                  quote: 0,\n                }\n              ),\n          ].map((item, i) => (\n            <tr key={i}>\n              <td></td>\n              <td></td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.valueNetto)}\n                &nbsp;PLN\n              </td>\n              <td colSpan={3}></td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.value)}\n                &nbsp;PLN\n              </td>\n              <td colSpan={2}></td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.quote)}\n                &nbsp;PLN\n              </td>\n              <td align=\"right\">\n                <Percent value={item.quote / item.value - 1} />\n              </td>\n            </tr>\n          ))}\n        </tfoot>\n      </table>\n    </div>\n  );\n}\n","import React, {\n  ChangeEventHandler,\n  MouseEventHandler,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { Subject } from \"rxjs\";\nimport { debounceTime, distinctUntilChanged, map } from \"rxjs/operators\";\nimport { createAsset } from \"use-asset\";\nimport { format, sub } from \"date-fns\";\nimport Chart, { SyncZoomProvider } from \"../../components/ZoomableLineChart\";\nimport DonutChart from \"../../components/DonutChart\";\nimport Investments from \"./Investments\";\nimport Transactions from \"./Transactions\";\nimport styles from \"./styles.module.scss\";\n\nimport type { Meta, Item } from \"@dev/cli/src/services/QuotesService/types\";\n\nconst ERA = 24 * 3600 * 1000;\nconst DAYS = 1200;\n\n// https://github.com/pmndrs/use-asset#dealing-with-async-assets\nconst asset = createAsset(async (version) => {\n  const res = await fetch(`api/quotes/data.json?${version}`);\n  return await res.json();\n});\n\nconst getInvestmentTransactionValue =\n  ({\n    date: valueDate,\n    rates,\n  }: {\n    date: Date;\n    rates: Record<string, Record<string, number>>;\n  }) =>\n  ({\n    date,\n    investment_id,\n    value,\n  }: {\n    date: string;\n    investment_id: number;\n    value: number;\n  }) => {\n    if (!rates[investment_id]) {\n      return null;\n    }\n    const unitValue = rates[investment_id][date];\n    const round = 1000;\n    const units = Math.round((round * value) / unitValue) / round;\n    const unitValueDate = rates[investment_id][format(valueDate, \"yyyy-MM-dd\")];\n    return rates[investment_id][format(valueDate, \"yyyy-MM-dd\")]\n      ? {\n          investment_id,\n          value: Math.round(100 * units * unitValueDate) / 100,\n        }\n      : null;\n  };\n\nfunction Data({ version = \"v1\" }) {\n  const { metas, objects: results } = asset.read(version) as {\n    metas: Meta[];\n    objects: Item[];\n  };\n\n  const [transactions] = useState(() => [\n    { date: \"2018-12-28\", investment_id: 44, value: 5331.6 }, // PKO Zabezpieczenia Emerytalnego 2050\n    { date: \"2019-12-30\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n    { date: \"2020-12-28\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n    { date: \"2021-12-15\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n    { date: \"2022-01-03\", investment_id: 75, value: 1000 }, // PKO Akcji Rynku Amerykańskiego\n    { date: \"2022-02-01\", investment_id: 75, value: 1000 }, // PKO Akcji Rynku Amerykańskiego\n    { date: \"2022-02-28\", investment_id: 34, value: 1000 }, // PKO Surowców Globalny\n    { date: \"2022-03-08\", investment_id: 35, value: 1000 }, // PKO Technologii i Innowacji Globalny\n    { date: \"2022-03-11\", investment_id: 10, value: 1000 }, // PKO Akcji Nowa Europa\n    { date: \"2022-03-21\", investment_id: 36, value: 1000 }, // PKO Dóbr Luksusowych Globalny\n    { date: \"2022-03-21\", investment_id: 37, value: 1000 }, // PKO Infrastruktury i Budownictwa Globalny\n    { date: \"2022-04-01\", investment_id: 34, value: 1000 }, // PKO Surowców Globalny\n    { date: \"2022-04-11\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n    { date: \"2022-04-26\", investment_id: 34, value: 1000 }, // PKO Surowców Globalny\n  ]);\n\n  const options = useMemo(\n    () => ({\n      investment: metas\n        .map(({ id, name }) => ({ id, name }))\n        .sort((a, b) => a.name.localeCompare(b.name)),\n    }),\n    [results]\n  );\n\n  const names = useMemo(\n    () =>\n      metas.reduce(\n        (result: Record<string, string>, { id, name }) =>\n          Object.assign(result, {\n            [id]: name,\n          }),\n        {}\n      ),\n    [metas]\n  );\n\n  const rates = useMemo(\n    () =>\n      results\n        .sort((a, b) => a.date.localeCompare(b.date))\n        .reduce(\n          (\n            result: Record<string, Record<string, number>>,\n            { date, investment_id, value }\n          ) =>\n            Object.assign(result, {\n              [investment_id]: Object.assign(result[investment_id] || {}, {\n                [date]: value,\n              }),\n            }),\n          {}\n        ),\n    [results]\n  );\n\n  const [filters, setFilters] = useState(() => ({\n    investment: options.investment[0].id,\n    related: options.investment[0].id,\n    search: \"\",\n  }));\n\n  const [queries, setQueries] = useState(() => filters);\n\n  const search$ = useMemo(() => new Subject<any>(), []);\n\n  useEffect(() => {\n    const subscription = search$\n      .pipe(\n        map(({ search, ...filters }) =>\n          JSON.stringify({ ...queries, ...filters, search: search.trim() })\n        ),\n        distinctUntilChanged(),\n        debounceTime(400)\n      )\n      .subscribe((filters) =>\n        setQueries((queries) => ({ ...queries, ...JSON.parse(filters) }))\n      );\n    return () => subscription.unsubscribe();\n  }, [search$]);\n\n  useEffect(() => {\n    search$.next(filters);\n  }, [filters]);\n\n  console.log({ metas, options, filters, results, rates });\n\n  const unified = useMemo(\n    () =>\n      results\n        .map(({ investment_id, value, date }) => ({\n          investment_id,\n          value,\n          date: new Date(date),\n        }))\n        .sort(\n          (a, b) => new Date(a.date).getTime() - new Date(b.date).getTime()\n        ),\n    [results]\n  );\n\n  const from = useMemo(\n    () => unified[unified.length - 1].date.getTime() - ERA * 2000,\n    [unified]\n  );\n\n  const list = useMemo(\n    () =>\n      unified\n        .filter(({ investment_id }) =>\n          [filters.investment, filters.related].includes(investment_id)\n        )\n        .filter(({ date }) => date.getTime() > from),\n    [unified, filters]\n  );\n\n  const relation = useMemo(\n    () =>\n      Object.entries(\n        unified.reduce(\n          (result, { date, investment_id, value }) =>\n            Object.assign(result, {\n              [format(date, \"yyyy-MM-dd\")]: Object.assign(\n                result[format(date, \"yyyy-MM-dd\")] || {},\n                {\n                  [investment_id]: value,\n                }\n              ),\n            }),\n          {}\n        )\n      )\n        .map(([date, investments]) => ({\n          date: new Date(date),\n          value: investments[filters.investment] / investments[filters.related],\n        }))\n        .filter(({ date }) => date.getTime() > from),\n    [unified, filters]\n  );\n\n  const [selected, setSelected] = useState<number[]>(() =>\n    transactions.map((_, i) => i)\n  );\n  const [investmentsSelected, setInvestmentsSelected] = useState<number[]>([]);\n\n  return (\n    <div>\n      <SyncZoomProvider>\n        <fieldset>\n          <label>\n            <span>Investment</span>\n            <select\n              value={filters.investment}\n              onChange={useCallback<ChangeEventHandler<HTMLSelectElement>>(\n                ({ target }) =>\n                  setFilters((filters) => ({\n                    ...filters,\n                    investment: Number(target.value),\n                  })),\n                []\n              )}\n            >\n              {options.investment.map(({ id, name }) => (\n                <option key={id} value={id}>\n                  {name}\n                </option>\n              ))}\n            </select>\n          </label>\n        </fieldset>\n        <Chart\n          list={list.map(({ investment_id, ...item }) => ({\n            ...item,\n            group: names[investment_id],\n          }))}\n        />\n        <fieldset>\n          <label>\n            <span>Related</span>\n            <select\n              value={filters.related}\n              onChange={useCallback<ChangeEventHandler<HTMLSelectElement>>(\n                ({ target }) =>\n                  setFilters((filters) => ({\n                    ...filters,\n                    related: Number(target.value),\n                  })),\n                []\n              )}\n            >\n              {options.investment.map(({ id, name }) => (\n                <option key={id} value={id}>\n                  {name}\n                </option>\n              ))}\n            </select>\n          </label>\n          <button\n            onClick={useCallback<MouseEventHandler>(\n              (e) => (\n                e.preventDefault(),\n                setFilters(({ investment, related, ...filters }) => ({\n                  ...filters,\n                  investment: related,\n                  related: investment,\n                }))\n              ),\n              []\n            )}\n          >\n            reverse\n          </button>\n        </fieldset>\n        <Chart list={relation} />\n      </SyncZoomProvider>\n      <SyncZoomProvider>\n        <fieldset>\n          <label>\n            <span>Search</span>\n            <input\n              type=\"search\"\n              value={filters.search}\n              onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                ({ target }) =>\n                  setFilters((filters) => ({\n                    ...filters,\n                    search: target.value,\n                  })),\n                []\n              )}\n            />\n          </label>\n        </fieldset>\n        <Investments\n          investments={options.investment}\n          rates={rates}\n          selected={investmentsSelected}\n          setSelected={setInvestmentsSelected}\n        />\n        <Chart\n          list={[...Array(DAYS)]\n            .map((_, i) =>\n              sub(new Date(), {\n                days: i,\n              })\n            )\n            .reverse()\n            .map((date, i) =>\n              Object.entries(\n                transactions\n                  .filter(\n                    (transaction, i) =>\n                      new Date(transaction.date) <= date && selected.includes(i)\n                  )\n                  .map(getInvestmentTransactionValue({ date, rates }))\n                  .filter(Boolean)\n                  .reduce(\n                    (\n                      result: Record<string, number>,\n                      { value, investment_id }\n                    ) =>\n                      Object.assign(result, {\n                        [investment_id]: (result[investment_id] || 0) + value,\n                      }),\n                    {}\n                  )\n              ).map(([investment_id, value]) => ({\n                date,\n                group: names[investment_id],\n                value,\n              }))\n            )\n            .flat()}\n        />\n        <Chart\n          list={[...Array(DAYS)]\n            .map((_, i) =>\n              sub(new Date(), {\n                days: i,\n              })\n            )\n            .reverse()\n            .map((date, i) => ({\n              date,\n              value: transactions\n                .filter(\n                  (transaction, i) =>\n                    new Date(transaction.date) <= date && selected.includes(i)\n                )\n                .map(getInvestmentTransactionValue({ date, rates }))\n                .filter(Boolean)\n                .reduce(\n                  (result: Record<string, number>, { value }) => result + value,\n                  0\n                ),\n            }))\n            .filter(({ value }) => Boolean(value))}\n        />\n        <Transactions\n          transactions={transactions}\n          rates={rates}\n          names={names}\n          selected={selected}\n          setSelected={setSelected}\n        />\n      </SyncZoomProvider>\n      <DonutChart\n        list={Object.entries(\n          transactions\n            .filter((_, i) => selected.includes(i))\n            .reduce(\n              (list: Record<number, number>, item) =>\n                Object.assign(list, {\n                  [item.investment_id]:\n                    (list[item.investment_id] || 0) + item.value,\n                }),\n              {}\n            )\n        )\n          .map(([investment_id, value]) => ({\n            label: names[investment_id],\n            value,\n          }))\n          .sort((a, b) => b.value - a.value)}\n      />\n      {/* <pre>{JSON.stringify(metas, null, 2)}</pre> */}\n      {/* <pre>{JSON.stringify(list.slice(0, 5), null, 2)}</pre> */}\n    </div>\n  );\n}\n\nexport default function Section() {\n  return (\n    <div className={styles.Section}>\n      <h2>Quotes</h2>\n      <Data />\n    </div>\n  );\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".D4hghWDR6tislQFHDqDO{position:relative;padding:2em}.D4hghWDR6tislQFHDqDO svg{display:block;width:100%;height:300px;background:#f7f7f7;overflow:visible}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/DonutChart/styles.module.scss\"],\"names\":[],\"mappings\":\"AAAA,sBACE,iBAAA,CACA,WAAA,CAEA,0BACE,aAAA,CACA,UAAA,CACA,YAAA,CACA,kBAAA,CACA,gBAAA\",\"sourcesContent\":[\".Chart {\\n  position: relative;\\n  padding: 2em;\\n\\n  svg {\\n    display: block;\\n    width: 100%;\\n    height: 300px;\\n    background: #f7f7f7;\\n    overflow: visible;\\n\\n    //   rect.selection {\\n    //     stroke: none;\\n    //   }\\n  }\\n\\n  // .Tooltip {\\n  //   position: absolute;\\n  // }\\n}\\n// .Tooltip {\\n//   background: white;\\n//   border: 1px solid lightgray;\\n//   color: orange;\\n//   padding: 0.25em;\\n// }\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Chart\": \"D4hghWDR6tislQFHDqDO\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".TM2RQ5NCM80BeuU4weFg{position:relative;padding:2em}.TM2RQ5NCM80BeuU4weFg svg{display:block;width:100%;height:300px;background:#f7f7f7;overflow:visible}.TM2RQ5NCM80BeuU4weFg svg rect.D6JO0K0U9pALPDqqDDkn{stroke:none}.TM2RQ5NCM80BeuU4weFg .My38BlBqUTAUd9UrSUrO{position:absolute}.My38BlBqUTAUd9UrSUrO{background:#fff;border:1px solid #d3d3d3;color:orange;padding:.25em}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/ZoomableLineChart/styles.module.scss\"],\"names\":[],\"mappings\":\"AAAA,sBACE,iBAAA,CACA,WAAA,CAEA,0BACE,aAAA,CACA,UAAA,CACA,YAAA,CACA,kBAAA,CACA,gBAAA,CAEA,oDACE,WAAA,CAIJ,4CACE,iBAAA,CAGJ,sBACE,eAAA,CACA,wBAAA,CACA,YAAA,CACA,aAAA\",\"sourcesContent\":[\".Chart {\\n  position: relative;\\n  padding: 2em;\\n\\n  svg {\\n    display: block;\\n    width: 100%;\\n    height: 300px;\\n    background: #f7f7f7;\\n    overflow: visible;\\n\\n    rect.selection {\\n      stroke: none;\\n    }\\n  }\\n\\n  .Tooltip {\\n    position: absolute;\\n  }\\n}\\n.Tooltip {\\n  background: white;\\n  border: 1px solid lightgray;\\n  color: orange;\\n  padding: 0.25em;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Chart\": \"TM2RQ5NCM80BeuU4weFg\",\n\t\"selection\": \"D6JO0K0U9pALPDqqDDkn\",\n\t\"Tooltip\": \"My38BlBqUTAUd9UrSUrO\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"._ESpGSPPpzgrCHtLDC15{color:purple}.TdrVPL_ZKxEpsGqtgAKw,.XpEtlXAz0qkmc2pUZelh{font-family:Arial,Helvetica,sans-serif;font-size:.7em}.TdrVPL_ZKxEpsGqtgAKw table,.XpEtlXAz0qkmc2pUZelh table{border-collapse:collapse}.TdrVPL_ZKxEpsGqtgAKw table tr:hover,.XpEtlXAz0qkmc2pUZelh table tr:hover{background-color:#e0e0e0}.TdrVPL_ZKxEpsGqtgAKw tr:nth-child(even),.XpEtlXAz0qkmc2pUZelh tr:nth-child(even){background-color:#f7f7f7}.TdrVPL_ZKxEpsGqtgAKw th,.TdrVPL_ZKxEpsGqtgAKw td,.XpEtlXAz0qkmc2pUZelh th,.XpEtlXAz0qkmc2pUZelh td{padding:.25em}.B5XUoft7ajzWeLY9QZQ9{clear:both;padding:.5em 0;border:2px solid rgba(0,0,0,0);margin:.5em}.MXCudOGdPDTJtcb0KFtk{color:#000;text-align:right;width:4.5em}.MXCudOGdPDTJtcb0KFtk.oGGbruZcUCrKnRswgvhX{color:blue}.MXCudOGdPDTJtcb0KFtk.LFTPI4HvrN257b34VKog{color:green}.MXCudOGdPDTJtcb0KFtk.LFTPI4HvrN257b34VKog::before{content:\\\"↖\\\"}.MXCudOGdPDTJtcb0KFtk.IYciZuUEzLYtaU3GzLql{color:red}.MXCudOGdPDTJtcb0KFtk.IYciZuUEzLYtaU3GzLql::before{content:\\\"↘\\\"}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/containers/Quotes/styles.module.scss\"],\"names\":[],\"mappings\":\"AAAA,sBAAA,YACE,CAAA,4CAEF,sCAEE,CAAA,cACA,CAAA,wDACA,wBACE,CAAA,0EAEE,wBACE,CAAA,kFAKJ,wBACE,CAAA,oGAGJ,aAEE,CAAA,sBAGJ,UACE,CAAA,cACA,CAAA,8BACA,CAAA,WACA,CAAA,sBAEF,UACE,CAAA,gBACA,CAAA,WACA,CAAA,2CACA,UACE,CAAA,2CAEF,WACE,CAAA,mDACA,WACE,CAAA,2CAGJ,SACE,CAAA,mDACA,WACE\",\"sourcesContent\":[\".Section {\\n  color: purple;\\n}\\n.Investments,\\n.Transactions {\\n  font-family: Arial, Helvetica, sans-serif;\\n  font-size: 0.7em;\\n  table {\\n    border-collapse: collapse;\\n    tr {\\n      &:hover {\\n        background-color: #e0e0e0;\\n      }\\n    }\\n  }\\n  tr {\\n    &:nth-child(even) {\\n      background-color: #f7f7f7;\\n    }\\n  }\\n  th,\\n  td {\\n    padding: 0.25em;\\n  }\\n}\\n.Row {\\n  clear: both;\\n  padding: 0.5em 0;\\n  border: 2px solid transparent;\\n  margin: 0.5em;\\n}\\n.Percent {\\n  color: black;\\n  text-align: right;\\n  width: 4.5em;\\n  &.eq {\\n    color: blue;\\n  }\\n  &.gt {\\n    color: green;\\n    &::before {\\n      content: \\\"\\\\2196\\\";\\n    }\\n  }\\n  &.lt {\\n    color: red;\\n    &::before {\\n      content: \\\"\\\\2198\\\";\\n    }\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Section\": \"_ESpGSPPpzgrCHtLDC15\",\n\t\"Investments\": \"TdrVPL_ZKxEpsGqtgAKw\",\n\t\"Transactions\": \"XpEtlXAz0qkmc2pUZelh\",\n\t\"Row\": \"B5XUoft7ajzWeLY9QZQ9\",\n\t\"Percent\": \"MXCudOGdPDTJtcb0KFtk\",\n\t\"eq\": \"oGGbruZcUCrKnRswgvhX\",\n\t\"gt\": \"LFTPI4HvrN257b34VKog\",\n\t\"lt\": \"IYciZuUEzLYtaU3GzLql\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    return operate(function (source, subscriber) {\n        var activeTask = null;\n        var lastValue = null;\n        var lastTime = null;\n        var emit = function () {\n            if (activeTask) {\n                activeTask.unsubscribe();\n                activeTask = null;\n                var value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        function emitWhenIdle() {\n            var targetTime = lastTime + dueTime;\n            var now = scheduler.now();\n            if (now < targetTime) {\n                activeTask = this.schedule(undefined, targetTime - now);\n                subscriber.add(activeTask);\n                return;\n            }\n            emit();\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            lastValue = value;\n            lastTime = scheduler.now();\n            if (!activeTask) {\n                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n                subscriber.add(activeTask);\n            }\n        }, function () {\n            emit();\n            subscriber.complete();\n        }, undefined, function () {\n            lastValue = activeTask = null;\n        }));\n    });\n}\n//# sourceMappingURL=debounceTime.js.map","import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function distinctUntilChanged(comparator, keySelector) {\n    if (keySelector === void 0) { keySelector = identity; }\n    comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n    return operate(function (source, subscriber) {\n        var previousKey;\n        var first = true;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var currentKey = keySelector(value);\n            if (first || !comparator(previousKey, currentKey)) {\n                first = false;\n                previousKey = currentKey;\n                subscriber.next(value);\n            }\n        }));\n    });\n}\nfunction defaultCompare(a, b) {\n    return a === b;\n}\n//# sourceMappingURL=distinctUntilChanged.js.map"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","ZoomContext","createContext","SyncZoomProvider","children","events$","useMemo","Subject","Provider","value","Chart","list","move","type","stream$","useContext","id","useId","svgRef","useRef","tooltipRef","wrapperRef","dimensions","ref","useState","setDimensions","useEffect","observeTarget","current","resizeObserver","ResizeObserver","entries","forEach","entry","contentRect","observe","unobserve","useResizeObserver","currentZoomState","setCurrentZoomState","selected","setSelected","tooltip$","tooltip","select","style","subscription","pipe","switchMap","of","delay","subscribe","margin","x","y","data","wrapperRect","getBoundingClientRect","tooltipRect","transform","width","height","transition","duration","unsubscribe","group","item","svg","svgContent","xScale","scaleTime","domain","extent","d","date","range","newXScale","rescaleX","start","end","yScale","scaleLinear","map","concat","value2","lineGenerator","line","curve","curveCardinal","areaGenerator","area","y0","y1","color","scaleOrdinal","Array","from","keys","String","selectAll","join","attr","timeMonth","on","_","next","xAxis","axisBottom","tickSizeInner","call","g","yAxis","axisLeft","brush","brushX","sourceEvent","selection","zoomBehavior","zoom","scaleExtent","translateExtent","brushSelection","this","action","invertX","contains","target","zoomIdentity","translate","className","cx","styles","JSON","stringify","clipPath","addDays","dirtyDate","dirtyAmount","requiredArgs","arguments","toDate","amount","toInteger","isNaN","Date","NaN","setDate","getDate","subDays","addMonths","dayOfMonth","endOfDesiredMonth","getTime","setMonth","getMonth","daysInMonth","setFullYear","getFullYear","subMonths","sub","years","months","weeks","days","hours","minutes","seconds","dateWithoutMonths","dateWithoutDays","minutestoSub","secondstoSub","mstoSub","finalDate","groupRef","createPie","d3","sort","createArc","innerRadius","outerRadius","colors","groupWithData","exit","remove","groupWithUpdate","enter","append","merge","i","centroid","text","label","getValueNearDate","values","format","Percent","Intl","NumberFormat","minimumFractionDigits","Math","round","Investments","investments","rates","expanded","setExpanded","Object","pop","unitValue","checked","length","onChange","useCallback","key","includes","filter","href","onClick","e","preventDefault","name","align","colSpan","Transactions","transactions","names","quotes","reduce","result","assign","investment_id","units","valueNetto","valueBrutto","getInvestmentTransaction","Boolean","n","quote","asset","createAsset","version","fetch","res","json","getInvestmentTransactionValue","valueDate","unitValueDate","Data","read","metas","results","objects","investment","a","b","localeCompare","related","search","filters","setFilters","queries","setQueries","search$","trim","distinctUntilChanged","debounceTime","parse","console","log","unified","ERA","relation","investmentsSelected","setInvestmentsSelected","Number","reverse","transaction","flat","Section","___CSS_LOADER_EXPORT___","push","module","locals","dueTime","scheduler","source","subscriber","activeTask","lastValue","lastTime","emit","emitWhenIdle","targetTime","now","schedule","add","complete","comparator","keySelector","defaultCompare","previousKey","first","currentKey"],"sourceRoot":""}