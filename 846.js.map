{"version":3,"file":"846.js","mappings":"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","sources":["webpack://@dev/web/../../node_modules/date-fns/esm/addDays/index.js","webpack://@dev/web/../../node_modules/date-fns/esm/subDays/index.js","webpack://@dev/web/../../node_modules/date-fns/esm/addMonths/index.js","webpack://@dev/web/../../node_modules/date-fns/esm/subMonths/index.js","webpack://@dev/web/./src/containers/Quotes/Chart.module.scss?912e","webpack://@dev/web/./src/containers/Quotes/ZoomableLineChart.tsx","webpack://@dev/web/./src/containers/Quotes/styles.module.scss?548c","webpack://@dev/web/./src/containers/Quotes/index.tsx","webpack://@dev/web/../../node_modules/date-fns/esm/sub/index.js","webpack://@dev/web/./src/hooks/useResizeObserver.ts","webpack://@dev/web/./src/containers/Quotes/Chart.module.scss","webpack://@dev/web/./src/containers/Quotes/styles.module.scss","webpack://@dev/web/../../node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js","webpack://@dev/web/../../node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js"],"sourcesContent":["import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\n\nexport default function subDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\n\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  var dayOfMonth = date.getDate(); // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./Chart.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./Chart.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\n// import { format } from \"date-fns\";\n// import { axisBottom, axisLeft, select, scaleLinear, timeFormat } from \"d3\";\n// import * as d3 from \"d3\";\nimport {\n  ZoomTransform,\n  extent,\n  group,\n  select,\n  scaleLinear,\n  scaleOrdinal,\n  scaleTime,\n  line,\n  max,\n  curveCardinal,\n  axisBottom,\n  axisLeft,\n  zoom,\n} from \"d3\";\n\nimport { Subject, of } from \"rxjs\";\nimport { delay, switchMap } from \"rxjs/operators\";\nimport useResizeObserver from \"../../hooks/useResizeObserver\";\nimport cx from \"classnames\";\nimport styles from \"./Chart.module.scss\";\n\n// https://github.com/muratkemaldar/using-react-hooks-with-d3/tree/16-zoomable-line-chart\nexport default function Chart({\n  list,\n}: {\n  list: { group: string; date: Date; value: number }[];\n}) {\n  const id = useMemo(() => \"myZoomableLineChart\", []);\n  const svgRef = useRef<SVGSVGElement>(null);\n  const tooltipRef = useRef<HTMLDivElement>(null);\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const dimensions = useResizeObserver(wrapperRef);\n  const [currentZoomState, setCurrentZoomState] = useState<ZoomTransform>();\n  const [selected, setSelected] = useState<object | null>(null);\n\n  const tooltip$ = useMemo(\n    () => new Subject<{ x: number; y: number; data: object } | null>(),\n    []\n  );\n\n  useEffect(() => {\n    const tooltip = select(tooltipRef.current)\n      .style(\"opacity\", 0)\n      .style(\"pointer-events\", \"none\");\n\n    const subscription = tooltip$\n      .pipe(\n        switchMap((selected) => of(selected).pipe(delay(selected ? 0 : 400)))\n      )\n      .subscribe((selected) => {\n        // console.log({selected})\n        if (selected) {\n          const { x, y, data } = selected;\n          const transform = `translate(${x + 30}px,${y - 30}px)`;\n\n          if (tooltip.style(\"opacity\") === \"0\") {\n            tooltip.style(\"transform\", transform);\n          }\n\n          tooltip\n            .transition()\n            .duration(300)\n            .style(\"opacity\", 0.9)\n            .style(\"transform\", transform);\n\n          setSelected(data);\n        } else {\n          tooltip.transition().duration(300).style(\"opacity\", 0);\n        }\n      });\n    return () => subscription.unsubscribe();\n  }, [tooltip$]);\n\n  //   const svg = el\n  //     .append(\"g\")\n  //     .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n  //     .on(\"touchstart\", (event) => event.preventDefault())\n  //     .on(\"pointermove\", pointermoved);\n\n  //   const formatDate = (date) => format(date, \"yyyy-MM-dd\");\n\n  //   function update(date) {\n  //     // date = Xs[d3.bisectCenter(Xs, date)];\n  //     rule.attr(\"transform\", `translate(${xScale(date)},0)`);\n  //     ruleLabel.text(formatDate(date));\n  //     // serie.attr(\"transform\", ([, I]) => {\n  //     //   const i = I[d3.bisector(i => X[i]).center(I, date)];\n  //     //   return `translate(0,${yScale(1) - yScale(Y[i] / Y[I[0]])})`;\n  //     // });\n  //     // svg.property(\"value\", date).dispatch(\"input\", {bubbles: true}); // for viewof\n  //   }\n\n  //   function pointermoved(event) {\n  //     update(xScale.invert(d3.pointer(event)[0]));\n  //   }\n\n  //   const rule = svg.append(\"g\");\n\n  //   rule\n  //     .append(\"line\")\n  //     .attr(\"y1\", margin.top)\n  //     .attr(\"y2\", height - margin.bottom - 15)\n  //     .attr(\"stroke\", \"currentColor\");\n\n  //   const ruleLabel = rule\n  //     .append(\"text\")\n  //     .attr(\"y\", height - margin.bottom - 15)\n  //     .attr(\"fill\", \"currentColor\")\n  //     .attr(\"text-anchor\", \"middle\")\n  //     .attr(\"dy\", \"1em\");\n\n  //   // const dataset = list.map((item) => [\n  //   //   new Date(item.date),\n  //   //   item.value,\n  //   //   `${item.date}, ${item.value}`,\n  //   // ]);\n\n  //   // const xx = dataset.map(([x = 0]) => x);\n  //   // const yy = dataset.map(([, y = 0]) => y);\n\n  //   // // const xDomain = [Math.min(...xx), Math.max(...xx)];\n  //   // const xDomain = [new Date('2020-01-01'), Math.max(...xx)];\n  //   // const yDomain = [0, Math.max(...yy)];\n\n  //   // const xScale = scaleLinear()\n  //   //   .domain(xDomain)\n  //   //   .range([left, width - right]);\n\n  //   // const yScale = scaleLinear()\n  //   //   .domain(yDomain)\n  //   //   .range([height - bottom, top]);\n\n  //   // const color = scaleLinear().domain(yDomain).range([\"red\", \"blue\"]);\n\n  //   // select(containerRef.current).selectAll(\"circle\").remove();\n  //   // select(containerRef.current)\n  //   //   .selectAll(\"circle\")\n  //   //   .data(dataset)\n  //   //   .join(\n  //   //     (enter) =>\n  //   //       enter\n  //   //         .append(\"circle\")\n  //   //         .attr(\"cx\", ([x = 0]) => xScale(x))\n  //   //         .attr(\"cy\", ([, y = 0]) => yScale(y))\n  //   //         .attr(\"r\", 0)\n  //   //         .attr(\"fill\", ([x = 0]) => color(x))\n  //   //         .on(\"mouseover\", (e, [, , label]) =>\n  //   //           selected$.next({ left: e.layerX, top: e.layerY, label })\n  //   //         )\n  //   //         .on(\"mouseout\", () => selected$.next(null))\n  //   //         .call((enter) =>\n  //   //           enter.transition().duration(200).attr(\"r\", 2).style(\"opacity\", 1)\n  //   //         ),\n  //   //     (update) => update.attr(\"fill\", \"lightgrey\"),\n  //   //     (exit) =>\n  //   //       exit\n  //   //         .attr(\"fill\", \"tomato\")\n  //   //         .call((exit) =>\n  //   //           exit\n  //   //             .transition()\n  //   //             .duration(200)\n  //   //             .attr(\"r\", 0)\n  //   //             .style(\"opacity\", 0)\n  //   //             .remove()\n  //   //         )\n  //   //   );\n\n  useEffect(() => {\n    if (!wrapperRef.current || !svgRef.current) {\n      return;\n    }\n    const svg = select<Element, unknown>(svgRef.current);\n    const svgContent = svg.select(\".content\");\n    const { width, height } =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n\n    const data = group(list, (item) => item.group);\n    console.log({ data });\n\n    // scales + line generator\n    const xScale = scaleTime()\n      .domain(extent(list, (d) => d.date))\n      .range([10, width - 10]);\n\n    if (currentZoomState) {\n      const newXScale = currentZoomState.rescaleX(xScale);\n      xScale.domain(newXScale.domain());\n    }\n\n    const yScale = scaleLinear()\n      .domain([0, max(list, (d) => d.value)])\n      .range([height - 10, 10]);\n\n    const lineGenerator = line()\n      .x((d) => xScale(d.date))\n      .y((d) => yScale(d.value))\n      .curve(curveCardinal);\n\n    const color = scaleOrdinal()\n      .domain(Array.from(data.keys(), String))\n      .range([\n        \"#e41a1c\",\n        \"#377eb8\",\n        \"#4daf4a\",\n        \"#984ea3\",\n        \"#ff7f00\",\n        \"#ffff33\",\n        \"#a65628\",\n        \"#f781bf\",\n        \"#999999\",\n      ]);\n\n    // render the line\n    svgContent\n      .selectAll(\".myLine\")\n      .data(data)\n      .join(\"path\")\n      .attr(\"class\", \"myLine\")\n      .attr(\"stroke\", (d) => color(d[0]))\n      .attr(\"fill\", \"none\")\n      .attr(\"d\", (d) => lineGenerator(d[1]));\n\n    svgContent\n      .selectAll(\".myDot\")\n      .data(list)\n      .join(\"circle\")\n      .attr(\"class\", \"myDot\")\n      .attr(\"stroke\", \"black\")\n      .attr(\"r\", 3)\n      .attr(\"fill\", (d) => color(d.group))\n      .attr(\"cx\", (d) => xScale(d.date))\n      .attr(\"cy\", (d) => yScale(d.value))\n      .on(\"mouseenter\", (_, data) => {\n        const x = xScale(data.date);\n        const y = yScale(data.value);\n        tooltip$.next({ x, y, data });\n      })\n      .on(\"mouseleave\", () => {\n        tooltip$.next(null);\n      });\n\n    // https://github.com/d3/d3-axis/blob/v3.0.0/README.md#axis_tickSizeInner\n    // https://observablehq.com/@d3/styled-axes?collection=@d3/d3-axis\n    const margin = {\n      top: 10,\n      bottom: 10,\n      left: 10,\n      right: 10,\n    };\n\n    // axes\n    const xAxis = axisBottom(xScale).tickSizeInner(\n      margin.top + margin.bottom - height\n    );\n    svg\n      .select<SVGGElement>(\".x-axis\")\n      .attr(\"transform\", `translate(0, ${height})`)\n      .call(xAxis)\n      .call((g) =>\n        g\n          .selectAll(\".tick line\")\n          .attr(\"transform\", `translate(0,${-margin.bottom})`)\n          .attr(\"stroke-opacity\", 0.5)\n          .attr(\"stroke-dasharray\", \"2,2\")\n      );\n\n    const yAxis = axisLeft(yScale).tickSizeInner(\n      margin.left + margin.right - width\n    );\n    svg\n      .select<SVGGElement>(\".y-axis\")\n      .call(yAxis)\n      .call((g) =>\n        g\n          .selectAll(\".tick line\")\n          .attr(\"transform\", `translate(${margin.left},0)`)\n          .attr(\"stroke-opacity\", 0.5)\n          .attr(\"stroke-dasharray\", \"2,2\")\n      );\n\n    // zoom\n    const zoomBehavior = zoom()\n      .scaleExtent([1, 15])\n      .translateExtent([\n        [0, 0],\n        [width, height],\n      ])\n      .on(\"zoom\", (event) => {\n        const zoomState = event.transform;\n        setCurrentZoomState(zoomState);\n      });\n\n    svg.call(zoomBehavior);\n  }, [currentZoomState, list, dimensions]);\n\n  return (\n    <div className={cx(styles.Chart)} ref={wrapperRef}>\n      <div ref={tooltipRef} className={styles.Tooltip}>\n        {selected && <pre>{JSON.stringify(selected, null, 2)}</pre>}\n      </div>\n      <svg ref={svgRef}>\n        <defs>\n          <clipPath id={id}>\n            <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" />\n          </clipPath>\n        </defs>\n        <g className=\"content\" clipPath={`url(#${id})`}></g>\n        <g className=\"x-axis\" />\n        <g className=\"y-axis\" />\n      </svg>\n    </div>\n  );\n}\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Subject } from \"rxjs\";\nimport { debounceTime, distinctUntilChanged, map } from \"rxjs/operators\";\nimport { createAsset } from \"use-asset\";\nimport { format, sub } from \"date-fns\";\nimport Chart from \"./ZoomableLineChart\";\nimport styles from \"./styles.module.scss\";\n\nimport type { Meta, Item } from \"@dev/cli/src/services/QuotesService/types\";\n\nconst ERA = 24 * 3600 * 1000;\n\n// https://github.com/pmndrs/use-asset#dealing-with-async-assets\nconst asset = createAsset(async (version) => {\n  const res = await fetch(`api/quotes/data.json?${version}`);\n  return await res.json();\n});\n\nfunction Data({ version = \"v1\" }) {\n  const { metas, objects: results } = asset.read(version) as {\n    metas: Meta[];\n    objects: Item[];\n  };\n\n  const options = useMemo(\n    () => ({\n      investment: metas\n        .map(({ id, name }) => ({ id, name }))\n        .sort((a, b) => a.name.localeCompare(b.name)),\n    }),\n    [results]\n  );\n\n  const names = useMemo(\n    () =>\n      metas.reduce(\n        (result: Record<string, string>, { id, name }) =>\n          Object.assign(result, {\n            [id]: name,\n          }),\n        {}\n      ),\n    [metas]\n  );\n\n  const rates = useMemo(\n    () =>\n      results.reduce(\n        (\n          result: Record<string, Record<string, number>>,\n          { date, investment_id, value }\n        ) =>\n          Object.assign(result, {\n            [investment_id]: Object.assign(result[investment_id] || {}, {\n              [date]: value,\n            }),\n          }),\n        {}\n      ),\n    [results]\n  );\n\n  const [transactions] = useState(() => [\n    { date: \"2022-02-01\", investment_id: 75, value: 1000 }, // PKO Akcji Rynku Amerykańskiego\n    { date: \"2022-02-28\", investment_id: 34, value: 1000 }, // PKO Surowców Globalny\n    { date: \"2022-03-08\", investment_id: 35, value: 1000 }, // PKO Technologii i Innowacji Globalny\n    { date: \"2022-03-01\", investment_id: 75, value: 1000 }, // PKO Akcji Rynku Amerykańskiego\n    { date: \"2022-03-11\", investment_id: 10, value: 1000 }, // PKO Akcji Nowa Europa\n    { date: \"2022-03-21\", investment_id: 36, value: 1000 }, // PKO Dóbr Luksusowych Globalny\n    { date: \"2022-03-21\", investment_id: 37, value: 1000 }, // PKO Infrastruktury i Budownictwa Globalny\n    { date: \"2022-04-01\", investment_id: 34, value: 1000 }, // PKO Surowców Globalny\n  ]);\n\n  const [filters, setFilters] = useState(() => ({\n    investment: options.investment[0].id,\n    search: \"\",\n  }));\n\n  const [queries, setQueries] = useState(() => filters);\n\n  const search$ = useMemo(() => new Subject<any>(), []);\n\n  useEffect(() => {\n    const subscription = search$\n      .pipe(\n        map(({ search, ...filters }) =>\n          JSON.stringify({ ...queries, ...filters, search: search.trim() })\n        ),\n        distinctUntilChanged(),\n        debounceTime(400)\n      )\n      .subscribe((filters) =>\n        setQueries((queries) => ({ ...queries, ...JSON.parse(filters) }))\n      );\n    return () => subscription.unsubscribe();\n  }, [search$]);\n\n  useEffect(() => {\n    search$.next(filters);\n  }, [filters]);\n\n  console.log({ metas, options, filters, results, rates });\n\n  const unified = useMemo(\n    () =>\n      results\n        .map(({ investment_id, value, date }) => ({\n          investment_id,\n          value,\n          date: new Date(date),\n        }))\n        .sort(\n          (a, b) => new Date(a.date).getTime() - new Date(b.date).getTime()\n        ),\n    [results]\n  );\n\n  const from = useMemo(\n    () => unified[unified.length - 1].date.getTime() - ERA * 2000,\n    [unified]\n  );\n\n  const list = useMemo(\n    () =>\n      unified\n        .filter(({ investment_id }) =>\n          [filters.investment].includes(investment_id)\n        )\n        .filter(({ date }) => date.getTime() > from),\n    [unified, filters]\n  );\n\n  return (\n    <div>\n      <fieldset>\n        <label>\n          <span>Investment</span>\n          <select\n            value={filters.investment}\n            onChange={useCallback(\n              ({ target }) =>\n                setFilters((filters) => ({\n                  ...filters,\n                  investment: Number(target.value),\n                })),\n              []\n            )}\n          >\n            {options.investment.map(({ id, name }) => (\n              <option key={id} value={id}>\n                {name}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label>\n          <span>Search</span>\n          <input\n            type=\"search\"\n            value={filters.search}\n            onChange={useCallback(\n              ({ target }) =>\n                setFilters((filters) => ({\n                  ...filters,\n                  search: target.value,\n                })),\n              []\n            )}\n          />\n        </label>\n      </fieldset>\n      <Chart\n        list={list.map(({ investment_id, ...item }) => ({\n          ...item,\n          group: names[investment_id],\n        }))}\n      />\n      <Chart\n        list={[...Array(120)]\n          .map((_, i) =>\n            sub(new Date(), {\n              days: i,\n            })\n          )\n          .reverse()\n          .map((date, i) =>\n            Object.entries(\n              transactions\n                .filter((transaction) => new Date(transaction.date) <= date)\n                .map(getInvestmentTransactionValue({ date, rates }))\n                .filter(Boolean)\n                .reduce(\n                  (result: Record<string, number>, { value, investment_id }) =>\n                    Object.assign(result, {\n                      [investment_id]: (result[investment_id] || 0) + value,\n                    }),\n                  {}\n                )\n            ).map(([investment_id, value]) => ({\n              date,\n              group: names[investment_id],\n              value,\n            }))\n          )\n          .flat()}\n      />\n      <Transactions transactions={transactions} rates={rates} names={names} />\n      {options.investment.map(({ id, name }) => (\n        <div key={id}>\n          <h3>{name}</h3>\n          {/* <Chart list={list[id]} /> */}\n        </div>\n      ))}\n      <pre>{JSON.stringify(metas, null, 2)}</pre>\n      <pre>{JSON.stringify(list.slice(0, 5), null, 2)}</pre>\n    </div>\n  );\n}\n\nconst getInvestmentTransactionValue =\n  ({\n    date: valueDate,\n    rates,\n  }: {\n    date: Date;\n    rates: Record<string, Record<string, number>>;\n  }) =>\n  ({\n    date,\n    investment_id,\n    value,\n  }: {\n    date: string;\n    investment_id: number;\n    value: number;\n  }) => {\n    const unitValue = rates[investment_id][date];\n    const round = 1000;\n    const units = Math.round((round * value) / unitValue) / round;\n    const unitValueDate = rates[investment_id][format(valueDate, \"yyyy-MM-dd\")];\n    return rates[investment_id][format(valueDate, \"yyyy-MM-dd\")]\n      ? {\n          investment_id,\n          value: Math.round(100 * units * unitValueDate) / 100,\n        }\n      : null;\n  };\n\nconst getInvestmentTransaction =\n  ({\n    names,\n    rates,\n  }: {\n    names: Record<string, string>;\n    rates: Record<string, Record<string, number>>;\n  }) =>\n  ({\n    date,\n    investment_id,\n    value,\n  }: {\n    date: string;\n    investment_id: number;\n    value: number;\n  }) => {\n    const unitValue = rates[investment_id][date];\n    const round = 1000;\n    const units = Math.round((round * value) / unitValue) / round;\n    return {\n      name: names[investment_id],\n      date: new Date(date),\n      investment_id,\n      value: Math.round(100 * units * unitValue) / 100,\n      valueNetto: value,\n      valueBrutto: value,\n      unitValue,\n      units,\n    };\n  };\n\nfunction Transactions({\n  transactions,\n  rates,\n  names,\n}: {\n  transactions: { date: string; investment_id: number; value: number }[];\n  names: Record<string, string>;\n  rates: Record<string, Record<string, number>>;\n}) {\n  return (\n    <div className={styles.Transactions}>\n      <h3>Transactions</h3>\n      <table>\n        <tbody>\n          {transactions\n            .map(getInvestmentTransaction({ names, rates }))\n            .map((item, i) => (\n              <tr key={i}>\n                <td>\n                  <div>{item.name}</div>\n                  {/* <pre>{JSON.stringify(rates[investment_id], null, 2)}</pre> */}\n                  <pre>\n                    {`Data wyceny jednostki\n${format(item.date, \"yyyy-MM-dd\")}\nData realizacji\n28.02.2022\nKwota transakcji netto w PLN\n${new Intl.NumberFormat(\"pl-PL\", {\n  minimumFractionDigits: 2,\n}).format(item.valueNetto)} PLN\n1 000,00 PLN\nKwota transakcji brutto w PLN\n${new Intl.NumberFormat(\"pl-PL\", {\n  minimumFractionDigits: 2,\n}).format(item.valueBrutto)} PLN\nIlość jednostek po transakcji\n${item.units}\n4,483\nWartość jednostki w dniu wyceny\n${new Intl.NumberFormat().format(item.unitValue)} PLN\n223,05 PLN\nWartość\n${new Intl.NumberFormat(\"pl-PL\", {\n  minimumFractionDigits: 2,\n}).format(item.value)} PLN\n999,93 PLN\nOpłata manipulacyjna\n0,00 PLN / 0 %`}\n                  </pre>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default function Section() {\n  return (\n    <div className={styles.Section}>\n      <h2>Quotes</h2>\n      <Data />\n    </div>\n  );\n}\n","import subDays from \"../subDays/index.js\";\nimport subMonths from \"../subMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\n\nexport default function sub(date, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = duration.years ? toInteger(duration.years) : 0;\n  var months = duration.months ? toInteger(duration.months) : 0;\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\n  var days = duration.days ? toInteger(duration.days) : 0;\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0; // Subtract years and months\n\n  var dateWithoutMonths = subMonths(date, months + years * 12); // Subtract weeks and days\n\n  var dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7); // Subtract hours, minutes and seconds\n\n  var minutestoSub = minutes + hours * 60;\n  var secondstoSub = seconds + minutestoSub * 60;\n  var mstoSub = secondstoSub * 1000;\n  var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);\n  return finalDate;\n}","import { RefObject, useEffect, useState } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\n// https://github.com/muratkemaldar/using-react-hooks-with-d3/blob/16-zoomable-line-chart/src/useResizeObserver.js\nexport default function useResizeObserver(ref: RefObject<Element>) {\n  const [dimensions, setDimensions] = useState<DOMRect | null>(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    if (observeTarget) {\n      const resizeObserver = new ResizeObserver((entries) => {\n        entries.forEach((entry) => {\n          setDimensions(entry.contentRect);\n        });\n      });\n      resizeObserver.observe(observeTarget);\n      return () => {\n        resizeObserver.unobserve(observeTarget);\n      };\n    }\n  }, [ref]);\n  return dimensions;\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".eVHbCENbT49QC3XWmnbd{position:relative;padding:2em}.eVHbCENbT49QC3XWmnbd svg{display:block;width:100%;height:300px;background:#f7f7f7;overflow:visible}.eVHbCENbT49QC3XWmnbd svg rect.orZ_7L91D_VhmxnTCGa4{stroke:none}.eVHbCENbT49QC3XWmnbd .w_36iD1m0f9OQ1GS1rMv{position:absolute}.w_36iD1m0f9OQ1GS1rMv{background:#fff;border:1px solid #d3d3d3;color:orange;padding:.25em}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/containers/Quotes/Chart.module.scss\"],\"names\":[],\"mappings\":\"AAAA,sBACE,iBAAA,CACA,WAAA,CAEA,0BACE,aAAA,CACA,UAAA,CACA,YAAA,CACA,kBAAA,CACA,gBAAA,CAEA,oDACE,WAAA,CAIJ,4CACE,iBAAA,CAGJ,sBACE,eAAA,CACA,wBAAA,CACA,YAAA,CACA,aAAA\",\"sourcesContent\":[\".Chart {\\n  position: relative;\\n  padding: 2em;\\n\\n  svg {\\n    display: block;\\n    width: 100%;\\n    height: 300px;\\n    background: #f7f7f7;\\n    overflow: visible;\\n\\n    rect.selection {\\n      stroke: none;\\n    }\\n  }\\n\\n  .Tooltip {\\n    position: absolute;\\n  }\\n}\\n.Tooltip {\\n  background: white;\\n  border: 1px solid lightgray;\\n  color: orange;\\n  padding: 0.25em;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Chart\": \"eVHbCENbT49QC3XWmnbd\",\n\t\"selection\": \"orZ_7L91D_VhmxnTCGa4\",\n\t\"Tooltip\": \"w_36iD1m0f9OQ1GS1rMv\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"._ESpGSPPpzgrCHtLDC15{color:purple}.B5XUoft7ajzWeLY9QZQ9{clear:both;padding:.5em 0;border:2px solid rgba(0,0,0,0);margin:.5em}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/containers/Quotes/styles.module.scss\"],\"names\":[],\"mappings\":\"AAAA,sBACE,YAAA,CAEF,sBACE,UAAA,CACA,cAAA,CACA,8BAAA,CACA,WAAA\",\"sourcesContent\":[\".Section {\\n  color: purple;\\n}\\n.Row {\\n  clear: both;\\n  padding: 0.5em 0;\\n  border: 2px solid transparent;\\n  margin: 0.5em;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Section\": \"_ESpGSPPpzgrCHtLDC15\",\n\t\"Row\": \"B5XUoft7ajzWeLY9QZQ9\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    return operate(function (source, subscriber) {\n        var activeTask = null;\n        var lastValue = null;\n        var lastTime = null;\n        var emit = function () {\n            if (activeTask) {\n                activeTask.unsubscribe();\n                activeTask = null;\n                var value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        function emitWhenIdle() {\n            var targetTime = lastTime + dueTime;\n            var now = scheduler.now();\n            if (now < targetTime) {\n                activeTask = this.schedule(undefined, targetTime - now);\n                subscriber.add(activeTask);\n                return;\n            }\n            emit();\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            lastValue = value;\n            lastTime = scheduler.now();\n            if (!activeTask) {\n                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n                subscriber.add(activeTask);\n            }\n        }, function () {\n            emit();\n            subscriber.complete();\n        }, undefined, function () {\n            lastValue = activeTask = null;\n        }));\n    });\n}\n//# sourceMappingURL=debounceTime.js.map","import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function distinctUntilChanged(comparator, keySelector) {\n    if (keySelector === void 0) { keySelector = identity; }\n    comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n    return operate(function (source, subscriber) {\n        var previousKey;\n        var first = true;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var currentKey = keySelector(value);\n            if (first || !comparator(previousKey, currentKey)) {\n                first = false;\n                previousKey = currentKey;\n                subscriber.next(value);\n            }\n        }));\n    });\n}\nfunction defaultCompare(a, b) {\n    return a === b;\n}\n//# sourceMappingURL=distinctUntilChanged.js.map"],"names":["addDays","dirtyDate","dirtyAmount","requiredArgs","arguments","date","toDate","amount","toInteger","isNaN","Date","NaN","setDate","getDate","subDays","addMonths","dayOfMonth","endOfDesiredMonth","getTime","setMonth","getMonth","daysInMonth","setFullYear","getFullYear","subMonths","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","Chart","list","id","useMemo","svgRef","useRef","tooltipRef","wrapperRef","dimensions","useResizeObserver","useState","currentZoomState","setCurrentZoomState","selected","setSelected","tooltip$","Subject","useEffect","tooltip","select","current","style","subscription","pipe","switchMap","of","delay","subscribe","x","y","data","transform","transition","duration","unsubscribe","svg","svgContent","getBoundingClientRect","width","height","group","item","console","log","xScale","scaleTime","domain","extent","d","range","newXScale","rescaleX","yScale","scaleLinear","max","value","lineGenerator","line","curve","curveCardinal","color","scaleOrdinal","Array","from","keys","String","selectAll","join","attr","on","_","next","xAxis","axisBottom","tickSizeInner","margin","call","g","yAxis","axisLeft","zoomBehavior","zoom","scaleExtent","translateExtent","event","zoomState","className","cx","styles","ref","JSON","stringify","clipPath","asset","createAsset","version","fetch","res","json","Data","read","metas","results","objects","investment","map","name","sort","a","b","localeCompare","names","reduce","result","Object","assign","rates","investment_id","transactions","search","filters","setFilters","queries","setQueries","search$","trim","distinctUntilChanged","debounceTime","parse","unified","length","ERA","filter","includes","onChange","useCallback","target","Number","key","type","i","years","months","weeks","days","hours","minutes","seconds","dateWithoutDays","mstoSub","sub","reverse","entries","transaction","getInvestmentTransactionValue","Boolean","flat","Transactions","slice","valueDate","unitValue","units","Math","round","unitValueDate","format","valueNetto","valueBrutto","getInvestmentTransaction","Intl","NumberFormat","minimumFractionDigits","Section","setDimensions","observeTarget","resizeObserver","ResizeObserver","forEach","entry","contentRect","observe","unobserve","___CSS_LOADER_EXPORT___","push","module","locals","dueTime","scheduler","source","subscriber","activeTask","lastValue","lastTime","emit","emitWhenIdle","targetTime","now","this","schedule","add","complete","comparator","keySelector","defaultCompare","previousKey","first","currentKey"],"sourceRoot":""}