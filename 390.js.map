{"version":3,"file":"390.js","mappings":"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","sources":["webpack://@dev/web/./src/components/Json/index.tsx","webpack://@dev/web/./src/containers/Properties/Location/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport function Json({ children }: { children: object }) {\n  const [expand, setExpand] = useState(false);\n\n  return (\n    <pre>\n      {expand ? (\n        JSON.stringify(children, null, 2)\n      ) : (\n        <>\n          [\n          <a\n            href=\"#\"\n            onClick={(event) => (event.preventDefault(), setExpand(true))}\n          >\n            ...\n          </a>\n          ]\n        </>\n      )}\n    </pre>\n  );\n}\n","import React, { Suspense, useCallback, useMemo, useState } from \"react\";\nimport { createAsset } from \"use-asset\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCrosshairs,\n  faMapMarkerAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Json } from \"../../../components/Json\";\nimport { Link } from \"../../../components/Link\";\n\nimport type {\n  DirectionsType,\n  LatLng,\n} from \"@dev/cli/src/services/DirectionsService/types\";\n\ntype TravelMode = \"driving\" | \"walking\" | \"bicycling\" | \"transit\";\n\n// https://developers.google.com/maps/documentation/urls/get-started#search-examples\nexport function Location({ coordinates: { latitude, longitude } }: any) {\n  // const link = usePlace([`${latitude},${longitude}|${canonical}`]);\n  // https://stackoverflow.com/questions/2660201/what-parameters-should-i-use-in-a-google-maps-url-to-go-to-a-lat-lon\n  const link = `//www.google.pl/maps?t=k&q=loc:${latitude}+${longitude}&hl=pl`;\n\n  return (\n    <Link href={link} rel=\"\" target=\"map\" style={{ margin: \"0 .25em\" }}>\n      <FontAwesomeIcon icon={faMapMarkerAlt} />\n    </Link>\n  );\n}\n\nexport function getDirectionsLink(\n  origin: string,\n  destination = \"52.2268,20.9921\",\n  travelmode: TravelMode = \"driving\"\n) {\n  return `//www.google.com/maps/dir/?api=1&origin=${encodeURIComponent(\n    origin\n  )}&destination=${encodeURIComponent(\n    destination\n  )}&travelmode=${encodeURIComponent(travelmode)}&hl=pl`;\n}\n\n// https://developers.google.com/maps/documentation/urls/get-started#directions-examples\nexport function Directions({ coordinates: { latitude, longitude } }: any) {\n  const origin = `${latitude},${longitude}`;\n\n  return (\n    <Link\n      href={getDirectionsLink(origin)}\n      rel=\"\"\n      target=\"map\"\n      style={{ margin: \"0 .25em\" }}\n    >\n      <FontAwesomeIcon icon={faCrosshairs} />\n    </Link>\n  );\n}\n\n// https://github.com/pmndrs/use-asset#dealing-with-async-assets\nconst asset = createAsset(async (travelmode) => {\n  const res = await fetch(\n    `api/directions/data.json?${new URLSearchParams({ travelmode })}`\n  );\n  return await res.json().then<DirectionsType[]>((result) => result);\n});\n\nconst formatKey = (n: number) => String(Math.round(n * 10000));\n\nconst createKey = ({\n  travel_mode,\n  start_location,\n  end_location,\n}: {\n  travel_mode: string;\n  start_location: LatLng;\n  end_location: LatLng;\n}) =>\n  [travel_mode]\n    .concat(\n      [\n        start_location.lat,\n        start_location.lng,\n        end_location.lat,\n        end_location.lng,\n      ].map(formatKey)\n    )\n    .join(\":\");\n\nconst normalize = (id: string) =>\n  (([_, start_location, end_location, travel_mode]) =>\n    [travel_mode]\n      .concat(\n        start_location.split(\",\").map(Number).map(formatKey),\n        end_location.split(\",\").map(Number).map(formatKey)\n      )\n      .join(\":\"))(id.split(\":\"));\n\nconst processAsset = createAsset((url) =>\n  fetch(\"api/process\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      data: {\n        url,\n      },\n      opts: {\n        delay: 1000,\n      },\n    }),\n  })\n);\n\nfunction ProcessUrl({ url }: { url: string }) {\n  processAsset.read(url);\n\n  return null;\n}\n\nexport function DistanceAndDuration({\n  coordinates: { latitude, longitude },\n  travelmode = \"driving\",\n}: {\n  coordinates: { latitude: number; longitude: number };\n  travelmode?: TravelMode;\n}) {\n  const [process, setProcess] = useState(false);\n  const origin = `${latitude},${longitude}`;\n  const destination = \"52.2268,20.9921\";\n  const results = asset.read(travelmode); // As many cache keys as you need\n  const records = useMemo(\n    () =>\n      results.reduce<Record<string, DirectionsType[\"directions\"]>>(\n        (records, { id, directions }) =>\n          Object.assign(records, {\n            [normalize(id)]: directions,\n          }),\n        {}\n      ),\n    [results]\n  );\n  const key = useMemo(\n    () =>\n      createKey({\n        travel_mode: travelmode,\n        start_location: (([lat, lng]) => ({ lat, lng }))(\n          origin.split(\",\").map(Number)\n        ),\n        end_location: (([lat, lng]) => ({ lat, lng }))(\n          destination.split(\",\").map(Number)\n        ),\n      }),\n    [travelmode, origin, destination]\n  );\n\n  return key in records ? (\n    <div>\n      <span>\n        {records[key]\n          .map(\n            ({ distance, duration }) => `${distance.text} (${duration.text})`\n          )\n          .join(\", \")}\n      </span>\n      <Json>{records[key]}</Json>\n    </div>\n  ) : (\n    <div>\n      <button disabled={process} onClick={() => setProcess(true)}>\n        {process ? \"Processing...\" : \"Get Directions\"}\n      </button>\n      <Suspense>\n        {process && (\n          <ProcessUrl\n            url={`https:${getDirectionsLink(origin, destination, travelmode)}`}\n          />\n        )}\n      </Suspense>\n    </div>\n  );\n}\n"],"names":["Json","children","useState","expand","setExpand","JSON","stringify","href","onClick","event","preventDefault","i","Location","coordinates","latitude","longitude","link","rel","target","style","margin","icon","faMapMarkerAlt","getDirectionsLink","origin","destination","travelmode","encodeURIComponent","Directions","faCrosshairs","asset","createAsset","fetch","URLSearchParams","res","json","then","result","formatKey","n","String","Math","round","processAsset","url","method","headers","body","data","opts","delay","ProcessUrl","read","DistanceAndDuration","process","setProcess","results","records","useMemo","reduce","id","directions","Object","assign","split","start_location","end_location","concat","map","Number","join","normalize","key","travel_mode","lat","lng","distance","duration","text","disabled","Suspense"],"sourceRoot":""}