{"version":3,"file":"331.js","mappings":"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O,KACP5B,MAAO,QACP8F,WAAW,GAEb,CACElF,KAAM,aACNC,GAAI,aACJe,MAAO,QACP5B,MAAO,QAOA4G,EAAmB,CAC9B,CACE,CACEhG,KAAM,aACNC,GAAI,aACJe,MAAO,QACP5B,MAAO,QACP8F,WAAW,IAGf,CACE,CAQElF,KAAM,aACNC,GAAI,aACJe,MAAO,QACP5B,MAAO,QACP8F,WAAW,IAGf,CACE,CACElF,KAAM,aACNC,GAAI,aACJe,MAAO,QACP5B,MAAO,OAGX,CACE,CACEY,KAAM,aACNC,GAAI,aACJe,MAAO,KACP5B,MAAO,UAGX,CACE,CACEY,KAAM,aACNC,GAAI,aACJe,MAAO,QACP5B,MAAO,SACP8F,WAAW,IAGf,CACE,CASElF,KAAM,aACNC,GAAI,aACJe,MAAO,SACP5B,MAAO,SACP8F,WAAW,IAGf,CACE,CACElF,KAAM,aACNC,GAAI,aACJe,MAAO,SACP5B,MAAO,WAGX,CACE,CACEY,KAAM,aACNC,GAAI,aACJe,MAAO,SACP5B,MAAO,SACP8F,WAAW,IAGf,CACE,CACElF,KAAM,aACNC,GAAI,aACJe,MAAO,SACP5B,MAAO,WAGX,CACE,CACEY,KAAM,aACNC,GAAI,aACJe,MAAO,SACP5B,MAAO,WAGX,CACE,CACEY,KAAM,aACNC,GAAI,aACJe,MAAO,SACP5B,MAAO,MACP8F,WAAW,IAGf,CACE,CACElF,KAAM,aACNC,GAAI,aACJe,MAAO,MACP5B,MAAO,OAET,CACEY,KAAM,aACNC,GAAI,aACJe,MAAO,MACP5B,MAAO,QAGX,CACE,CACEY,KAAM,aACNC,GAAI,aACJe,MAAO,MACP5B,MAAO,MACP8F,WAAW,GAEb,CACElF,KAAM,aACNC,GAAI,aACJe,MAAO,MACP5B,MAAO,SACP8F,WAAW,GAEb,CACElF,KAAM,aACNC,GAAI,aACJe,MAAO,SACP5B,MAAO,UAET,CACEY,KAAM,aACNC,GAAI,aACJe,MAAO,SACP5B,MAAO,QAGX,CACE,CACEY,KAAM,aACNC,GAAI,aACJe,MAAO,MACP5B,MAAO,OAET,CACEY,KAAM,aACNC,GAAI,aACJe,MAAO,MACP5B,MAAO,QAGX,CACE,CACEY,KAAM,aACNC,GAAI,aACJe,MAAO,MACP5B,MAAO,SACP8F,WAAW,GAEb,CACElF,KAAM,aACNC,GAAI,aACJe,MAAO,SACP5B,MAAO,QAGX,CACE,CACEY,KAAM,aACNC,GAAI,aACJe,MAAO,MACP5B,MAAO,SACP8F,WAAW,GAEb,CACElF,KAAM,aACNC,GAAI,aACJe,MAAO,SACP5B,MAAO,QAGX,CACE,CACEY,KAAM,aACNC,GAAI,aACJe,MAAO,MACP5B,MAAO,SACP8F,WAAW,GAEb,CACElF,KAAM,aACNC,GAAI,aACJe,MAAO,SACP5B,MAAO,YAMb,SAAS6G,EAAIlH,GAUV,I,IATDuE,EAAOvE,EAAPuE,QACAC,EAAOxE,EAAPwE,QACAC,EAAKzE,EAALyE,MACA3D,EAAKd,EAALc,MASC8D,G,GAF+BC,EAAAA,EAAAA,WAAmB,kBACjDJ,EAAM5D,KAAI,SAAC2E,EAAG1C,GAAC,OAAKA,CAAC,GAAC,I,EACvB,E,o4BAFM4B,EAAQE,EAAA,GAAED,EAAWC,EAAA,GAI5B,OACEI,EAAAA,cAAA,WACEA,EAAAA,cAACV,EAAY,CACXC,QAASA,EACTC,QAASA,EACTC,MAAOA,EACP3D,MAAOA,EACP4D,SAAUA,EACVC,YAAaA,IAIrB,CAEe,SAASwC,IACtB,OACEnC,EAAAA,cAAA,OAAKC,UAAWC,EAAAA,SACdF,EAAAA,cAAA,UAAI,UACJA,EAAAA,cAACkC,EAAI,CAAC3C,QAAQ,MAAMC,QAAQ,OAAOC,MAAOsC,EAASjG,MAAO+F,IAC1D7B,EAAAA,cAACkC,EAAI,CAAC3C,QAAQ,MAAMC,QAAQ,OAAOC,MAAOuC,EAASlG,MAAO+F,IAC1D7B,EAAAA,cAACkC,EAAI,CAAC3C,QAAQ,MAAMC,QAAQ,OAAOC,MAAOwC,EAASnG,MAAOgG,IAGhE,C","sources":["webpack://@dev/web/./src/containers/Energy/styles.module.scss","webpack://@dev/web/./src/containers/Energy/utils.ts","webpack://@dev/web/./src/containers/Energy/styles.module.scss?dd29","webpack://@dev/web/./src/containers/Energy/Calculations.tsx","webpack://@dev/web/./src/containers/Energy/rates.ts","webpack://@dev/web/./src/containers/Energy/index.tsx"],"sourcesContent":["// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.ILYKcZwRrAG3B5Qm_6ti{color:purple}.QWuaC1AqCgpyeQ75yBWq{font-family:Arial,Helvetica,sans-serif;font-size:.7em}.QWuaC1AqCgpyeQ75yBWq table{border-collapse:collapse}.QWuaC1AqCgpyeQ75yBWq table tr:hover{background-color:#e0e0e0}.QWuaC1AqCgpyeQ75yBWq tr:nth-child(even){background-color:#f7f7f7}.QWuaC1AqCgpyeQ75yBWq th,.QWuaC1AqCgpyeQ75yBWq td{padding:.25em}.PbI4uYIFtC7LCTjgoOUg{clear:both;padding:.5em 0;border:2px solid rgba(0,0,0,0);margin:.5em}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/containers/Energy/styles.module.scss\"],\"names\":[],\"mappings\":\"AAAA,sBACE,YAAA,CAEF,sBACE,sCAAA,CACA,cAAA,CACA,4BACE,wBAAA,CAEE,qCACE,wBAAA,CAKJ,yCACE,wBAAA,CAGJ,kDAEE,aAAA,CAGJ,sBACE,UAAA,CACA,cAAA,CACA,8BAAA,CACA,WAAA\",\"sourcesContent\":[\".Section {\\n  color: purple;\\n}\\n.Calculations {\\n  font-family: Arial, Helvetica, sans-serif;\\n  font-size: 0.7em;\\n  table {\\n    border-collapse: collapse;\\n    tr {\\n      &:hover {\\n        background-color: #e0e0e0;\\n      }\\n    }\\n  }\\n  tr {\\n    &:nth-child(even) {\\n      background-color: #f7f7f7;\\n    }\\n  }\\n  th,\\n  td {\\n    padding: 0.25em;\\n  }\\n}\\n.Row {\\n  clear: both;\\n  padding: 0.5em 0;\\n  border: 2px solid transparent;\\n  margin: 0.5em;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Section\": `ILYKcZwRrAG3B5Qm_6ti`,\n\t\"Calculations\": `QWuaC1AqCgpyeQ75yBWq`,\n\t\"Row\": `PbI4uYIFtC7LCTjgoOUg`\n};\nmodule.exports = ___CSS_LOADER_EXPORT___;\n","import {\n  add,\n  differenceInDays,\n  differenceInMonths,\n  format,\n  set,\n  sub,\n} from \"date-fns\";\n\ninterface Cost {\n  value: (t: { value: number; count: number; days: number }) => number;\n  rates: Rate[];\n}\n\ntype Item = {\n  from: string;\n  to: string;\n  start: number;\n  value: number;\n  estimated?: boolean;\n};\n\ninterface Rate {\n  from: string;\n  to: string;\n  price: number;\n  vat: number;\n}\n\nexport type Items = Item[];\nexport type Rates = Record<string, Record<string, Cost>>;\n\nexport const getMatch = (\n  item: Item[],\n  list: Rates,\n): Record<\n  string,\n  Record<\n    string,\n    (Item & {\n      tax: number;\n      count: number;\n      price: number;\n      vat: number;\n      total: number;\n    })[]\n  >\n> => {\n  return Object.entries(list).reduce(\n    (result, [name, value]) =>\n      ((obj) =>\n        Object.assign(\n          result,\n          Object.keys(obj).length\n            ? {\n                [name]: obj,\n              }\n            : {},\n        ))(\n        Object.entries(value).reduce(\n          (result, [key, cost]) =>\n            ((list) =>\n              Object.assign(\n                result,\n                list.length\n                  ? {\n                      [key]: list,\n                    }\n                  : {},\n              ))(\n              item\n                .map((item) =>\n                  cost.rates\n                    .filter(\n                      (price) => price.from <= item.to && item.from <= price.to,\n                    )\n                    .map(({ from, to, price, vat }) =>\n                      (({ from, to, value }) => ({\n                        from,\n                        to,\n                        count: cost.value({\n                          value,\n                          count: differenceInMonths(\n                            add(\n                              set(new Date(to), {\n                                date: 1,\n                              }),\n                              {\n                                months: 1,\n                              },\n                            ),\n                            new Date(from),\n                          ),\n                          days: differenceInDays(new Date(to), new Date(from)),\n                        }),\n                        price,\n                        vat,\n                      }))({\n                        from: from > item.from ? from : item.from,\n                        to: to < item.to ? to : item.to,\n                        value: Math.round(item.value - item.start),\n                      }),\n                    ),\n                )\n                .flat()\n                .reduce(\n                  (result, item) => {\n                    if (\n                      [\"Dystrybucja energii elektrycznej\"].includes(name) &&\n                      result.length > 0\n                    ) {\n                      const last = result[result.length - 1];\n                      if (\n                        item.price === last.price &&\n                        item.vat === last.vat &&\n                        format(\n                          sub(new Date(item.from), { days: 1 }),\n                          \"yyyy-MM-dd\",\n                        ) === last.to\n                      ) {\n                        last.count += item.count;\n                        last.to = item.to;\n                        return result;\n                      }\n                    }\n                    return result.concat(item);\n                  },\n                  [] as (Rate & { count: number })[],\n                )\n                .map((item) =>\n                  ((value) => ({\n                    ...item,\n                    value,\n                    tax: item.vat * value,\n                    total: (1 + item.vat) * value,\n                  }))(Math.round(100 * item.count * item.price) / 100),\n                ),\n            ),\n          {},\n        ),\n      ),\n    {},\n  );\n};\n\nexport const getRates = (\n  item: Record<string, { price: number; vat: number }>,\n) =>\n  Object.entries(item).map(([from, item], i, list) => ({\n    ...item,\n    from,\n    to: format(\n      sub(\n        list[i + 1]\n          ? new Date(list[i + 1][0])\n          : add(\n              set(new Date(from), {\n                date: 1,\n              }),\n              {\n                months: 1,\n              },\n            ),\n        { days: 1 },\n      ),\n      \"yyyy-MM-dd\",\n    ),\n  }));\n\nexport const getTitle = (item: Item[]) =>\n  `Szczegóły rozliczenia za okres od ${format(\n    new Date(item[0].from),\n    \"dd.MM.yyyy\",\n  )} do ${format(new Date(item[item.length - 1].to), \"dd.MM.yyyy\")}`;\n\nexport const getTitleSummary = (item: Item[], list: Rates) => {\n  const { total } = Object.values(getMatch(item, list)).reduce(\n    (result, line) =>\n      Object.entries(line).reduce(\n        (result, [_, list]) =>\n          list.reduce(\n            ({ total }, item) => ({\n              total: total + item.total,\n            }),\n            result,\n          ),\n        result,\n      ),\n    {\n      total: 0,\n    },\n  );\n\n  const value = item.reduce(\n    (result, { start, value }) => result + value - start,\n    0,\n  );\n\n  const count = differenceInMonths(\n    add(\n      set(new Date(item[item.length - 1].to), {\n        date: 1,\n      }),\n      {\n        months: 1,\n      },\n    ),\n    new Date(item[0].from),\n  );\n\n  return `${new Intl.NumberFormat(\"pl-PL\", {\n    minimumFractionDigits: 2,\n  }).format(value)} kWh / ${count} ~ ${new Intl.NumberFormat(\"pl-PL\", {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  }).format(total / count)} zł/m`;\n};\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  type ChangeEventHandler,\n  type MouseEventHandler,\n  useCallback,\n  useState,\n} from \"react\";\nimport { format } from \"date-fns\";\nimport {\n  type Items,\n  type Rates,\n  getMatch,\n  getTitleSummary,\n  getTitle,\n} from \"./utils\";\nimport styles from \"./styles.module.scss\";\n\nconst formatRange = (from: string, to: string) =>\n  `${format(new Date(from), \"dd.MM.yy\")}-${format(new Date(to), \"dd.MM.yy\")}`;\n\nconst getSummary = (\n  line: Record<string, { value: number; tax: number; total: number }[]>,\n) =>\n  Object.entries(line).reduce(\n    (result, [_, list]) =>\n      list.reduce(\n        ({ value, tax, total }, item) => ({\n          value: value + item.value,\n          tax: tax + item.tax,\n          total: total + item.total,\n        }),\n        result,\n      ),\n    {\n      value: 0,\n      tax: 0,\n      total: 0,\n    },\n  );\n\nexport default function Calculations({\n  address,\n  counter,\n  items,\n  rates,\n  selected,\n  setSelected,\n}: {\n  address: string;\n  counter: string;\n  items: Items[];\n  rates: Rates;\n  selected: number[];\n  setSelected: Function;\n}) {\n  const [expanded, setExpanded] = useState<number[]>([]);\n  // console.log(expanded, items);\n\n  return (\n    <div className={styles.Calculations}>\n      <h3>Calculations ({address})</h3>\n      <table>\n        <tbody>\n          <tr>\n            <th>\n              <input\n                type=\"checkbox\"\n                checked={selected.length === items.length}\n                onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                  ({ target }) =>\n                    setSelected(target.checked ? items.map((_, i) => i) : []),\n                  [],\n                )}\n              />\n            </th>\n            <th align=\"left\">Licznik / Okres zużycia</th>\n            <th align=\"right\">Netto [zł]</th>\n            <th align=\"right\">Podatek VAT [zł]</th>\n            <th align=\"right\">Brutto [zł]</th>\n          </tr>\n          {items.map((item, i) =>\n            [\n              Object.values(getMatch(item, rates)).reduce(\n                (result, line) =>\n                  Object.entries(line).reduce(\n                    (result, [_, list]) =>\n                      list.reduce(\n                        ({ value, tax, total }, item) => ({\n                          value: value + item.value,\n                          tax: tax + item.tax,\n                          total: total + item.total,\n                        }),\n                        result,\n                      ),\n                    result,\n                  ),\n                {\n                  value: 0,\n                  tax: 0,\n                  total: 0,\n                },\n              ),\n            ]\n              .map(({ value, tax, total }) => (\n                <tr key={i}>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={selected.includes(i)}\n                      onChange={useCallback<\n                        ChangeEventHandler<HTMLInputElement>\n                      >(\n                        ({ target }) =>\n                          setSelected((selected: number[]) =>\n                            !target.checked\n                              ? selected.filter((n) => n !== i)\n                              : selected.concat(i),\n                          ),\n                        [],\n                      )}\n                    />\n                  </td>\n                  <td align=\"left\">\n                    <a\n                      href=\"#\"\n                      onClick={useCallback<MouseEventHandler>(\n                        (e) => (\n                          e.preventDefault(),\n                          setExpanded((expanded) =>\n                            expanded.includes(i)\n                              ? expanded.filter((n) => n !== i)\n                              : expanded.concat(i),\n                          )\n                        ),\n                        [],\n                      )}\n                    >\n                      {`${counter} / ${getTitle(item)}`}\n                    </a>\n                    {` / ${getTitleSummary(item, rates)}`}\n                  </td>\n                  <td align=\"right\">\n                    {new Intl.NumberFormat(\"pl-PL\", {\n                      minimumFractionDigits: 2,\n                    }).format(value)}\n                  </td>\n                  <td align=\"right\">\n                    {new Intl.NumberFormat(\"pl-PL\", {\n                      minimumFractionDigits: 2,\n                    }).format(tax)}\n                  </td>\n                  <td align=\"right\">\n                    {new Intl.NumberFormat(\"pl-PL\", {\n                      minimumFractionDigits: 2,\n                    }).format(total)}\n                  </td>\n                </tr>\n              ))\n              .concat(\n                expanded.includes(i)\n                  ? [\n                      <tr key={`${i}-details`}>\n                        <td></td>\n                        <td colSpan={4}>\n                          <div>\n                            <h4>Wskazania układu pomiarowego</h4>\n                            <table width=\"100%\">\n                              <tbody>\n                                <tr>\n                                  <th align=\"left\">Numer licznika</th>\n                                  <th align=\"left\">Okres zużycia</th>\n                                  <th align=\"right\">\n                                    Poprzednie wskazanie licznika\n                                  </th>\n                                  <th align=\"right\">\n                                    Obecne wskazanie licznika\n                                  </th>\n                                  <th align=\"right\">Rodzaj odczytu</th>\n                                  <th align=\"right\">Zużycie [kWh]</th>\n                                </tr>\n                                {item.map(\n                                  (\n                                    { from, to, start, value, estimated },\n                                    k,\n                                  ) => (\n                                    <tr key={k}>\n                                      <td>{counter}</td>\n                                      <td align=\"right\">\n                                        {formatRange(from, to)}\n                                      </td>\n                                      <td align=\"right\">\n                                        {new Intl.NumberFormat(\"pl-PL\", {\n                                          minimumFractionDigits: 2,\n                                        }).format(start)}\n                                      </td>\n                                      <td align=\"right\">\n                                        {new Intl.NumberFormat(\"pl-PL\", {\n                                          minimumFractionDigits: 2,\n                                        }).format(value)}\n                                      </td>\n                                      <td align=\"right\">\n                                        {estimated ? \"S**\" : \"R\"}\n                                      </td>\n                                      <td align=\"right\">\n                                        {new Intl.NumberFormat(\"pl-PL\", {\n                                          minimumFractionDigits: 2,\n                                        }).format(value - start)}\n                                      </td>\n                                    </tr>\n                                  ),\n                                )}\n                              </tbody>\n                              <tfoot>\n                                <tr>\n                                  <th align=\"left\">Razem</th>\n                                  <td colSpan={4}></td>\n                                  <td align=\"right\">\n                                    {new Intl.NumberFormat(\"pl-PL\", {\n                                      minimumFractionDigits: 2,\n                                    }).format(\n                                      item.reduce(\n                                        (result, { start, value }) =>\n                                          result + value - start,\n                                        0,\n                                      ),\n                                    )}\n                                  </td>\n                                </tr>\n                              </tfoot>\n                            </table>\n                          </div>\n                          {Object.entries(getMatch(item, rates)).map(\n                            ([name, list], key) => (\n                              <div key={key}>\n                                <h4>{name}</h4>\n                                <table width=\"100%\">\n                                  <tbody>\n                                    <tr>\n                                      <th></th>\n                                      <th align=\"left\">Okres zużycia</th>\n                                      <th align=\"right\">Ilość</th>\n                                      <th align=\"right\">Cena netto [zł]</th>\n                                      <th align=\"right\">Wartość netto [zł]</th>\n                                      <th align=\"right\">Stawka VAT [%]</th>\n                                      <th align=\"right\">Podatek VAT [zł]</th>\n                                      <th align=\"right\">Wartość brutto [zł]</th>\n                                    </tr>\n                                    {Object.entries(list).map(\n                                      ([label, list], i) =>\n                                        list.map(\n                                          (\n                                            {\n                                              from,\n                                              to,\n                                              count,\n                                              price,\n                                              value,\n                                              vat,\n                                              tax,\n                                              total,\n                                            },\n                                            j,\n                                          ) => (\n                                            <tr key={`${i}-${j}`}>\n                                              <td>{label}</td>\n                                              <td align=\"right\">\n                                                {formatRange(from, to)}\n                                              </td>\n                                              <td align=\"right\">{count}</td>\n                                              <td align=\"right\">\n                                                {new Intl.NumberFormat(\n                                                  \"pl-PL\",\n                                                  {\n                                                    minimumFractionDigits: 4,\n                                                    maximumFractionDigits: 5,\n                                                  },\n                                                ).format(price)}\n                                              </td>\n                                              <td align=\"right\">\n                                                {new Intl.NumberFormat(\n                                                  \"pl-PL\",\n                                                  {\n                                                    minimumFractionDigits: 2,\n                                                  },\n                                                ).format(value)}\n                                              </td>\n                                              <td align=\"right\">{vat}</td>\n                                              <td align=\"right\">\n                                                {new Intl.NumberFormat(\n                                                  \"pl-PL\",\n                                                  {\n                                                    minimumFractionDigits: 2,\n                                                  },\n                                                ).format(tax)}\n                                              </td>\n                                              <td align=\"right\">\n                                                {new Intl.NumberFormat(\n                                                  \"pl-PL\",\n                                                  {\n                                                    minimumFractionDigits: 2,\n                                                  },\n                                                ).format(total)}\n                                              </td>\n                                            </tr>\n                                          ),\n                                        ),\n                                    )}\n                                  </tbody>\n                                  <tfoot>\n                                    {[getSummary(list)].map((item, i) => (\n                                      <tr key={i}>\n                                        <th align=\"left\">Razem</th>\n                                        <td colSpan={3}></td>\n                                        <td align=\"right\">\n                                          {new Intl.NumberFormat(\"pl-PL\", {\n                                            minimumFractionDigits: 2,\n                                          }).format(item.value)}\n                                        </td>\n                                        <td></td>\n                                        <td align=\"right\">\n                                          {new Intl.NumberFormat(\"pl-PL\", {\n                                            minimumFractionDigits: 2,\n                                          }).format(item.tax)}\n                                        </td>\n                                        <td align=\"right\">\n                                          {new Intl.NumberFormat(\"pl-PL\", {\n                                            minimumFractionDigits: 2,\n                                          }).format(item.total)}\n                                        </td>\n                                      </tr>\n                                    ))}\n                                  </tfoot>\n                                </table>\n                              </div>\n                            ),\n                          )}\n                        </td>\n                      </tr>,\n                    ]\n                  : [],\n              ),\n          )}\n        </tbody>\n        <tfoot>\n          {[\n            items\n              .filter((_, i) => selected.includes(i))\n              .reduce(\n                (result, item) =>\n                  Object.values(getMatch(item, rates)).reduce(\n                    (result, line) =>\n                      Object.entries(line).reduce(\n                        (result, [_, list]) =>\n                          list.reduce(\n                            ({ value, tax, total }, item) => ({\n                              value: value + item.value,\n                              tax: tax + item.tax,\n                              total: total + item.total,\n                            }),\n                            result,\n                          ),\n                        result,\n                      ),\n                    result,\n                  ),\n                {\n                  value: 0,\n                  tax: 0,\n                  total: 0,\n                },\n              ),\n          ].map(({ value, tax, total }, i) => (\n            <tr key={i}>\n              <td></td>\n              <td></td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(value)}\n              </td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(tax)}\n              </td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(total)}\n              </td>\n            </tr>\n          ))}\n        </tfoot>\n      </table>\n    </div>\n  );\n}\n","import { type Rates, getRates } from \"./utils\";\n\n// kab\nexport const RATES_1: Rates = {\n  \"Sprzedaż energii elektrycznej\": {\n    \"Energia czynna\": {\n      value: ({ value }) => value,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 0.2762,\n          vat: 0.23,\n        },\n        \"2020-01-01\": {\n          price: 0.3195,\n          vat: 0.23,\n        },\n        \"2021-02-01\": {\n          price: 0.33,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 0.4346,\n          vat: 0.05,\n        },\n        \"2022-06-01\": {\n          price: 0.4522,\n          vat: 0.05,\n        },\n        \"2023-01-01\": {\n          price: 0.414,\n          vat: 0.23,\n        },\n        // \"2023-08-01\": {\n        //   price: 0.698,\n        //   vat: 0.23,\n        // },\n        // \"2024-01-01\": {\n        //   price: 0.414,\n        //   vat: 0.23,\n        // },\n        \"2024-07-01\": {\n          price: 0.505,\n          vat: 0.23,\n        },\n        \"2099-01-01\": {\n          price: 0.505,\n          vat: 0.23,\n        },\n      }),\n    },\n    \"Opłata handlowa\": {\n      value: ({ count }) => count,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 4.29,\n          vat: 0.23,\n        },\n        \"2020-01-01\": {\n          price: 6.25,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 7.8,\n          vat: 0.05,\n        },\n        \"2022-06-01\": {\n          price: 8.38, // ?\n          vat: 0.05,\n        },\n        \"2023-01-01\": {\n          price: 8.38,\n          vat: 0.23,\n        },\n        \"2023-03-01\": {\n          price: 0,\n          vat: 0.23,\n        },\n        \"2099-01-01\": {\n          price: 0,\n          vat: 0.23,\n        },\n      }),\n    },\n  },\n  \"Dystrybucja energii elektrycznej\": {\n    \"Opłata jakościowa\": {\n      value: ({ value }) => value,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 0.013,\n          vat: 0.23,\n        },\n        \"2020-01-01\": {\n          price: 0.0133,\n          vat: 0.23,\n        },\n        \"2021-02-01\": {\n          price: 0.0102,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 0.0095,\n          vat: 0.05,\n        },\n        \"2023-01-01\": {\n          price: 0.0095,\n          vat: 0.23,\n        },\n        // \"2023-08-01\": {\n        //   price: 0.0242,\n        //   vat: 0.23,\n        // },\n        \"2024-07-01\": {\n          price: 0.0314,\n          vat: 0.23,\n        },\n        \"2025-01-01\": {\n          price: 0.0321,\n          vat: 0.23,\n        },\n        \"2099-01-01\": {\n          price: 0.0321,\n          vat: 0.23,\n        },\n      }),\n    },\n    \"Opłata OZE\": {\n      value: ({ value }) => value,\n      rates: getRates({\n        \"2020-01-01\": {\n          price: 0.0,\n          vat: 0.23,\n        },\n        \"2021-01-01\": {\n          price: 0.0022,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 0.0009,\n          vat: 0.05,\n        },\n        \"2023-01-01\": {\n          price: 0.0,\n          vat: 0.23,\n        },\n        \"2024-01-01\": {\n          price: 0.0,\n          vat: 0.23,\n        },\n        \"2025-01-01\": {\n          price: 0.0035,\n          vat: 0.23,\n        },\n        \"2099-01-01\": {\n          price: 0.0035,\n          vat: 0.23,\n        },\n      }),\n    },\n    \"Opłata sieciowa zmienna\": {\n      value: ({ value }) => value,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 0.1349,\n          vat: 0.23,\n        },\n        \"2020-01-01\": {\n          price: 0.1372,\n          vat: 0.23,\n        },\n        \"2021-02-01\": {\n          price: 0.1391,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 0.1459,\n          vat: 0.05,\n        },\n        \"2023-01-01\": {\n          price: 0.1459,\n          vat: 0.23,\n        },\n        // \"2023-08-01\": {\n        //   price: 0.2244,\n        //   vat: 0.23,\n        // },\n        \"2024-07-01\": {\n          price: 0.226,\n          vat: 0.23,\n        },\n        \"2025-01-01\": {\n          price: 0.2233,\n          vat: 0.23,\n        },\n        \"2099-01-01\": {\n          price: 0.2233,\n          vat: 0.23,\n        },\n      }),\n    },\n    \"Opłata kogeneracyjna\": {\n      value: ({ value }) => value,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 0.00158,\n          vat: 0.23,\n        },\n        \"2020-01-01\": {\n          price: 0.00139,\n          vat: 0.23,\n        },\n        \"2021-01-01\": {\n          price: 0.0,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 0.00406,\n          vat: 0.05,\n        },\n        \"2023-01-01\": {\n          price: 0.00496,\n          vat: 0.23,\n        },\n        \"2024-01-01\": {\n          price: 0.00618,\n          vat: 0.23,\n        },\n        \"2025-01-01\": {\n          price: 0.003,\n          vat: 0.23,\n        },\n        \"2099-01-01\": {\n          price: 0.003,\n          vat: 0.23,\n        },\n      }),\n    },\n    \"Opłata sieciowa stała\": {\n      value: ({ count }) => count,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 10.29,\n          vat: 0.23,\n        },\n        \"2020-01-01\": {\n          price: 10.55,\n          vat: 0.23,\n        },\n        \"2021-02-01\": {\n          price: 10.7,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 11.32,\n          vat: 0.05,\n        },\n        \"2023-01-01\": {\n          price: 11.32,\n          vat: 0.23,\n        },\n        // \"2023-08-01\": {\n        //   price: 17.53,\n        //   vat: 0.23,\n        // },\n        \"2024-07-01\": {\n          price: 17.71,\n          vat: 0.23,\n        },\n        \"2025-01-01\": {\n          price: 17.59,\n          vat: 0.23,\n        },\n        \"2099-01-01\": {\n          price: 17.59,\n          vat: 0.23,\n        },\n      }),\n    },\n    \"Opłata przejściowa\": {\n      value: ({ count }) => count,\n      rates: getRates({\n        \"2020-01-01\": {\n          price: 0.1,\n          vat: 0.05,\n        },\n        \"2022-01-01\": {\n          price: 0.1,\n          vat: 0.05,\n        },\n        \"2022-04-01\": {\n          price: 0.1,\n          vat: 0.05,\n        },\n        \"2023-01-01\": {\n          price: 0.1,\n          vat: 0.23,\n        },\n        \"2024-07-01\": {\n          price: 0.1,\n          vat: 0.23,\n        },\n        \"2025-01-01\": {\n          price: 0.1,\n          vat: 0.23,\n        },\n        \"2099-01-01\": {\n          price: 0.1,\n          vat: 0.23,\n        },\n      }),\n    },\n    \"Opłata mocowa\": {\n      value: ({ count }) => count,\n      rates: getRates({\n        \"2021-01-01\": {\n          price: 4.48,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 5.68,\n          vat: 0.05,\n        },\n        \"2022-04-01\": {\n          price: 5.68,\n          vat: 0.05,\n        },\n        \"2023-01-01\": {\n          price: 5.72,\n          vat: 0.23,\n        },\n        \"2024-01-01\": {\n          price: 6.39,\n          vat: 0.23,\n        },\n        \"2024-07-01\": {\n          price: 0,\n          vat: 0.23,\n        },\n        \"2025-01-01\": {\n          price: 0,\n          vat: 0.23,\n        },\n        \"2099-01-01\": {\n          price: 0,\n          vat: 0.23,\n        },\n      }),\n    },\n    \"Opłata abonamentowa\": {\n      value: ({ count }) => count,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 0.4,\n          vat: 0.23,\n        },\n        \"2020-01-01\": {\n          price: 0.42,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 0.42,\n          vat: 0.05,\n        },\n        \"2023-01-01\": {\n          price: 0.42,\n          vat: 0.23,\n        },\n        // \"2023-08-01\": {\n        //   price: 0.46,\n        //   vat: 0.23,\n        // },\n        \"2024-07-01\": {\n          price: 0.48,\n          vat: 0.23,\n        },\n        \"2099-01-01\": {\n          price: 0.48,\n          vat: 0.23,\n        },\n      }),\n    },\n  },\n  \"Rozporządzenie MKiS z 09.09.2023 r.\": {\n    \"Obniżka należności za 2023 r.\": {\n      value: () => 1,\n      rates: getRates({\n        \"2023-08-10\": {\n          price: -101.9,\n          vat: 0.23,\n        },\n      }),\n    },\n  },\n};\n\n// wil\nexport const RATES_2: Rates = {\n  \"Sprzedaż energii elektrycznej\": {\n    ...RATES_1[\"Sprzedaż energii elektrycznej\"],\n    \"Energia czynna\": {\n      value: ({ value }) => value,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 0.2762,\n          vat: 0.23,\n        },\n        \"2020-01-01\": {\n          price: 0.3195,\n          vat: 0.23,\n        },\n        \"2021-02-01\": {\n          price: 0.33,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 0.4346,\n          vat: 0.05,\n        },\n        \"2022-06-01\": {\n          price: 0.4522,\n          vat: 0.05,\n        },\n        \"2023-01-01\": {\n          price: 0.414,\n          vat: 0.23,\n        },\n        \"2023-08-01\": {\n          price: 0.698,\n          vat: 0.23,\n        },\n        \"2024-01-01\": {\n          price: 0.414,\n          // price: 0.698,\n          vat: 0.23,\n        },\n        \"2024-07-01\": {\n          price: 0.505,\n          vat: 0.23,\n        },\n        \"2099-01-01\": {\n          price: 0.505,\n          vat: 0.23,\n        },\n      }),\n    },\n  },\n  \"Dystrybucja energii elektrycznej\": {\n    ...RATES_1[\"Dystrybucja energii elektrycznej\"],\n    \"Opłata jakościowa\": {\n      value: ({ value }) => value,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 0.013,\n          vat: 0.23,\n        },\n        \"2020-01-01\": {\n          price: 0.0133,\n          vat: 0.23,\n        },\n        \"2021-02-01\": {\n          price: 0.0102,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 0.0095,\n          vat: 0.05,\n        },\n        \"2023-01-01\": {\n          price: 0.0095,\n          vat: 0.23,\n        },\n        \"2023-08-01\": {\n          price: 0.0242,\n          vat: 0.23,\n        },\n        \"2024-01-01\": {\n          price: 0.0095,\n          vat: 0.23,\n        },\n        \"2024-07-01\": {\n          price: 0.0314,\n          // price: 0.0095,\n          vat: 0.23,\n        },\n        \"2025-01-01\": {\n          price: 0.0321,\n          vat: 0.23,\n        },\n        \"2099-01-01\": {\n          price: 0.0321,\n          vat: 0.23,\n        },\n      }),\n    },\n    \"Opłata sieciowa zmienna\": {\n      value: ({ value }) => value,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 0.1349,\n          vat: 0.23,\n        },\n        \"2020-01-01\": {\n          price: 0.1372,\n          vat: 0.23,\n        },\n        \"2021-02-01\": {\n          price: 0.1391,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 0.1459,\n          vat: 0.05,\n        },\n        \"2023-01-01\": {\n          price: 0.1459,\n          vat: 0.23,\n        },\n        \"2023-08-01\": {\n          price: 0.2244,\n          vat: 0.23,\n        },\n        \"2024-01-01\": {\n          price: 0.1459,\n          vat: 0.23,\n        },\n        \"2024-07-01\": {\n          price: 0.226,\n          // price: 0.1459,\n          vat: 0.23,\n        },\n        \"2025-01-01\": {\n          price: 0.2233,\n          vat: 0.23,\n        },\n        \"2099-01-01\": {\n          price: 0.2233,\n          vat: 0.23,\n        },\n      }),\n    },\n    \"Opłata sieciowa stała\": {\n      value: ({ count }) => count,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 10.29,\n          vat: 0.23,\n        },\n        \"2020-01-01\": {\n          price: 10.55,\n          vat: 0.23,\n        },\n        \"2021-02-01\": {\n          price: 10.7,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 11.32,\n          vat: 0.05,\n        },\n        \"2023-01-01\": {\n          price: 11.32,\n          vat: 0.23,\n        },\n        \"2023-08-01\": {\n          price: 17.53,\n          vat: 0.23,\n        },\n        \"2024-01-01\": {\n          price: 11.32,\n          vat: 0.23,\n        },\n        \"2024-07-01\": {\n          price: 17.71,\n          // price: 11.32,\n          vat: 0.23,\n        },\n        \"2025-01-01\": {\n          price: 17.59,\n          vat: 0.23,\n        },\n        \"2099-01-01\": {\n          price: 17.59,\n          vat: 0.23,\n        },\n      }),\n    },\n    \"Opłata przejściowa\": {\n      value: ({ count }) => count,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 0.33,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 0.33,\n          vat: 0.05,\n        },\n        \"2022-04-01\": {\n          price: 0.33,\n          // price: 0.33, // ?\n          vat: 0.05,\n        },\n        \"2023-01-01\": {\n          price: 0.33,\n          vat: 0.23,\n        },\n        \"2024-01-01\": {\n          price: 0.33,\n          vat: 0.23,\n        },\n        \"2024-07-01\": {\n          price: 0.33,\n          vat: 0.23,\n        },\n        \"2025-01-01\": {\n          price: 0.33,\n          vat: 0.23,\n        },\n        \"2099-01-01\": {\n          price: 0.33,\n          vat: 0.23,\n        },\n      }),\n    },\n    \"Opłata mocowa\": {\n      value: ({ count }) => count,\n      rates: getRates({\n        \"2021-01-01\": {\n          price: 4.48,\n          vat: 0.23,\n        },\n        \"2021-04-04\": {\n          price: 10.46,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 13.25,\n          vat: 0.05,\n        },\n        \"2022-04-01\": {\n          price: 13.25,\n          vat: 0.05,\n        },\n        \"2023-01-01\": {\n          price: 13.35,\n          vat: 0.23,\n        },\n        \"2024-01-01\": {\n          price: 14.9,\n          vat: 0.23,\n        },\n        \"2024-07-01\": {\n          price: 0,\n          vat: 0.23,\n        },\n        \"2099-01-01\": {\n          price: 0,\n          vat: 0.23,\n        },\n      }),\n    },\n    \"Opłata abonamentowa\": {\n      value: ({ count }) => count,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 0.4,\n          vat: 0.23,\n        },\n        \"2020-01-01\": {\n          price: 0.42,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 0.42,\n          vat: 0.05,\n        },\n        \"2023-01-01\": {\n          price: 0.42,\n          vat: 0.23,\n        },\n        \"2023-08-01\": {\n          price: 0.46,\n          vat: 0.23,\n        },\n        \"2024-01-01\": {\n          price: 0.42,\n          vat: 0.23,\n        },\n        \"2024-07-01\": {\n          price: 0.48,\n          vat: 0.23,\n        },\n        \"2099-01-01\": {\n          price: 0.48,\n          vat: 0.23,\n        },\n      }),\n    },\n  },\n  \"Rozporządzenie MKiS z 09.09.2023 r.\": {\n    \"Obniżka należności za 2023 r.\": {\n      value: () => 1,\n      rates: getRates({\n        \"2023-10-17\": {\n          price: -101.9,\n          vat: 0.23,\n        },\n      }),\n    },\n  },\n};\n","import React, { useState } from \"react\";\nimport Calculations from \"./Calculations\";\nimport { RATES_1, RATES_2 } from \"./rates\";\nimport styles from \"./styles.module.scss\";\n\nimport type { Items, Rates } from \"./utils\";\n\n// kab\nexport const ITEMS_1: Items[] = [\n  [\n    {\n      from: \"2020-08-07\",\n      to: \"2020-12-31\",\n      start: 5479.41,\n      value: 5748.76,\n      estimated: true,\n    },\n    {\n      from: \"2021-01-01\",\n      to: \"2021-01-31\",\n      start: 5748.76,\n      value: 5816.55,\n      estimated: true,\n    },\n    {\n      from: \"2021-02-01\",\n      to: \"2021-02-02\",\n      start: 5816.55,\n      value: 5820.63,\n    },\n  ],\n  [\n    {\n      // data: {\n      //   ...RATES[\"2021-04-04\"],\n      //   \"Opłata przejściowa\": 0.1,\n      //   \"Opłata mocowa\": 4.48,\n      // },\n      from: \"2021-02-03\",\n      to: \"2021-05-31\",\n      start: 5820.63,\n      value: 6082.55,\n      estimated: true,\n    },\n    {\n      // data: {\n      //   ...RATES[\"2021-04-04\"],\n      //   \"Opłata przejściowa\": 0.1,\n      //   \"Opłata mocowa\": 4.48,\n      // },\n      from: \"2021-06-01\",\n      to: \"2021-08-09\",\n      start: 6082.55,\n      value: 6185.36,\n    },\n  ],\n  [\n    {\n      // data: {\n      //   ...RATES[\"2021-04-04\"],\n      //   \"Opłata przejściowa\": 0.1,\n      //   \"Opłata mocowa\": 4.48,\n      // },\n      from: \"2021-08-10\",\n      to: \"2021-12-31\",\n      start: 6185.36,\n      value: 6447.49,\n      estimated: true,\n    },\n    {\n      from: \"2022-01-01\",\n      to: \"2022-02-23\",\n      start: 6447.49,\n      value: 6561.0,\n    },\n  ],\n  [\n    {\n      from: \"2022-02-24\",\n      to: \"2022-03-31\",\n      start: 6561.0,\n      value: 6561.0 + 85.0,\n    },\n    {\n      from: \"2022-04-01\",\n      to: \"2022-05-31\",\n      start: 6561.0 + 85.0,\n      value: 6561.0 + 85.0 + 102.0,\n    },\n    {\n      from: \"2022-06-01\",\n      to: \"2022-08-09\",\n      start: 6561.0 + 85.0 + 102.0,\n      value: 6835.2,\n    },\n  ],\n  [\n    {\n      from: \"2022-10-15\",\n      to: \"2023-01-07\",\n      start: 2.26,\n      value: 171.86,\n    },\n  ],\n  [\n    {\n      // from: \"2022-10-15\",\n      from: \"2022-09-01\",\n      to: \"2022-12-31\",\n      start: 2.26,\n      value: 171.86,\n    },\n    {\n      from: \"2023-01-01\",\n      // to: \"2023-04-11\",\n      to: \"2023-03-31\",\n      start: 171.86,\n      value: 372.69,\n    },\n  ],\n  [\n    {\n      // from: \"2022-10-15\",\n      from: \"2022-10-01\",\n      to: \"2022-12-31\",\n      start: 2.26,\n      value: 171.86,\n    },\n    {\n      from: \"2023-01-01\",\n      // to: \"2023-04-11\",\n      to: \"2023-04-30\",\n      start: 171.86,\n      value: 372.69,\n    },\n  ],\n  [\n    {\n      from: \"2022-08-10\",\n      to: \"2022-09-13\",\n      start: 6_835.2,\n      value: 6_835.2 + 41.31,\n    },\n    {\n      from: \"2022-09-14\",\n      to: \"2022-12-31\",\n      start: 0,\n      value: 174.78,\n      estimated: true,\n    },\n    {\n      from: \"2023-01-01\",\n      to: \"2023-02-07\",\n      start: 174.78,\n      value: 174.78 + 67.22,\n    },\n  ],\n];\n\n// kab\nexport const ITEMS_3: Items[] = [\n  [\n    {\n      from: \"2023-02-08\",\n      to: \"2023-02-28\",\n      start: 242,\n      value: 242 + 37,\n    },\n    {\n      from: \"2023-03-01\",\n      to: \"2023-08-09\",\n      start: 242 + 37,\n      value: 558,\n    },\n  ],\n  [\n    {\n      from: \"2023-08-10\",\n      to: \"2023-12-31\",\n      start: 558,\n      value: 558 + 315.19,\n    },\n    {\n      from: \"2024-01-01\",\n      to: \"2024-02-05\",\n      start: 873.19,\n      value: 966,\n    },\n  ],\n  [\n    {\n      from: \"2024-02-06\",\n      to: \"2024-06-30\",\n      start: 966,\n      value: 966 + 360.97,\n    },\n    {\n      from: \"2024-07-01\",\n      to: \"2024-08-09\",\n      start: 1_326.97,\n      value: 1_396,\n    },\n  ],\n  [\n    {\n      from: \"2024-08-10\",\n      to: \"2024-12-31\",\n      start: 1_396,\n      value: 1_396 + 328.59,\n      estimated: true,\n    },\n    {\n      from: \"2025-01-01\",\n      to: \"2025-02-10\",\n      start: 1_724.59,\n      value: 1_834.0,\n    },\n  ],\n  [\n    {\n      from: \"2025-02-11\",\n      to: \"2025-06-30\",\n      start: 1_834.0,\n      value: 1_834.0 + 164.75,\n      estimated: true,\n    },\n    {\n      from: \"2025-07-01\",\n      to: \"2025-08-12\",\n      start: 1_998.75,\n      value: 2_034,\n    },\n  ],\n];\n// .map((item) => ({ contract: \"0351\", counter: \"8586\", ...item }))\n\n// wil\nexport const ITEMS_2: Items[] = [\n  [\n    {\n      from: \"2019-10-20\",\n      to: \"2019-12-31\",\n      start: 5090.33,\n      value: 6099.11,\n      estimated: true,\n    },\n  ],\n  [\n    {\n      // data: {\n      //   ...RATES[\"2019-10-20\"],\n      //   \"Opłata jakościowa\": 0.0133,\n      //   \"Opłata sieciowa zmienna\": 0.1372,\n      //   \"Opłata sieciowa stała\": 10.55,\n      //   \"Opłata abonamentowa\": 0.42,\n      // },\n      from: \"2019-10-20\",\n      to: \"2019-12-31\",\n      start: 6099.11,\n      value: 5090.33 + 1413,\n      estimated: true,\n    },\n  ],\n  [\n    {\n      from: \"2020-01-01\",\n      to: \"2020-04-09\",\n      start: 5090.33 + 1413,\n      value: 7272.0,\n    },\n  ],\n  [\n    {\n      from: \"2020-04-10\",\n      to: \"2020-10-22\",\n      start: 7272.0,\n      value: 9734.69,\n    },\n  ],\n  [\n    {\n      from: \"2020-10-23\",\n      to: \"2020-12-31\",\n      start: 9734.69,\n      value: 10831.52,\n      estimated: true,\n    },\n  ],\n  [\n    {\n      // data: {\n      //   ...RATES[\"2021-04-04\"],\n      //   \"Energia czynna\": 0.3195,\n      //   \"Opłata handlowa\": 6.25,\n      //   \"Opłata jakościowa\": 0.0133,\n      //   \"Opłata sieciowa zmienna\": 0.1372,\n      //   \"Opłata sieciowa stała\": 10.55,\n      // },\n      from: \"2021-01-01\",\n      to: \"2021-01-31\",\n      start: 10831.52,\n      value: 11296.29,\n      estimated: true,\n    },\n  ],\n  [\n    {\n      from: \"2021-02-01\",\n      to: \"2021-04-03\",\n      start: 11296.29,\n      value: 12108.42,\n    },\n  ],\n  [\n    {\n      from: \"2021-04-04\",\n      to: \"2021-05-31\",\n      start: 12108.42,\n      value: 12736.33,\n      estimated: true,\n    },\n  ],\n  [\n    {\n      from: \"2021-06-01\",\n      to: \"2021-10-28\",\n      start: 12736.33,\n      value: 14643.17,\n    },\n  ],\n  [\n    {\n      from: \"2021-10-29\",\n      to: \"2021-12-31\",\n      start: 14643.17,\n      value: 15588.03,\n    },\n  ],\n  [\n    {\n      from: \"2022-01-01\",\n      to: \"2022-04-12\",\n      start: 15588.03,\n      value: 16919.0,\n      estimated: true,\n    },\n  ],\n  [\n    {\n      from: \"2022-04-13\",\n      to: \"2022-05-31\",\n      start: 16919.0,\n      value: 16919.0 + 530,\n    },\n    {\n      from: \"2022-06-01\",\n      to: \"2022-10-21\",\n      start: 16919.0 + 530,\n      value: 19169.0,\n    },\n  ],\n  [\n    {\n      from: \"2022-10-22\",\n      to: \"2022-11-03\",\n      start: 19_169.0,\n      value: 19_169.0 + 251,\n      estimated: true,\n    },\n    {\n      from: \"2022-11-04\",\n      to: \"2022-12-31\",\n      start: 19_169.0 + 251,\n      value: 20_259.87,\n      estimated: true,\n    },\n    {\n      from: \"2023-01-01\",\n      to: \"2023-02-28\",\n      start: 20_259.87,\n      value: 20_259.87 + 835,\n    },\n    {\n      from: \"2023-03-01\",\n      to: \"2023-04-11\",\n      start: 20_259.87 + 835,\n      value: 21_582.0,\n    },\n  ],\n  [\n    {\n      from: \"2023-04-12\",\n      to: \"2023-07-31\",\n      start: 21_582.0,\n      value: 21_582.0 + 1_678,\n    },\n    {\n      from: \"2023-08-01\",\n      to: \"2023-10-16\",\n      start: 21_582.0 + 1_678,\n      value: 23_983.0,\n    },\n  ],\n  [\n    {\n      from: \"2023-10-17\",\n      to: \"2023-12-31\",\n      start: 23_983.0,\n      value: 23_983.0 + 1_114.42,\n      estimated: true,\n    },\n    {\n      from: \"2024-01-01\",\n      to: \"2024-04-04\",\n      start: 23_983.0 + 1_114.42,\n      value: 26_281.0,\n    },\n  ],\n  [\n    {\n      from: \"2024-04-04\",\n      to: \"2024-06-30\",\n      start: 26_281.0,\n      value: 26_281.0 + 944.37,\n      estimated: true,\n    },\n    {\n      from: \"2024-07-01\",\n      to: \"2024-10-08\",\n      start: 26_281.0 + 944.37,\n      value: 28_447.0,\n    },\n  ],\n  [\n    {\n      from: \"2024-10-09\",\n      to: \"2024-12-31\",\n      start: 28_447.0,\n      value: 28_447.0 + 1273.33,\n      estimated: true,\n    },\n    {\n      from: \"2025-01-01\",\n      to: \"2025-04-15\",\n      start: 28_447.0 + 1273.33,\n      value: 30_992.95,\n    },\n  ],\n];\n// .map((item) => ({ contract: \"8586\", counter: \"2752\", ...item }))\n\nfunction Data({\n  address,\n  counter,\n  items,\n  rates,\n}: {\n  address: string;\n  counter: string;\n  items: Items[];\n  rates: Rates;\n}) {\n  const [selected, setSelected] = useState<number[]>(() =>\n    items.map((_, i) => i),\n  );\n\n  return (\n    <div>\n      <Calculations\n        address={address}\n        counter={counter}\n        items={items}\n        rates={rates}\n        selected={selected}\n        setSelected={setSelected}\n      />\n    </div>\n  );\n}\n\nexport default function Section() {\n  return (\n    <div className={styles.Section}>\n      <h2>Energy</h2>\n      <Data address=\"KAB\" counter=\"9057\" items={ITEMS_1} rates={RATES_1} />\n      <Data address=\"KAB\" counter=\"4201\" items={ITEMS_3} rates={RATES_1} />\n      <Data address=\"WIL\" counter=\"7224\" items={ITEMS_2} rates={RATES_2} />\n    </div>\n  );\n}\n"],"names":["___CSS_LOADER_API_SOURCEMAP_IMPORT___","___CSS_LOADER_EXPORT___","___CSS_LOADER_API_IMPORT___","push","module","id","locals","exports","getMatch","item","list","Object","entries","reduce","result","_ref","obj","_ref2","_slicedToArray","name","value","_ref4","_ref5","key","cost","assign","length","_defineProperty","map","rates","filter","price","from","to","_ref7","vat","_ref8","count","differenceInMonths","add","set","Date","date","months","days","differenceInDays","Math","round","start","flat","includes","last","format","sub","concat","_objectSpread","tax","total","keys","getRates","_ref9","i","_ref0","getTitle","getTitleSummary","values","line","_ref1","_ref10","_ref11","_ref12","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","formatRange","getSummary","_ref3","Calculations","address","counter","items","selected","setSelected","_useState2","useState","expanded","setExpanded","React","className","styles","type","checked","onChange","useCallback","target","_","align","_ref6","n","href","onClick","e","preventDefault","colSpan","width","k","estimated","_ref13","_ref14","label","_ref15","j","_ref16","_ref17","_ref18","_ref19","RATES_1","RATES_2","ITEMS_1","ITEMS_3","ITEMS_2","Data","Section"],"sourceRoot":""}