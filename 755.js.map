{"version":3,"file":"755.js","mappings":"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","sources":["webpack://@dev/web/./src/containers/Quotes/Chart.module.scss?912e","webpack://@dev/web/./src/containers/Quotes/ZoomableLineChart.tsx","webpack://@dev/web/./src/containers/Quotes/useResizeObserver.ts","webpack://@dev/web/./src/containers/Quotes/styles.module.scss?548c","webpack://@dev/web/./src/containers/Quotes/index.tsx","webpack://@dev/web/./src/containers/Quotes/Chart.module.scss","webpack://@dev/web/./src/containers/Quotes/styles.module.scss"],"sourcesContent":["\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./Chart.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./Chart.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\n// import { format } from \"date-fns\";\n// import { axisBottom, axisLeft, select, scaleLinear, timeFormat } from \"d3\";\n// import * as d3 from \"d3\";\nimport {\n  extent,\n  group,\n  select,\n  scaleLinear,\n  scaleOrdinal,\n  scaleTime,\n  line,\n  max,\n  curveCardinal,\n  axisBottom,\n  axisLeft,\n  zoom,\n} from \"d3\";\n\n// import { Subject, of } from \"rxjs\";\n// import { delay, switchMap } from \"rxjs/operators\";\nimport useResizeObserver from \"./useResizeObserver\";\nimport cx from \"classnames\";\nimport styles from \"./Chart.module.scss\";\n\n// const { width, height, left, right, top, bottom } = {\n//   width: 640,\n//   height: 200,\n//   left: 5,\n//   right: 5,\n//   top: 5,\n//   bottom: 20,\n// };\n\n// { list: Record<string,{\n//   date: string;\n//   value: number;\n// }> }\n\n// https://github.com/muratkemaldar/using-react-hooks-with-d3/tree/16-zoomable-line-chart\nexport default function Chart({\n  list,\n}: {\n  list: { investment_id: number; date: Date; value: number }[];\n}) {\n  const id = useMemo(() => \"myZoomableLineChart\", []);\n  const svgRef = useRef(null);\n  const tooltipRef = useRef(null);\n  const wrapperRef = useRef(null);\n  const dimensions = useResizeObserver(wrapperRef);\n  const [currentZoomState, setCurrentZoomState] = useState();\n\n  // const selected$ = useMemo(\n  //   () => new Subject<{ left: number; top: number; label: string }>(),\n  //   []\n  // );\n  // useEffect(() => {\n  //   const subscription = selected$\n  //     .pipe(\n  //       switchMap((selected) => of(selected).pipe(delay(selected ? 0 : 800)))\n  //     )\n  //     .subscribe((selected) => setSelected(selected));\n\n  //   return () => subscription.unsubscribe();\n  // }, [selected$]);\n\n  // const { width, height, margin } = {\n  //   width: 600,\n  //   height: 300,\n  //   margin: { top: 30, right: 30, bottom: 30, left: 60 },\n  // };\n\n  // useEffect(() => {\n  //   const el = d3.select(svgRef.current);\n  //   el.selectAll(\"*\").remove();\n\n  //   const data = list.map(({ date, value }) => ({\n  //     date: new Date(date),\n  //     value,\n  //   }));\n\n  //   console.log({ data });\n\n  //   const xScale = d3\n  //     .scaleTime()\n  //     .domain(d3.extent(data, (d) => d.date))\n  //     .range([0, width]);\n  //   const yScale = d3\n  //     .scaleLinear()\n  //     .domain([\n  //       0,\n  //       // d3.min(data, (d) => d.value),\n  //       d3.max(data, (d) => d.value),\n  //     ])\n  //     .range([height, 0]);\n\n  //   const svg = el\n  //     .append(\"g\")\n  //     .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n  //     .on(\"touchstart\", (event) => event.preventDefault())\n  //     .on(\"pointermove\", pointermoved);\n\n  //   const formatDate = (date) => format(date, \"yyyy-MM-dd\");\n\n  //   function update(date) {\n  //     // date = Xs[d3.bisectCenter(Xs, date)];\n  //     rule.attr(\"transform\", `translate(${xScale(date)},0)`);\n  //     ruleLabel.text(formatDate(date));\n  //     // serie.attr(\"transform\", ([, I]) => {\n  //     //   const i = I[d3.bisector(i => X[i]).center(I, date)];\n  //     //   return `translate(0,${yScale(1) - yScale(Y[i] / Y[I[0]])})`;\n  //     // });\n  //     // svg.property(\"value\", date).dispatch(\"input\", {bubbles: true}); // for viewof\n  //   }\n\n  //   function pointermoved(event) {\n  //     update(xScale.invert(d3.pointer(event)[0]));\n  //   }\n\n  //   const rule = svg.append(\"g\");\n\n  //   rule\n  //     .append(\"line\")\n  //     .attr(\"y1\", margin.top)\n  //     .attr(\"y2\", height - margin.bottom - 15)\n  //     .attr(\"stroke\", \"currentColor\");\n\n  //   const ruleLabel = rule\n  //     .append(\"text\")\n  //     .attr(\"y\", height - margin.bottom - 15)\n  //     .attr(\"fill\", \"currentColor\")\n  //     .attr(\"text-anchor\", \"middle\")\n  //     .attr(\"dy\", \"1em\");\n\n  //   const xAxis = d3\n  //     .axisBottom(xScale)\n  //     .ticks(5)\n  //     .tickSize(-height + margin.bottom);\n  //   const xAxisGroup = svg\n  //     .append(\"g\")\n  //     .attr(\"transform\", `translate(0, ${height - margin.bottom})`)\n  //     .call(xAxis);\n  //   xAxisGroup.select(\".domain\").remove();\n  //   xAxisGroup.selectAll(\"line\").attr(\"stroke\", \"rgba(0, 0, 0, 0.2)\");\n  //   xAxisGroup\n  //     .selectAll(\"text\")\n  //     .attr(\"opacity\", 0.5)\n  //     .attr(\"color\", \"blue\")\n  //     .attr(\"font-size\", \"0.75rem\");\n\n  //   const yAxis = d3\n  //     .axisLeft(yScale)\n  //     .ticks(5)\n  //     .tickSize(-width)\n  //     .tickFormat((val) => `${val}%`);\n  //   const yAxisGroup = svg.append(\"g\").call(yAxis);\n  //   yAxisGroup.select(\".domain\").remove();\n  //   yAxisGroup.selectAll(\"line\").attr(\"stroke\", \"rgba(0, 0, 0, 0.2)\");\n  //   yAxisGroup\n  //     .selectAll(\"text\")\n  //     .attr(\"opacity\", 0.5)\n  //     .attr(\"color\", \"blue\")\n  //     .attr(\"font-size\", \"0.75rem\");\n\n  //   const line = d3\n  //     .line()\n  //     .x((d) => xScale(d.date))\n  //     .y((d) => yScale(d.value));\n\n  //   svg\n  //     .selectAll(\".line\")\n  //     .data(data)\n  //     .enter()\n  //     .append(\"circle\")\n  //     .attr(\"cx\", (d) => xScale(d.date))\n  //     .attr(\"cy\", (d) => yScale(d.value))\n  //     .attr(\"r\", 2)\n  //     .attr(\"fill\", (d) => \"currentColor\");\n\n  //     // .append(\"path\")\n  //   // .attr(\"fill\", \"#ccc\")\n  //   // .attr(\"stroke\", (d) => '#ddd')\n  //   // .attr(\"stroke-width\", 3)\n  //   // .attr(\"d\", (d) => line(d));\n\n  //   // const dataset = list.map((item) => [\n  //   //   new Date(item.date),\n  //   //   item.value,\n  //   //   `${item.date}, ${item.value}`,\n  //   // ]);\n\n  //   // const xx = dataset.map(([x = 0]) => x);\n  //   // const yy = dataset.map(([, y = 0]) => y);\n\n  //   // // const xDomain = [Math.min(...xx), Math.max(...xx)];\n  //   // const xDomain = [new Date('2020-01-01'), Math.max(...xx)];\n  //   // const yDomain = [0, Math.max(...yy)];\n\n  //   // const xScale = scaleLinear()\n  //   //   .domain(xDomain)\n  //   //   .range([left, width - right]);\n\n  //   // const yScale = scaleLinear()\n  //   //   .domain(yDomain)\n  //   //   .range([height - bottom, top]);\n\n  //   // const color = scaleLinear().domain(yDomain).range([\"red\", \"blue\"]);\n\n  //   // select(containerRef.current).selectAll(\"circle\").remove();\n  //   // select(containerRef.current)\n  //   //   .selectAll(\"circle\")\n  //   //   .data(dataset)\n  //   //   .join(\n  //   //     (enter) =>\n  //   //       enter\n  //   //         .append(\"circle\")\n  //   //         .attr(\"cx\", ([x = 0]) => xScale(x))\n  //   //         .attr(\"cy\", ([, y = 0]) => yScale(y))\n  //   //         .attr(\"r\", 0)\n  //   //         .attr(\"fill\", ([x = 0]) => color(x))\n  //   //         .on(\"mouseover\", (e, [, , label]) =>\n  //   //           selected$.next({ left: e.layerX, top: e.layerY, label })\n  //   //         )\n  //   //         .on(\"mouseout\", () => selected$.next(null))\n  //   //         .call((enter) =>\n  //   //           enter.transition().duration(200).attr(\"r\", 2).style(\"opacity\", 1)\n  //   //         ),\n  //   //     (update) => update.attr(\"fill\", \"lightgrey\"),\n  //   //     (exit) =>\n  //   //       exit\n  //   //         .attr(\"fill\", \"tomato\")\n  //   //         .call((exit) =>\n  //   //           exit\n  //   //             .transition()\n  //   //             .duration(200)\n  //   //             .attr(\"r\", 0)\n  //   //             .style(\"opacity\", 0)\n  //   //             .remove()\n  //   //         )\n  //   //   );\n\n  //   // const xAxis = axisBottom(xScale)\n  //   //   .ticks(5)\n  //   //   .tickSizeOuter(0)\n  //   //   .tickFormat(timeFormat(\"%Y-%m-%d, %H:%M:%S\"));\n  //   // select(xAxisRef.current).call(xAxis).style(\"font-size\", \"8px\");\n\n  //   // const yAxis = axisLeft(yScale).ticks(5).tickSizeOuter(0);\n  //   // select(yAxisRef.current).call(yAxis).style(\"font-size\", \"8px\");\n  // }, [list]);\n\n  // const data = useMemo(() => list.map(({value}) => value), [list]);\n  // const data = useMemo(\n  //   () =>\n  //     list\n  //       .map(({ date, value }) => ({\n  //         date: new Date(date),\n  //         value,\n  //       }))\n  //       .sort((a, b) => a.date - b.date),\n  //   [list]\n  // );\n\n  useEffect(() => {\n    if (!wrapperRef.current) {\n      return;\n    }\n    const svg = select(svgRef.current);\n    const svgContent = svg.select(\".content\");\n    const { width, height } =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n\n    const tooltip = select(tooltipRef.current);\n    // .append('div')\n    // .attr('class', 'tooltip')\n    // .style('opacity', 0);\n\n    const data = group(list, (item) => item.investment_id);\n\n    console.log({ data });\n\n    // scales + line generator\n    // const xScale = scaleLinear()\n    const xScale = scaleTime()\n      .domain(extent(list, (d) => d.date))\n      .range([10, width - 10]);\n\n    if (currentZoomState) {\n      const newXScale = currentZoomState.rescaleX(xScale);\n      xScale.domain(newXScale.domain());\n    }\n\n    const yScale = scaleLinear()\n      .domain([0, max(list, (d) => d.value)])\n      // .domain(extent(data, (d) => d.value))\n      .range([height - 10, 10]);\n\n    const lineGenerator = line()\n      .x((d) => xScale(d.date))\n      .y((d) => yScale(d.value))\n      .curve(curveCardinal);\n\n    const color = scaleOrdinal()\n      .domain(data.keys())\n      .range([\n        \"#e41a1c\",\n        \"#377eb8\",\n        \"#4daf4a\",\n        \"#984ea3\",\n        \"#ff7f00\",\n        \"#ffff33\",\n        \"#a65628\",\n        \"#f781bf\",\n        \"#999999\",\n      ]);\n\n    // render the line\n    svgContent\n      .selectAll(\".myLine\")\n      .data(data)\n      .join(\"path\")\n      .attr(\"class\", \"myLine\")\n      .attr(\"stroke\", (d) => color(d[0]))\n      .attr(\"fill\", \"none\")\n      .attr(\"d\", (d) => lineGenerator(d[1]));\n\n    svgContent\n      .selectAll(\".myDot\")\n      .data(list)\n      .join(\"circle\")\n      .attr(\"class\", \"myDot\")\n      .attr(\"stroke\", \"black\")\n      .attr(\"r\", 3)\n      .attr(\"fill\", (d) => color(d.investment_id))\n      .attr(\"cx\", (d) => xScale(d.date))\n      .attr(\"cy\", (d) => yScale(d.value))\n      .on(\"mouseover\", (e, { date, investment_id, value }) => {\n        // focus.style('display', null);\n\n        const x = xScale(date);\n        const y = yScale(value);\n\n        console.log([\"mouseover\"], { date, investment_id, value, x, y });\n\n        tooltip\n          .html(JSON.stringify({ date, investment_id, value }, null, 2))\n          .transition()\n          .duration(300)\n          .style(\"opacity\", 0.9)\n          .style(\"transform\", `translate(${x + 30}px,${y - 30}px)`);\n      })\n      .on(\"mouseout\", () => {\n        tooltip.transition().duration(300).style(\"opacity\", 0);\n      })\n      .on(\"mousemove\", mousemove);\n\n    function mousemove(event) {\n      //  console.log(['mousemove'])\n      // const bisect = bisector(d => d.label).left;\n      // const xPos = mouse(this)[0];\n      // const x0 = bisect(data, xScale.invert(xPos));\n      // const d0 = data[x0];\n      // focus.attr(\n      //     'transform',\n      //     `translate(${xScale(d0.label)},${yScale(d0.value)})`,\n      // );\n      // tooltip\n      //     .transition()\n      //     .duration(300)\n      //     .style('opacity', 0.9);\n      // tooltip\n      //     .html(d0.tooltipContent || d0.label)\n      //     .style(\n      //         'transform',\n      //         `translate(${xScale(d0.label) + 30}px,${yScale(d0.value) - 30}px)`,\n      //   );\n    }\n\n    // axes\n    const xAxis = axisBottom(xScale);\n    svg\n      .select(\".x-axis\")\n      .attr(\"transform\", `translate(0, ${height})`)\n      .call(xAxis);\n\n    const yAxis = axisLeft(yScale);\n    svg.select(\".y-axis\").call(yAxis);\n\n    // zoom\n    const zoomBehavior = zoom()\n      .scaleExtent([1, 15])\n      .translateExtent([\n        [0, 0],\n        [width, height],\n      ])\n      .on(\"zoom\", (event) => {\n        const zoomState = event.transform;\n        setCurrentZoomState(zoomState);\n      });\n\n    svg.call(zoomBehavior);\n  }, [currentZoomState, list, dimensions]);\n\n  return (\n    <div className={cx(styles.Chart)} ref={wrapperRef}>\n      <div\n        ref={tooltipRef}\n        className={styles.Tooltip}\n        // style={{ top: selected.top, left: selected.left }}\n      >\n        {/* {selected.label} */}\n      </div>\n      <svg ref={svgRef}>\n        <defs>\n          <clipPath id={id}>\n            <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" />\n          </clipPath>\n        </defs>\n        <g className=\"content\" clipPath={`url(#${id})`}></g>\n        <g className=\"x-axis\" />\n        <g className=\"y-axis\" />\n      </svg>\n      {/* {selected && (\n        <div\n          className={styles.Tooltip}\n          style={{ top: selected.top, left: selected.left }}\n        >\n          {selected.label}\n        </div>\n      )} */}\n    </div>\n  );\n}\n","import { RefObject, useEffect, useState } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\n// https://github.com/muratkemaldar/using-react-hooks-with-d3/blob/16-zoomable-line-chart/src/useResizeObserver.js\nexport default function useResizeObserver(ref: RefObject<Element>) {\n  const [dimensions, setDimensions] = useState<DOMRect | null>(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    if (observeTarget) {\n      const resizeObserver = new ResizeObserver((entries) => {\n        entries.forEach((entry) => {\n          setDimensions(entry.contentRect);\n        });\n      });\n      resizeObserver.observe(observeTarget);\n      return () => {\n        resizeObserver.unobserve(observeTarget);\n      };\n    }\n  }, [ref]);\n  return dimensions;\n}\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Subject } from \"rxjs\";\nimport { debounceTime, distinctUntilChanged, map } from \"rxjs/operators\";\nimport { createAsset } from \"use-asset\";\nimport Chart from \"./ZoomableLineChart\";\nimport styles from \"./styles.module.scss\";\n\nimport type { Meta, Item } from \"@dev/cli/src/services/QuotesService/types\";\n\nconst ERA = 24 * 3600 * 1000;\n\n// https://github.com/pmndrs/use-asset#dealing-with-async-assets\nconst asset = createAsset(async (version) => {\n  const res = await fetch(`api/quotes/data.json?${version}`);\n  return await res.json();\n});\n\nfunction Data({ version = \"v1\" }) {\n  const { metas, objects: results } = asset.read(version) as {\n    metas: Meta[];\n    objects: Item[];\n  };\n\n  const options = useMemo(\n    () => ({\n      investment: metas\n        .map(({ id, name }) => ({ id, name }))\n        .sort((a, b) => a.name.localeCompare(b.name)),\n    }),\n    [results]\n  );\n\n  const [filters, setFilters] = useState(() => ({\n    investment: options.investment[0].id,\n    search: \"\",\n  }));\n\n  const [queries, setQueries] = useState(() => filters);\n\n  const search$ = useMemo(() => new Subject<any>(), []);\n\n  useEffect(() => {\n    const subscription = search$\n      .pipe(\n        map(({ search, ...filters }) =>\n          JSON.stringify({ ...queries, ...filters, search: search.trim() })\n        ),\n        distinctUntilChanged(),\n        debounceTime(400)\n      )\n      .subscribe((filters) =>\n        setQueries((queries) => ({ ...queries, ...JSON.parse(filters) }))\n      );\n    return () => subscription.unsubscribe();\n  }, [search$]);\n\n  useEffect(() => {\n    search$.next(filters);\n  }, [filters]);\n\n  console.log({ options, filters, results });\n\n  const from = useMemo(() => {\n    const list = results\n      .map(({ date }) => new Date(date).getTime())\n      .sort((a, b) => b - a);\n    return list[0] - ERA * 2000;\n  }, [results]);\n\n  const list = useMemo(\n    () =>\n      results\n        .filter(({ investment_id }) =>\n          [filters.investment].includes(investment_id)\n        )\n        .map(({ investment_id, value, date }) => ({\n          investment_id,\n          value,\n          date: new Date(date),\n        }))\n        .filter((item) => item.date.getTime() > from)\n        .sort((a, b) => a.date - b.date),\n    [results, filters]\n  );\n\n  return (\n    <div>\n      <fieldset>\n        <label>\n          <span>Investment</span>\n          <select\n            value={filters.investment}\n            onChange={useCallback(\n              ({ target }) =>\n                setFilters((filters) => ({\n                  ...filters,\n                  investment: Number(target.value),\n                })),\n              []\n            )}\n          >\n            {options.investment.map(({ id, name }) => (\n              <option key={id} value={id}>\n                {name}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label>\n          <span>Search</span>\n          <input\n            type=\"search\"\n            value={filters.search}\n            onChange={useCallback(\n              ({ target }) =>\n                setFilters((filters) => ({\n                  ...filters,\n                  search: target.value,\n                })),\n              []\n            )}\n          />\n        </label>\n      </fieldset>\n      <Chart\n        list={list}\n        // data={[\n        //   {name:'a',value:1},\n        //   {name:'b',value:3},\n        //   {name:'c',value:2}\n        // ]}\n        //  data={Object.entries(list)\n        // .reduce((data, [name, list]) => list.reduce((data, item) => Object.assign(data, {\n        // }) data), {})\n        // .map(([name, list]) => ({name, list: list.map(item => ({\n        //   ...item,\n        //   date: new Date(item.price_timestamp).getTime()\n        // }))}))}\n      />\n      {/* <Chart2 list={list} /> */}\n      {options.investment.map(({ id, name }) => (\n        <div key={id}>\n          <h3>{name}</h3>\n          {/* <Chart list={list[id]} /> */}\n        </div>\n      ))}\n      <pre>{JSON.stringify(metas, null, 2)}</pre>\n      <pre>{JSON.stringify(list.slice(0, 5), null, 2)}</pre>\n      {/* <pre>{JSON.stringify(list[queries.investment].slice(0, 5), null, 2)}</pre> */}\n    </div>\n  );\n}\n\nexport default function Section() {\n  return (\n    <div className={styles.Section}>\n      <h2>Quotes</h2>\n      <Data />\n    </div>\n  );\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".eVHbCENbT49QC3XWmnbd{position:relative;padding:2em}.eVHbCENbT49QC3XWmnbd svg{display:block;width:100%;height:300px;background:#f7f7f7;overflow:visible}.eVHbCENbT49QC3XWmnbd svg rect.orZ_7L91D_VhmxnTCGa4{stroke:none}.eVHbCENbT49QC3XWmnbd .w_36iD1m0f9OQ1GS1rMv{position:absolute}.w_36iD1m0f9OQ1GS1rMv{background:#fff;border:1px solid #d3d3d3;color:orange;padding:.25em}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/containers/Quotes/Chart.module.scss\"],\"names\":[],\"mappings\":\"AAAA,sBACE,iBAAA,CACA,WAAA,CAEA,0BACE,aAAA,CACA,UAAA,CACA,YAAA,CACA,kBAAA,CACA,gBAAA,CAEA,oDACE,WAAA,CAIJ,4CACE,iBAAA,CAGJ,sBACE,eAAA,CACA,wBAAA,CACA,YAAA,CACA,aAAA\",\"sourcesContent\":[\".Chart {\\n  position: relative;\\n  padding: 2em;\\n\\n  svg {\\n    display: block;\\n    width: 100%;\\n    height: 300px;\\n    background: #f7f7f7;\\n    overflow: visible;\\n\\n    rect.selection {\\n      stroke: none;\\n    }\\n  }\\n\\n  .Tooltip {\\n    position: absolute;\\n  }\\n}\\n.Tooltip {\\n  background: white;\\n  border: 1px solid lightgray;\\n  color: orange;\\n  padding: 0.25em;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Chart\": \"eVHbCENbT49QC3XWmnbd\",\n\t\"selection\": \"orZ_7L91D_VhmxnTCGa4\",\n\t\"Tooltip\": \"w_36iD1m0f9OQ1GS1rMv\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"._ESpGSPPpzgrCHtLDC15{color:purple}.B5XUoft7ajzWeLY9QZQ9{clear:both;padding:.5em 0;border:2px solid transparent;margin:.5em}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/containers/Quotes/styles.module.scss\"],\"names\":[],\"mappings\":\"AAAA,sBACE,YAAA,CAEF,sBACE,UAAA,CACA,cAAA,CACA,4BAAA,CACA,WAAA\",\"sourcesContent\":[\".Section {\\n  color: purple;\\n}\\n.Row {\\n  clear: both;\\n  padding: 0.5em 0;\\n  border: 2px solid transparent;\\n  margin: 0.5em;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Section\": \"_ESpGSPPpzgrCHtLDC15\",\n\t\"Row\": \"B5XUoft7ajzWeLY9QZQ9\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","Chart","list","id","useMemo","svgRef","useRef","tooltipRef","wrapperRef","dimensions","ref","useState","setDimensions","useEffect","observeTarget","current","resizeObserver","ResizeObserver","entries","forEach","entry","contentRect","observe","unobserve","useResizeObserver","currentZoomState","setCurrentZoomState","svg","select","svgContent","getBoundingClientRect","width","height","tooltip","data","group","item","investment_id","console","log","xScale","scaleTime","domain","extent","d","date","range","newXScale","rescaleX","yScale","scaleLinear","max","value","lineGenerator","line","x","y","curve","curveCardinal","color","scaleOrdinal","keys","selectAll","join","attr","on","e","html","JSON","stringify","transition","duration","style","event","xAxis","axisBottom","call","yAxis","axisLeft","zoomBehavior","zoom","scaleExtent","translateExtent","zoomState","transform","className","cx","styles","clipPath","asset","createAsset","version","fetch","res","json","Data","read","metas","results","objects","investment","map","name","sort","a","b","localeCompare","search","filters","setFilters","queries","setQueries","search$","Subject","subscription","pipe","trim","distinctUntilChanged","debounceTime","subscribe","parse","unsubscribe","next","from","Date","getTime","ERA","filter","includes","onChange","useCallback","target","Number","key","type","slice","Section","___CSS_LOADER_EXPORT___","push","module","locals"],"sourceRoot":""}