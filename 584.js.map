{"version":3,"file":"584.js","mappings":"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","sources":["webpack://@dev/web/../../node_modules/date-fns/esm/set/index.js","webpack://@dev/web/../../node_modules/date-fns/esm/setMonth/index.js","webpack://@dev/web/../../node_modules/date-fns/esm/getDaysInMonth/index.js","webpack://@dev/web/./src/containers/Energy/utils.ts","webpack://@dev/web/./src/containers/Energy/styles.module.scss?2488","webpack://@dev/web/./src/containers/Energy/Calculations.tsx","webpack://@dev/web/./src/containers/Energy/index.tsx","webpack://@dev/web/./src/containers/Energy/styles.module.scss","webpack://@dev/web/../../node_modules/date-fns/esm/sub/index.js","webpack://@dev/web/../../node_modules/date-fns/esm/subMonths/index.js","webpack://@dev/web/../../node_modules/date-fns/esm/subDays/index.js"],"sourcesContent":["import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport toDate from \"../toDate/index.js\";\nimport setMonth from \"../setMonth/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name set\n * @category Common Helpers\n * @summary Set date values to a given date.\n *\n * @description\n * Set date values to a given date.\n *\n * Sets time values to date from object `values`.\n * A value is not set if it is undefined or null or doesn't exist in `values`.\n *\n * Note about bundle size: `set` does not internally use `setX` functions from date-fns but instead opts\n * to use native `Date#setX` methods. If you use this function, you may not want to include the\n * other `setX` functions that date-fns provides if you are concerned about the bundle size.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Object} values - an object with options\n * @param {Number} [values.year] - the number of years to be set\n * @param {Number} [values.month] - the number of months to be set\n * @param {Number} [values.date] - the number of days to be set\n * @param {Number} [values.hours] - the number of hours to be set\n * @param {Number} [values.minutes] - the number of minutes to be set\n * @param {Number} [values.seconds] - the number of seconds to be set\n * @param {Number} [values.milliseconds] - the number of milliseconds to be set\n * @returns {Date} the new date with options set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `values` must be an object\n *\n * @example\n * // Transform 1 September 2014 into 20 October 2015 in a single line:\n * const result = set(new Date(2014, 8, 20), { year: 2015, month: 9, date: 20 })\n * //=> Tue Oct 20 2015 00:00:00\n *\n * @example\n * // Set 12 PM to 1 September 2014 01:23:45 to 1 September 2014 12:00:00:\n * const result = set(new Date(2014, 8, 1, 1, 23, 45), { hours: 12 })\n * //=> Mon Sep 01 2014 12:23:45\n */\nexport default function set(dirtyDate, values) {\n  requiredArgs(2, arguments);\n  if (_typeof(values) !== 'object' || values === null) {\n    throw new RangeError('values parameter must be an object');\n  }\n  var date = toDate(dirtyDate);\n\n  // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n  if (isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n  if (values.year != null) {\n    date.setFullYear(values.year);\n  }\n  if (values.month != null) {\n    date = setMonth(date, values.month);\n  }\n  if (values.date != null) {\n    date.setDate(toInteger(values.date));\n  }\n  if (values.hours != null) {\n    date.setHours(toInteger(values.hours));\n  }\n  if (values.minutes != null) {\n    date.setMinutes(toInteger(values.minutes));\n  }\n  if (values.seconds != null) {\n    date.setSeconds(toInteger(values.seconds));\n  }\n  if (values.milliseconds != null) {\n    date.setMilliseconds(toInteger(values.milliseconds));\n  }\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport getDaysInMonth from \"../getDaysInMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setMonth\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} month - the month of the new date\n * @returns {Date} the new date with the month set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set February to 1 September 2014:\n * const result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */\nexport default function setMonth(dirtyDate, dirtyMonth) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var month = toInteger(dirtyMonth);\n  var year = date.getFullYear();\n  var day = date.getDate();\n  var dateWithDesiredMonth = new Date(0);\n  dateWithDesiredMonth.setFullYear(year, month, 15);\n  dateWithDesiredMonth.setHours(0, 0, 0, 0);\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth);\n  // Set the last day of the new month\n  // if the original date was the last day of the longer month\n  date.setMonth(month, Math.min(day, daysInMonth));\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDaysInMonth\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of days in a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many days are in February 2000?\n * const result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\nexport default function getDaysInMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var monthIndex = date.getMonth();\n  var lastDayOfMonth = new Date(0);\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);\n  lastDayOfMonth.setHours(0, 0, 0, 0);\n  return lastDayOfMonth.getDate();\n}","import {\n  add,\n  differenceInDays,\n  differenceInMonths,\n  format,\n  set,\n  sub,\n} from \"date-fns\";\n\ninterface Cost {\n  value: (t: { value: number; count: number; days: number }) => number;\n  rates: Rate[];\n}\n\ntype Item = {\n  from: string;\n  to: string;\n  start: number;\n  value: number;\n  estimated?: boolean;\n};\n\ninterface Rate {\n  from: string;\n  to: string;\n  price: number;\n  vat: number;\n}\n\nexport type Items = Item[];\nexport type Rates = Record<string, Record<string, Cost>>;\n\nexport const getMatch = (item: Item[], list: Rates) => {\n  return Object.entries(list).reduce(\n    (result, [key, value]) =>\n      Object.assign(result, {\n        [key]: Object.entries(value).reduce(\n          (result, [key, cost]) =>\n            Object.assign(result, {\n              [key]: item\n                .map((item) =>\n                  cost.rates\n                    .filter(\n                      (price) => price.from <= item.to && item.from <= price.to\n                    )\n                    .map(({ from, to, price, vat }) =>\n                      (({ from, to, value }) => ({\n                        from,\n                        to,\n                        count: cost.value({\n                          value,\n                          count: differenceInMonths(\n                            add(\n                              set(new Date(to), {\n                                date: 1,\n                              }),\n                              {\n                                months: 1,\n                              }\n                            ),\n                            new Date(from)\n                          ),\n                          days: differenceInDays(new Date(to), new Date(from)),\n                        }),\n                        price,\n                        vat,\n                      }))({\n                        from: from > item.from ? from : item.from,\n                        to: to < item.to ? to : item.to,\n                        value: Math.round(item.value - item.start),\n                      })\n                    )\n                    .map((item) =>\n                      ((value) => ({\n                        ...item,\n                        value,\n                        tax: item.vat * value,\n                        total: (1 + item.vat) * value,\n                      }))(Math.round(100 * item.count * item.price) / 100)\n                    )\n                )\n                .flat(),\n            }),\n          {}\n        ),\n      }),\n    {}\n  );\n};\n\nexport const getRates = (\n  item: Record<string, { price: number; vat: number }>\n) =>\n  Object.entries(item).map(([from, item], i, list) => ({\n    ...item,\n    from,\n    to: format(\n      sub(\n        list[i + 1]\n          ? new Date(list[i + 1][0])\n          : add(\n              set(new Date(from), {\n                date: 1,\n              }),\n              {\n                months: 1,\n              }\n            ),\n        { days: 1 }\n      ),\n      \"yyyy-MM-dd\"\n    ),\n  }));\n\nexport const RATES_1: Rates = {\n  \"Sprzedaż energii elektrycznej\": {\n    \"Energia czynna\": {\n      value: ({ value }) => value,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 0.2762,\n          vat: 0.23,\n        },\n        \"2020-01-01\": {\n          price: 0.3195,\n          vat: 0.23,\n        },\n        \"2021-02-01\": {\n          price: 0.33,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 0.4346,\n          vat: 0.05,\n        },\n        \"2022-06-01\": {\n          price: 0.4522,\n          vat: 0.05,\n        },\n        \"2023-01-01\": {\n          price: 0.414,\n          vat: 0.23,\n        },\n        \"2099-01-01\": {\n          price: 0.414,\n          vat: 0.23,\n        },\n      }),\n    },\n    \"Opłata handlowa\": {\n      value: ({ count }) => count,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 4.29,\n          vat: 0.23,\n        },\n        \"2020-01-01\": {\n          price: 6.25,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 7.8,\n          vat: 0.05,\n        },\n        \"2022-06-01\": {\n          price: 8.38, // ?\n          vat: 0.05,\n        },\n        \"2023-01-01\": {\n          price: 8.38,\n          vat: 0.23,\n        },\n        \"2099-01-01\": {\n          price: 8.38,\n          vat: 0.23,\n        },\n      }),\n    },\n  },\n  \"Dystrybucja energii elektrycznej\": {\n    \"Opłata jakościowa\": {\n      value: ({ value }) => value,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 0.013,\n          vat: 0.23,\n        },\n        \"2020-01-01\": {\n          price: 0.0133,\n          vat: 0.23,\n        },\n        \"2021-02-01\": {\n          price: 0.0102,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 0.0095,\n          vat: 0.05,\n        },\n        \"2023-01-01\": {\n          price: 0.0095,\n          vat: 0.23,\n        },\n        \"2099-01-01\": {\n          price: 0.0095,\n          vat: 0.23,\n        },\n      }),\n    },\n    \"Opłata OZE\": {\n      value: ({ value }) => value,\n      rates: getRates({\n        \"2020-01-01\": {\n          price: 0.0,\n          vat: 0.23,\n        },\n        \"2021-01-01\": {\n          price: 0.0022,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 0.0009,\n          vat: 0.05,\n        },\n        \"2023-01-01\": {\n          price: 0.0,\n          vat: 0.23,\n        },\n        \"2099-01-01\": {\n          price: 0.0,\n          vat: 0.23,\n        },\n      }),\n    },\n    \"Opłata sieciowa zmienna\": {\n      value: ({ value }) => value,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 0.1349,\n          vat: 0.23,\n        },\n        \"2020-01-01\": {\n          price: 0.1372,\n          vat: 0.23,\n        },\n        \"2021-02-01\": {\n          price: 0.1391,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 0.1459,\n          vat: 0.05,\n        },\n        \"2023-01-01\": {\n          price: 0.1459,\n          vat: 0.23,\n        },\n        \"2099-01-01\": {\n          price: 0.1459,\n          vat: 0.23,\n        },\n      }),\n    },\n    \"Opłata kogeneracyjna\": {\n      value: ({ value }) => value,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 0.00158,\n          vat: 0.23,\n        },\n        \"2020-01-01\": {\n          price: 0.00139,\n          vat: 0.23,\n        },\n        \"2021-01-01\": {\n          price: 0.0,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 0.00406,\n          vat: 0.05,\n        },\n        \"2023-01-01\": {\n          price: 0.00406,\n          vat: 0.23,\n        },\n        \"2099-01-01\": {\n          price: 0.00406,\n          vat: 0.23,\n        },\n      }),\n    },\n    \"Opłata sieciowa stała\": {\n      value: ({ count }) => count,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 10.29,\n          vat: 0.23,\n        },\n        \"2020-01-01\": {\n          price: 10.55,\n          vat: 0.23,\n        },\n        \"2021-02-01\": {\n          price: 10.7,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 11.32,\n          vat: 0.05,\n        },\n        \"2023-01-01\": {\n          price: 11.32,\n          vat: 0.23,\n        },\n        \"2099-01-01\": {\n          price: 11.32,\n          vat: 0.23,\n        },\n      }),\n    },\n    \"Opłata przejściowa\": {\n      value: ({ count }) => count,\n      rates: getRates({\n        \"2020-01-01\": {\n          price: 0.1,\n          vat: 0.05,\n        },\n        \"2022-01-01\": {\n          price: 0.1,\n          vat: 0.05,\n        },\n        \"2022-04-01\": {\n          price: 0.1,\n          vat: 0.05,\n        },\n        \"2023-01-01\": {\n          price: 0.1,\n          vat: 0.23,\n        },\n        \"2099-01-01\": {\n          price: 0.1,\n          vat: 0.23,\n        },\n      }),\n    },\n    \"Opłata mocowa\": {\n      value: ({ count }) => count,\n      rates: getRates({\n        \"2021-01-01\": {\n          price: 4.48,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 5.68,\n          vat: 0.05,\n        },\n        \"2022-04-01\": {\n          price: 5.68,\n          vat: 0.05,\n        },\n        \"2023-01-01\": {\n          price: 5.72,\n          vat: 0.23,\n        },\n        \"2099-01-01\": {\n          price: 5.72,\n          vat: 0.23,\n        },\n      }),\n    },\n    \"Opłata abonamentowa\": {\n      value: ({ count }) => count,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 0.4,\n          vat: 0.23,\n        },\n        \"2020-01-01\": {\n          price: 0.42,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 0.42,\n          vat: 0.05,\n        },\n        \"2023-01-01\": {\n          price: 0.42,\n          vat: 0.23,\n        },\n        \"2099-01-01\": {\n          price: 0.42,\n          vat: 0.23,\n        },\n      }),\n    },\n  },\n};\n\nexport const RATES_2: Rates = {\n  ...RATES_1,\n  \"Dystrybucja energii elektrycznej\": {\n    ...RATES_1[\"Dystrybucja energii elektrycznej\"],\n    \"Opłata przejściowa\": {\n      value: ({ count }) => count,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 0.33,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 0.33,\n          vat: 0.05,\n        },\n        \"2022-04-01\": {\n          price: 0.33,\n          // price: 0.33, // ?\n          vat: 0.05,\n        },\n        \"2099-01-01\": {\n          price: 0.33,\n          vat: 0.05,\n        },\n      }),\n    },\n    \"Opłata mocowa\": {\n      value: ({ count }) => count,\n      rates: getRates({\n        \"2021-01-01\": {\n          price: 4.48,\n          vat: 0.23,\n        },\n        \"2021-04-04\": {\n          price: 10.46,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 13.25,\n          vat: 0.05,\n        },\n        \"2022-04-01\": {\n          price: 13.25,\n          vat: 0.05,\n        },\n        \"2024-04-01\": {\n          price: 13.25,\n          vat: 0.05,\n        },\n      }),\n    },\n  },\n};\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  type ChangeEventHandler,\n  type MouseEventHandler,\n  useCallback,\n  useState,\n} from \"react\";\nimport { format } from \"date-fns\";\nimport { type Items, type Rates, getMatch } from \"./utils\";\nimport styles from \"./styles.module.scss\";\n\nconst formatRange = (from: string, to: string) =>\n  `${format(new Date(from), \"dd.MM.yy\")}-${format(new Date(to), \"dd.MM.yy\")}`;\n\nconst getSummary = (\n  line: Record<string, { value: number; tax: number; total: number }[]>\n) =>\n  Object.entries(line).reduce(\n    (result, [_, list]) =>\n      list.reduce(\n        ({ value, tax, total }, item) => ({\n          value: value + item.value,\n          tax: tax + item.tax,\n          total: total + item.total,\n        }),\n        result\n      ),\n    {\n      value: 0,\n      tax: 0,\n      total: 0,\n    }\n  );\n\nexport default function Calculations({\n  counter,\n  items,\n  rates,\n  selected,\n  setSelected,\n}: {\n  counter: string;\n  items: Items[];\n  rates: Rates;\n  selected: number[];\n  setSelected: Function;\n}) {\n  const [expanded, setExpanded] = useState<number[]>([]);\n  // console.log(expanded, items);\n\n  return (\n    <div className={styles.Calculations}>\n      <h3>Calculations</h3>\n      <table>\n        <tbody>\n          <tr>\n            <th>\n              <input\n                type=\"checkbox\"\n                checked={selected.length === items.length}\n                onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                  ({ target }) =>\n                    setSelected(target.checked ? items.map((_, i) => i) : []),\n                  []\n                )}\n              />\n            </th>\n            <th align=\"left\">Licznik / Okres zużycia</th>\n            <th align=\"right\">Netto [zł]</th>\n            <th align=\"right\">Podatek VAT [zł]</th>\n            <th align=\"right\">Brutto [zł]</th>\n          </tr>\n          {items.map((item, i) =>\n            [\n              Object.values(getMatch(item, rates)).reduce(\n                (result, line) =>\n                  Object.entries(line).reduce(\n                    (result, [_, list]) =>\n                      list.reduce(\n                        ({ value, tax, total }, item) => ({\n                          value: value + item.value,\n                          tax: tax + item.tax,\n                          total: total + item.total,\n                        }),\n                        result\n                      ),\n                    result\n                  ),\n                {\n                  value: 0,\n                  tax: 0,\n                  total: 0,\n                }\n              ),\n            ]\n              .map(({ value, tax, total }) => (\n                <tr key={i}>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={selected.includes(i)}\n                      onChange={useCallback<\n                        ChangeEventHandler<HTMLInputElement>\n                      >(\n                        ({ target }) =>\n                          setSelected((selected: number[]) =>\n                            !target.checked\n                              ? selected.filter((n) => n !== i)\n                              : selected.concat(i)\n                          ),\n                        []\n                      )}\n                    />\n                  </td>\n                  <td align=\"left\">\n                    <a\n                      href=\"#\"\n                      onClick={useCallback<MouseEventHandler>(\n                        (e) => (\n                          e.preventDefault(),\n                          setExpanded((expanded) =>\n                            expanded.includes(i)\n                              ? expanded.filter((n) => n !== i)\n                              : expanded.concat(i)\n                          )\n                        ),\n                        []\n                      )}\n                    >\n                      {`${counter} / Szczegóły rozliczenia za okres od ${format(\n                        new Date(item[0].from),\n                        \"dd.MM.yyyy\"\n                      )} do ${format(\n                        new Date(item[item.length - 1].to),\n                        \"dd.MM.yyyy\"\n                      )}`}\n                    </a>\n                  </td>\n                  <td align=\"right\">\n                    {new Intl.NumberFormat(\"pl-PL\", {\n                      minimumFractionDigits: 2,\n                    }).format(value)}\n                  </td>\n                  <td align=\"right\">\n                    {new Intl.NumberFormat(\"pl-PL\", {\n                      minimumFractionDigits: 2,\n                    }).format(tax)}\n                  </td>\n                  <td align=\"right\">\n                    {new Intl.NumberFormat(\"pl-PL\", {\n                      minimumFractionDigits: 2,\n                    }).format(total)}\n                  </td>\n                </tr>\n              ))\n              .concat(\n                expanded.includes(i)\n                  ? [\n                      <tr key={`${i}-details`}>\n                        <td></td>\n                        <td colSpan={6}>\n                          <div>\n                            <h4>Wskazania układu pomiarowego</h4>\n                            <table width=\"100%\">\n                              <tbody>\n                                <tr>\n                                  <th align=\"left\">Numer licznika</th>\n                                  <th align=\"left\">Okres zużycia</th>\n                                  <th align=\"right\">\n                                    Poprzednie wskazanie licznika\n                                  </th>\n                                  <th align=\"right\">\n                                    Obecne wskazanie licznika\n                                  </th>\n                                  <th align=\"right\">Rodzaj odczytu</th>\n                                  <th align=\"right\">Zużycie [kWh]</th>\n                                </tr>\n                                {item.map(\n                                  (\n                                    { from, to, start, value, estimated },\n                                    k\n                                  ) => (\n                                    <tr key={k}>\n                                      <td>{counter}</td>\n                                      <td align=\"right\">\n                                        {formatRange(from, to)}\n                                      </td>\n                                      <td align=\"right\">\n                                        {new Intl.NumberFormat(\"pl-PL\", {\n                                          minimumFractionDigits: 2,\n                                        }).format(start)}\n                                      </td>\n                                      <td align=\"right\">\n                                        {new Intl.NumberFormat(\"pl-PL\", {\n                                          minimumFractionDigits: 2,\n                                        }).format(value)}\n                                      </td>\n                                      <td align=\"right\">\n                                        {estimated ? \"S**\" : \"R\"}\n                                      </td>\n                                      <td align=\"right\">\n                                        {new Intl.NumberFormat(\"pl-PL\", {\n                                          minimumFractionDigits: 2,\n                                        }).format(value - start)}\n                                      </td>\n                                    </tr>\n                                  )\n                                )}\n                              </tbody>\n                              <tfoot>\n                                <tr>\n                                  <th align=\"left\">Razem</th>\n                                  <td colSpan={3}></td>\n                                  <td align=\"right\"></td>\n                                </tr>\n                              </tfoot>\n                            </table>\n                          </div>\n                          {Object.entries(getMatch(item, rates)).map(\n                            ([name, list], key) => (\n                              <div key={key}>\n                                <h4>{name}</h4>\n                                <table width=\"100%\">\n                                  <tbody>\n                                    <tr>\n                                      <th></th>\n                                      <th align=\"left\">Okres zużycia</th>\n                                      <th align=\"right\">Ilość</th>\n                                      <th align=\"right\">Cena netto [zł]</th>\n                                      <th align=\"right\">Wartość netto [zł]</th>\n                                      <th align=\"right\">Stawka VAT [%]</th>\n                                      <th align=\"right\">Podatek VAT [zł]</th>\n                                      <th align=\"right\">Wartość brutto [zł]</th>\n                                    </tr>\n                                    {Object.entries(list).map(\n                                      ([label, list], i) =>\n                                        list.map(\n                                          (\n                                            {\n                                              from,\n                                              to,\n                                              count,\n                                              price,\n                                              value,\n                                              vat,\n                                              tax,\n                                              total,\n                                            },\n                                            j\n                                          ) => (\n                                            <tr key={`${i}-${j}`}>\n                                              <td>{label}</td>\n                                              <td align=\"right\">\n                                                {formatRange(from, to)}\n                                              </td>\n                                              <td align=\"right\">{count}</td>\n                                              <td align=\"right\">\n                                                {new Intl.NumberFormat(\n                                                  \"pl-PL\",\n                                                  {\n                                                    minimumFractionDigits: 4,\n                                                    maximumFractionDigits: 5,\n                                                  }\n                                                ).format(price)}\n                                              </td>\n                                              <td align=\"right\">\n                                                {new Intl.NumberFormat(\n                                                  \"pl-PL\",\n                                                  {\n                                                    minimumFractionDigits: 2,\n                                                  }\n                                                ).format(value)}\n                                              </td>\n                                              <td align=\"right\">{vat}</td>\n                                              <td align=\"right\">\n                                                {new Intl.NumberFormat(\n                                                  \"pl-PL\",\n                                                  {\n                                                    minimumFractionDigits: 2,\n                                                  }\n                                                ).format(tax)}\n                                              </td>\n                                              <td align=\"right\">\n                                                {new Intl.NumberFormat(\n                                                  \"pl-PL\",\n                                                  {\n                                                    minimumFractionDigits: 2,\n                                                  }\n                                                ).format(total)}\n                                              </td>\n                                            </tr>\n                                          )\n                                        )\n                                    )}\n                                  </tbody>\n                                  <tfoot>\n                                    {[getSummary(list)].map((item, i) => (\n                                      <tr key={i}>\n                                        <th align=\"left\">Razem</th>\n                                        <td colSpan={3}></td>\n                                        <td align=\"right\">\n                                          {new Intl.NumberFormat(\"pl-PL\", {\n                                            minimumFractionDigits: 2,\n                                          }).format(item.value)}\n                                        </td>\n                                        <td></td>\n                                        <td align=\"right\">\n                                          {new Intl.NumberFormat(\"pl-PL\", {\n                                            minimumFractionDigits: 2,\n                                          }).format(item.tax)}\n                                        </td>\n                                        <td align=\"right\">\n                                          {new Intl.NumberFormat(\"pl-PL\", {\n                                            minimumFractionDigits: 2,\n                                          }).format(item.total)}\n                                        </td>\n                                      </tr>\n                                    ))}\n                                  </tfoot>\n                                </table>\n                              </div>\n                            )\n                          )}\n                        </td>\n                      </tr>,\n                    ]\n                  : []\n              )\n          )}\n        </tbody>\n        <tfoot>\n          {[\n            items\n              .filter((_, i) => selected.includes(i))\n              .reduce(\n                (result, item) =>\n                  Object.values(getMatch(item, rates)).reduce(\n                    (result, line) =>\n                      Object.entries(line).reduce(\n                        (result, [_, list]) =>\n                          list.reduce(\n                            ({ value, tax, total }, item) => ({\n                              value: value + item.value,\n                              tax: tax + item.tax,\n                              total: total + item.total,\n                            }),\n                            result\n                          ),\n                        result\n                      ),\n                    result\n                  ),\n                {\n                  value: 0,\n                  tax: 0,\n                  total: 0,\n                }\n              ),\n          ].map(({ value, tax, total }, i) => (\n            <tr key={i}>\n              <td></td>\n              <td></td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(value)}\n              </td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(tax)}\n              </td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(total)}\n              </td>\n            </tr>\n          ))}\n        </tfoot>\n      </table>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport Calculations from \"./Calculations\";\nimport styles from \"./styles.module.scss\";\n\nimport { type Items, RATES_1, RATES_2, type Rates } from \"./utils\";\n\nexport const ITEMS_1: Items[] = [\n  [\n    {\n      from: \"2020-08-07\",\n      to: \"2020-12-31\",\n      start: 5479.41,\n      value: 5748.76,\n      estimated: true,\n    },\n    {\n      from: \"2021-01-01\",\n      to: \"2021-01-31\",\n      start: 5748.76,\n      value: 5816.55,\n      estimated: true,\n    },\n    {\n      from: \"2021-02-01\",\n      to: \"2021-02-02\",\n      start: 5816.55,\n      value: 5820.63,\n    },\n  ],\n  [\n    {\n      // data: {\n      //   ...RATES[\"2021-04-04\"],\n      //   \"Opłata przejściowa\": 0.1,\n      //   \"Opłata mocowa\": 4.48,\n      // },\n      from: \"2021-02-03\",\n      to: \"2021-05-31\",\n      start: 5820.63,\n      value: 6082.55,\n      estimated: true,\n    },\n    {\n      // data: {\n      //   ...RATES[\"2021-04-04\"],\n      //   \"Opłata przejściowa\": 0.1,\n      //   \"Opłata mocowa\": 4.48,\n      // },\n      from: \"2021-06-01\",\n      to: \"2021-08-09\",\n      start: 6082.55,\n      value: 6185.36,\n    },\n  ],\n  [\n    {\n      // data: {\n      //   ...RATES[\"2021-04-04\"],\n      //   \"Opłata przejściowa\": 0.1,\n      //   \"Opłata mocowa\": 4.48,\n      // },\n      from: \"2021-08-10\",\n      to: \"2021-12-31\",\n      start: 6185.36,\n      value: 6447.49,\n      estimated: true,\n    },\n    {\n      from: \"2022-01-01\",\n      to: \"2022-02-23\",\n      start: 6447.49,\n      value: 6561.0,\n    },\n  ],\n  [\n    {\n      from: \"2022-02-24\",\n      to: \"2022-03-31\",\n      start: 6561.0,\n      value: 6561.0 + 85.0,\n    },\n    {\n      from: \"2022-04-01\",\n      to: \"2022-05-31\",\n      start: 6561.0 + 85.0,\n      value: 6561.0 + 85.0 + 102.0,\n    },\n    {\n      from: \"2022-06-01\",\n      to: \"2022-08-09\",\n      start: 6561.0 + 85.0 + 102.0,\n      value: 6835.2,\n    },\n  ],\n  [\n    {\n      from: \"2022-10-15\",\n      to: \"2023-01-07\",\n      start: 2.26,\n      value: 171.86,\n    },\n  ],\n  [\n    {\n      // from: \"2022-10-15\",\n      from: \"2022-09-01\",\n      to: \"2022-12-31\",\n      start: 2.26,\n      value: 171.86,\n    },\n    {\n      from: \"2023-01-01\",\n      // to: \"2023-04-11\",\n      to: \"2023-03-31\",\n      start: 171.86,\n      value: 372.69,\n    },\n  ],\n  [\n    {\n      // from: \"2022-10-15\",\n      from: \"2022-10-01\",\n      to: \"2022-12-31\",\n      start: 2.26,\n      value: 171.86,\n    },\n    {\n      from: \"2023-01-01\",\n      // to: \"2023-04-11\",\n      to: \"2023-04-30\",\n      start: 171.86,\n      value: 372.69,\n    },\n  ],\n  [\n    {\n      from: \"2022-08-10\",\n      to: \"2022-09-13\",\n      start: 6_835.2,\n      value: 6_835.2 + 41.31,\n    },\n    {\n      from: \"2022-09-14\",\n      to: \"2022-12-31\",\n      start: 0,\n      value: 174.78,\n      estimated: true,\n    },\n    {\n      from: \"2023-01-01\",\n      to: \"2023-02-07\",\n      start: 174.78,\n      value: 174.78 + 67.22,\n    },\n  ],\n];\n// .map((item) => ({ contract: \"0351\", counter: \"8586\", ...item }))\n\nexport const ITEMS_2: Items[] = [\n  [\n    {\n      from: \"2019-10-20\",\n      to: \"2019-12-31\",\n      start: 5090.33,\n      value: 6099.11,\n      estimated: true,\n    },\n  ],\n  [\n    {\n      // data: {\n      //   ...RATES[\"2019-10-20\"],\n      //   \"Opłata jakościowa\": 0.0133,\n      //   \"Opłata sieciowa zmienna\": 0.1372,\n      //   \"Opłata sieciowa stała\": 10.55,\n      //   \"Opłata abonamentowa\": 0.42,\n      // },\n      from: \"2019-10-20\",\n      to: \"2019-12-31\",\n      start: 6099.11,\n      value: 5090.33 + 1413,\n      estimated: true,\n    },\n  ],\n  [\n    {\n      from: \"2020-01-01\",\n      to: \"2020-04-09\",\n      start: 5090.33 + 1413,\n      value: 7272.0,\n    },\n  ],\n  [\n    {\n      from: \"2020-04-10\",\n      to: \"2020-10-22\",\n      start: 7272.0,\n      value: 9734.69,\n    },\n  ],\n  [\n    {\n      from: \"2020-10-23\",\n      to: \"2020-12-31\",\n      start: 9734.69,\n      value: 10831.52,\n      estimated: true,\n    },\n  ],\n  [\n    {\n      // data: {\n      //   ...RATES[\"2021-04-04\"],\n      //   \"Energia czynna\": 0.3195,\n      //   \"Opłata handlowa\": 6.25,\n      //   \"Opłata jakościowa\": 0.0133,\n      //   \"Opłata sieciowa zmienna\": 0.1372,\n      //   \"Opłata sieciowa stała\": 10.55,\n      // },\n      from: \"2021-01-01\",\n      to: \"2021-01-31\",\n      start: 10831.52,\n      value: 11296.29,\n      estimated: true,\n    },\n  ],\n  [\n    {\n      from: \"2021-02-01\",\n      to: \"2021-04-03\",\n      start: 11296.29,\n      value: 12108.42,\n    },\n  ],\n  [\n    {\n      from: \"2021-04-04\",\n      to: \"2021-05-31\",\n      start: 12108.42,\n      value: 12736.33,\n      estimated: true,\n    },\n  ],\n  [\n    {\n      from: \"2021-06-01\",\n      to: \"2021-10-28\",\n      start: 12736.33,\n      value: 14643.17,\n    },\n  ],\n  [\n    {\n      from: \"2021-10-29\",\n      to: \"2021-12-31\",\n      start: 14643.17,\n      value: 15588.03,\n    },\n  ],\n  [\n    {\n      from: \"2022-01-01\",\n      to: \"2022-04-12\",\n      start: 15588.03,\n      value: 16919.0,\n      estimated: true,\n    },\n  ],\n  [\n    {\n      from: \"2022-04-13\",\n      to: \"2022-05-31\",\n      start: 16919.0,\n      value: 16919.0 + 530,\n    },\n    {\n      from: \"2022-06-01\",\n      to: \"2022-10-21\",\n      start: 16919.0 + 530,\n      value: 19169.0,\n    },\n  ],\n];\n// .map((item) => ({ contract: \"8586\", counter: \"2752\", ...item }))\n\nfunction Data({\n  counter,\n  items,\n  rates,\n}: {\n  counter: string;\n  items: Items[];\n  rates: Rates;\n}) {\n  const [selected, setSelected] = useState<number[]>(() =>\n    items.map((_, i) => i)\n  );\n\n  return (\n    <div>\n      <Calculations\n        counter={counter}\n        items={items}\n        rates={rates}\n        selected={selected}\n        setSelected={setSelected}\n      />\n    </div>\n  );\n}\n\nexport default function Section() {\n  return (\n    <div className={styles.Section}>\n      <h2>Energy</h2>\n      <Data counter=\"9057\" items={ITEMS_1} rates={RATES_1} />\n      <Data counter=\"7224\" items={ITEMS_2} rates={RATES_2} />\n    </div>\n  );\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.ILYKcZwRrAG3B5Qm_6ti{color:purple}.QWuaC1AqCgpyeQ75yBWq{font-family:Arial,Helvetica,sans-serif;font-size:.7em}.QWuaC1AqCgpyeQ75yBWq table{border-collapse:collapse}.QWuaC1AqCgpyeQ75yBWq table tr:hover{background-color:#e0e0e0}.QWuaC1AqCgpyeQ75yBWq tr:nth-child(even){background-color:#f7f7f7}.QWuaC1AqCgpyeQ75yBWq th,.QWuaC1AqCgpyeQ75yBWq td{padding:.25em}.PbI4uYIFtC7LCTjgoOUg{clear:both;padding:.5em 0;border:2px solid rgba(0,0,0,0);margin:.5em}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/containers/Energy/styles.module.scss\"],\"names\":[],\"mappings\":\"AAAA,sBACE,YAAA,CAEF,sBACE,sCAAA,CACA,cAAA,CACA,4BACE,wBAAA,CAEE,qCACE,wBAAA,CAKJ,yCACE,wBAAA,CAGJ,kDAEE,aAAA,CAGJ,sBACE,UAAA,CACA,cAAA,CACA,8BAAA,CACA,WAAA\",\"sourcesContent\":[\".Section {\\n  color: purple;\\n}\\n.Calculations {\\n  font-family: Arial, Helvetica, sans-serif;\\n  font-size: 0.7em;\\n  table {\\n    border-collapse: collapse;\\n    tr {\\n      &:hover {\\n        background-color: #e0e0e0;\\n      }\\n    }\\n  }\\n  tr {\\n    &:nth-child(even) {\\n      background-color: #f7f7f7;\\n    }\\n  }\\n  th,\\n  td {\\n    padding: 0.25em;\\n  }\\n}\\n.Row {\\n  clear: both;\\n  padding: 0.5em 0;\\n  border: 2px solid transparent;\\n  margin: 0.5em;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Section\": `ILYKcZwRrAG3B5Qm_6ti`,\n\t\"Calculations\": `QWuaC1AqCgpyeQ75yBWq`,\n\t\"Row\": `PbI4uYIFtC7LCTjgoOUg`\n};\nexport default ___CSS_LOADER_EXPORT___;\n","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport subDays from \"../subDays/index.js\";\nimport subMonths from \"../subMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\nexport default function sub(date, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || _typeof(duration) !== 'object') return new Date(NaN);\n  var years = duration.years ? toInteger(duration.years) : 0;\n  var months = duration.months ? toInteger(duration.months) : 0;\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\n  var days = duration.days ? toInteger(duration.days) : 0;\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0;\n\n  // Subtract years and months\n  var dateWithoutMonths = subMonths(date, months + years * 12);\n\n  // Subtract weeks and days\n  var dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7);\n\n  // Subtract hours, minutes and seconds\n  var minutestoSub = minutes + hours * 60;\n  var secondstoSub = seconds + minutestoSub * 60;\n  var mstoSub = secondstoSub * 1000;\n  var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);\n  return finalDate;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}","import addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\nexport default function subDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}"],"names":["set","dirtyDate","values","requiredArgs","arguments","RangeError","date","toDate","isNaN","getTime","Date","NaN","year","setFullYear","month","dirtyMonth","toInteger","getFullYear","day","getDate","dateWithDesiredMonth","setHours","daysInMonth","monthIndex","getMonth","lastDayOfMonth","getDaysInMonth","setMonth","Math","min","setDate","hours","minutes","setMinutes","seconds","setSeconds","milliseconds","setMilliseconds","getMatch","item","list","Object","entries","reduce","result","_ref","_ref2","_slicedToArray","key","value","assign","_defineProperty","_ref3","_ref4","cost","map","rates","filter","price","from","to","_ref5","vat","_ref6","count","differenceInMonths","add","months","days","differenceInDays","round","start","_objectSpread","tax","total","flat","getRates","_ref7","i","_ref8","format","sub","RATES_1","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","RATES_2","_ref19","_ref20","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","undefined","formatRange","concat","getSummary","line","Calculations","counter","items","selected","setSelected","_useState2","useState","expanded","setExpanded","React","className","styles","type","checked","length","onChange","useCallback","target","_","align","includes","n","href","onClick","e","preventDefault","Intl","NumberFormat","minimumFractionDigits","colSpan","width","k","estimated","name","label","j","maximumFractionDigits","ITEMS_1","ITEMS_2","Data","Section","___CSS_LOADER_EXPORT___","push","module","id","duration","years","weeks","dateWithoutMonths","dirtyAmount","amount","addMonths","subMonths","dateWithoutDays","addDays","subDays","mstoSub"],"sourceRoot":""}