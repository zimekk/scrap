{"version":3,"file":"584.js","mappings":"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","sources":["webpack://@dev/web/../../node_modules/date-fns/esm/getDaysInMonth/index.js","webpack://@dev/web/../../node_modules/date-fns/esm/setMonth/index.js","webpack://@dev/web/../../node_modules/date-fns/esm/set/index.js","webpack://@dev/web/./src/containers/Energy/utils.ts","webpack://@dev/web/./src/containers/Energy/styles.module.scss?2488","webpack://@dev/web/./src/containers/Energy/Calculations.tsx","webpack://@dev/web/./src/containers/Energy/index.tsx","webpack://@dev/web/./src/containers/Energy/styles.module.scss","webpack://@dev/web/../../node_modules/date-fns/esm/subDays/index.js","webpack://@dev/web/../../node_modules/date-fns/esm/subMonths/index.js","webpack://@dev/web/../../node_modules/date-fns/esm/sub/index.js"],"sourcesContent":["import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDaysInMonth\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of days in a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many days are in February 2000?\n * const result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\n\nexport default function getDaysInMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var monthIndex = date.getMonth();\n  var lastDayOfMonth = new Date(0);\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);\n  lastDayOfMonth.setHours(0, 0, 0, 0);\n  return lastDayOfMonth.getDate();\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport getDaysInMonth from \"../getDaysInMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setMonth\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} month - the month of the new date\n * @returns {Date} the new date with the month set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set February to 1 September 2014:\n * const result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */\n\nexport default function setMonth(dirtyDate, dirtyMonth) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var month = toInteger(dirtyMonth);\n  var year = date.getFullYear();\n  var day = date.getDate();\n  var dateWithDesiredMonth = new Date(0);\n  dateWithDesiredMonth.setFullYear(year, month, 15);\n  dateWithDesiredMonth.setHours(0, 0, 0, 0);\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth); // Set the last day of the new month\n  // if the original date was the last day of the longer month\n\n  date.setMonth(month, Math.min(day, daysInMonth));\n  return date;\n}","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport toDate from \"../toDate/index.js\";\nimport setMonth from \"../setMonth/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name set\n * @category Common Helpers\n * @summary Set date values to a given date.\n *\n * @description\n * Set date values to a given date.\n *\n * Sets time values to date from object `values`.\n * A value is not set if it is undefined or null or doesn't exist in `values`.\n *\n * Note about bundle size: `set` does not internally use `setX` functions from date-fns but instead opts\n * to use native `Date#setX` methods. If you use this function, you may not want to include the\n * other `setX` functions that date-fns provides if you are concerned about the bundle size.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Object} values - an object with options\n * @param {Number} [values.year] - the number of years to be set\n * @param {Number} [values.month] - the number of months to be set\n * @param {Number} [values.date] - the number of days to be set\n * @param {Number} [values.hours] - the number of hours to be set\n * @param {Number} [values.minutes] - the number of minutes to be set\n * @param {Number} [values.seconds] - the number of seconds to be set\n * @param {Number} [values.milliseconds] - the number of milliseconds to be set\n * @returns {Date} the new date with options set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `values` must be an object\n *\n * @example\n * // Transform 1 September 2014 into 20 October 2015 in a single line:\n * const result = set(new Date(2014, 8, 20), { year: 2015, month: 9, date: 20 })\n * //=> Tue Oct 20 2015 00:00:00\n *\n * @example\n * // Set 12 PM to 1 September 2014 01:23:45 to 1 September 2014 12:00:00:\n * const result = set(new Date(2014, 8, 1, 1, 23, 45), { hours: 12 })\n * //=> Mon Sep 01 2014 12:23:45\n */\nexport default function set(dirtyDate, values) {\n  requiredArgs(2, arguments);\n\n  if (_typeof(values) !== 'object' || values === null) {\n    throw new RangeError('values parameter must be an object');\n  }\n\n  var date = toDate(dirtyDate); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n\n  if (isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n\n  if (values.year != null) {\n    date.setFullYear(values.year);\n  }\n\n  if (values.month != null) {\n    date = setMonth(date, values.month);\n  }\n\n  if (values.date != null) {\n    date.setDate(toInteger(values.date));\n  }\n\n  if (values.hours != null) {\n    date.setHours(toInteger(values.hours));\n  }\n\n  if (values.minutes != null) {\n    date.setMinutes(toInteger(values.minutes));\n  }\n\n  if (values.seconds != null) {\n    date.setSeconds(toInteger(values.seconds));\n  }\n\n  if (values.milliseconds != null) {\n    date.setMilliseconds(toInteger(values.milliseconds));\n  }\n\n  return date;\n}","import {\n  add,\n  differenceInDays,\n  differenceInMonths,\n  format,\n  set,\n  sub,\n} from \"date-fns\";\n\ninterface Cost {\n  value: (t: { value: number; count: number; days: number }) => number;\n  rates: Rate[];\n}\n\ntype Item = {\n  from: string;\n  to: string;\n  start: number;\n  value: number;\n  estimated?: boolean;\n};\n\ninterface Rate {\n  from: string;\n  to: string;\n  price: number;\n  vat: number;\n}\n\nexport type Items = Item[];\nexport type Rates = Record<string, Record<string, Cost>>;\n\nexport const getMatch = (item: Item[], list: Rates) => {\n  return Object.entries(list).reduce(\n    (result, [key, value]) =>\n      Object.assign(result, {\n        [key]: Object.entries(value).reduce(\n          (result, [key, cost]) =>\n            Object.assign(result, {\n              [key]: item\n                .map((item) =>\n                  cost.rates\n                    .filter(\n                      (price) => price.from <= item.to && item.from <= price.to\n                    )\n                    .map(({ from, to, price, vat }) =>\n                      (({ from, to, value }) => ({\n                        from,\n                        to,\n                        count: cost.value({\n                          value,\n                          count: differenceInMonths(\n                            add(\n                              set(new Date(to), {\n                                date: 1,\n                              }),\n                              {\n                                months: 1,\n                              }\n                            ),\n                            new Date(from)\n                          ),\n                          days: differenceInDays(new Date(to), new Date(from)),\n                        }),\n                        price,\n                        vat,\n                      }))({\n                        from: from > item.from ? from : item.from,\n                        to: to < item.to ? to : item.to,\n                        value: Math.round(item.value - item.start),\n                      })\n                    )\n                    .map((item) =>\n                      ((value) => ({\n                        ...item,\n                        value,\n                        tax: item.vat * value,\n                        total: (1 + item.vat) * value,\n                      }))(Math.round(100 * item.count * item.price) / 100)\n                    )\n                )\n                .flat(),\n            }),\n          {}\n        ),\n      }),\n    {}\n  );\n};\n\nexport const getRates = (\n  item: Record<string, { price: number; vat: number }>\n) =>\n  Object.entries(item).map(([from, item], i, list) => ({\n    ...item,\n    from,\n    to: format(\n      sub(\n        list[i + 1]\n          ? new Date(list[i + 1][0])\n          : add(\n              set(new Date(from), {\n                date: 1,\n              }),\n              {\n                months: 1,\n              }\n            ),\n        { days: 1 }\n      ),\n      \"yyyy-MM-dd\"\n    ),\n  }));\n\nexport const RATES_1: Rates = {\n  \"Sprzedaż energii elektrycznej\": {\n    \"Energia czynna\": {\n      value: ({ value }) => value,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 0.2762,\n          vat: 0.23,\n        },\n        \"2020-01-01\": {\n          price: 0.3195,\n          vat: 0.23,\n        },\n        \"2021-02-01\": {\n          price: 0.33,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 0.4346,\n          vat: 0.05,\n        },\n        \"2022-06-01\": {\n          price: 0.4522,\n          vat: 0.05,\n        },\n        \"2099-01-01\": {\n          price: 0.4522,\n          vat: 0.05,\n        },\n      }),\n    },\n    \"Opłata handlowa\": {\n      value: ({ count }) => count,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 4.29,\n          vat: 0.23,\n        },\n        \"2020-01-01\": {\n          price: 6.25,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 7.8,\n          vat: 0.05,\n        },\n        \"2022-06-01\": {\n          price: 8.38, // ?\n          vat: 0.05,\n        },\n        \"2099-01-01\": {\n          price: 8.38,\n          vat: 0.05,\n        },\n      }),\n    },\n  },\n  \"Dystrybucja energii elektrycznej\": {\n    \"Opłata jakościowa\": {\n      value: ({ value }) => value,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 0.013,\n          vat: 0.23,\n        },\n        \"2020-01-01\": {\n          price: 0.0133,\n          vat: 0.23,\n        },\n        \"2021-02-01\": {\n          price: 0.0102,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 0.0095,\n          vat: 0.05,\n        },\n        \"2099-01-01\": {\n          price: 0.0095,\n          vat: 0.05,\n        },\n      }),\n    },\n    \"Opłata OZE\": {\n      value: ({ value }) => value,\n      rates: getRates({\n        \"2020-01-01\": {\n          price: 0.0,\n          vat: 0.23,\n        },\n        \"2021-01-01\": {\n          price: 0.0022,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 0.0009,\n          vat: 0.05,\n        },\n        \"2099-01-01\": {\n          price: 0.0009,\n          vat: 0.05,\n        },\n      }),\n    },\n    \"Opłata sieciowa zmienna\": {\n      value: ({ value }) => value,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 0.1349,\n          vat: 0.23,\n        },\n        \"2020-01-01\": {\n          price: 0.1372,\n          vat: 0.23,\n        },\n        \"2021-02-01\": {\n          price: 0.1391,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 0.1459,\n          vat: 0.05,\n        },\n        \"2099-01-01\": {\n          price: 0.1459,\n          vat: 0.05,\n        },\n      }),\n    },\n    \"Opłata kogeneracyjna\": {\n      value: ({ value }) => value,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 0.00158,\n          vat: 0.23,\n        },\n        \"2020-01-01\": {\n          price: 0.00139,\n          vat: 0.23,\n        },\n        \"2021-01-01\": {\n          price: 0.0,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 0.00406,\n          vat: 0.05,\n        },\n        \"2099-01-01\": {\n          price: 0.00406,\n          vat: 0.05,\n        },\n      }),\n    },\n    \"Opłata sieciowa stała\": {\n      value: ({ count }) => count,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 10.29,\n          vat: 0.23,\n        },\n        \"2020-01-01\": {\n          price: 10.55,\n          vat: 0.23,\n        },\n        \"2021-02-01\": {\n          price: 10.7,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 11.32,\n          vat: 0.05,\n        },\n        \"2099-01-01\": {\n          price: 11.32,\n          vat: 0.05,\n        },\n      }),\n    },\n    \"Opłata przejściowa\": {\n      value: ({ count }) => count,\n      rates: getRates({\n        \"2020-01-01\": {\n          price: 0.1,\n          vat: 0.05,\n        },\n        \"2022-01-01\": {\n          price: 0.1,\n          vat: 0.05,\n        },\n        \"2022-04-01\": {\n          price: 0.1,\n          vat: 0.05,\n        },\n        \"2099-01-01\": {\n          price: 0.1,\n          vat: 0.05,\n        },\n      }),\n    },\n    \"Opłata mocowa\": {\n      value: ({ count }) => count,\n      rates: getRates({\n        \"2021-01-01\": {\n          price: 4.48,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 5.68,\n          vat: 0.05,\n        },\n        \"2022-04-01\": {\n          price: 5.68,\n          vat: 0.05,\n        },\n        \"2099-01-01\": {\n          price: 5.68,\n          vat: 0.05,\n        },\n      }),\n    },\n    \"Opłata abonamentowa\": {\n      value: ({ count }) => count,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 0.4,\n          vat: 0.23,\n        },\n        \"2020-01-01\": {\n          price: 0.42,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 0.42,\n          vat: 0.05,\n        },\n        \"2099-01-01\": {\n          price: 0.42,\n          vat: 0.05,\n        },\n      }),\n    },\n  },\n};\n\nexport const RATES_2: Rates = {\n  ...RATES_1,\n  \"Dystrybucja energii elektrycznej\": {\n    ...RATES_1[\"Dystrybucja energii elektrycznej\"],\n    \"Opłata przejściowa\": {\n      value: ({ count }) => count,\n      rates: getRates({\n        \"2019-10-20\": {\n          price: 0.33,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 0.33,\n          vat: 0.05,\n        },\n        \"2022-04-01\": {\n          price: 0.33,\n          // price: 0.33, // ?\n          vat: 0.05,\n        },\n        \"2099-01-01\": {\n          price: 0.33,\n          vat: 0.05,\n        },\n      }),\n    },\n    \"Opłata mocowa\": {\n      value: ({ count }) => count,\n      rates: getRates({\n        \"2021-01-01\": {\n          price: 4.48,\n          vat: 0.23,\n        },\n        \"2021-04-04\": {\n          price: 10.46,\n          vat: 0.23,\n        },\n        \"2022-01-01\": {\n          price: 13.25,\n          vat: 0.05,\n        },\n        \"2022-04-01\": {\n          price: 13.25,\n          vat: 0.05,\n        },\n        \"2024-04-01\": {\n          price: 13.25,\n          vat: 0.05,\n        },\n      }),\n    },\n  },\n};\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  ChangeEventHandler,\n  MouseEventHandler,\n  useCallback,\n  useState,\n} from \"react\";\nimport { format } from \"date-fns\";\nimport { Items, Rates, getMatch } from \"./utils\";\nimport styles from \"./styles.module.scss\";\n\nconst formatRange = (from: string, to: string) =>\n  `${format(new Date(from), \"dd.MM.yy\")}-${format(new Date(to), \"dd.MM.yy\")}`;\n\nconst getSummary = (\n  line: Record<string, { value: number; tax: number; total: number }[]>\n) =>\n  Object.entries(line).reduce(\n    (result, [_, list]) =>\n      list.reduce(\n        ({ value, tax, total }, item) => ({\n          value: value + item.value,\n          tax: tax + item.tax,\n          total: total + item.total,\n        }),\n        result\n      ),\n    {\n      value: 0,\n      tax: 0,\n      total: 0,\n    }\n  );\n\nexport default function Calculations({\n  counter,\n  items,\n  rates,\n  selected,\n  setSelected,\n}: {\n  counter: string;\n  items: Items[];\n  rates: Rates;\n  selected: number[];\n  setSelected: Function;\n}) {\n  const [expanded, setExpanded] = useState<number[]>([]);\n  // console.log(expanded, items);\n\n  return (\n    <div className={styles.Calculations}>\n      <h3>Calculations</h3>\n      <table>\n        <tbody>\n          <tr>\n            <th>\n              <input\n                type=\"checkbox\"\n                checked={selected.length === items.length}\n                onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                  ({ target }) =>\n                    setSelected(target.checked ? items.map((_, i) => i) : []),\n                  []\n                )}\n              />\n            </th>\n            <th align=\"left\">Licznik / Okres zużycia</th>\n            <th align=\"right\">Netto [zł]</th>\n            <th align=\"right\">Podatek VAT [zł]</th>\n            <th align=\"right\">Brutto [zł]</th>\n          </tr>\n          {items.map((item, i) =>\n            [\n              Object.values(getMatch(item, rates)).reduce(\n                (result, line) =>\n                  Object.entries(line).reduce(\n                    (result, [_, list]) =>\n                      list.reduce(\n                        ({ value, tax, total }, item) => ({\n                          value: value + item.value,\n                          tax: tax + item.tax,\n                          total: total + item.total,\n                        }),\n                        result\n                      ),\n                    result\n                  ),\n                {\n                  value: 0,\n                  tax: 0,\n                  total: 0,\n                }\n              ),\n            ]\n              .map(({ value, tax, total }) => (\n                <tr key={i}>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={selected.includes(i)}\n                      onChange={useCallback<\n                        ChangeEventHandler<HTMLInputElement>\n                      >(\n                        ({ target }) =>\n                          setSelected((selected: number[]) =>\n                            !target.checked\n                              ? selected.filter((n) => n !== i)\n                              : selected.concat(i)\n                          ),\n                        []\n                      )}\n                    />\n                  </td>\n                  <td align=\"left\">\n                    <a\n                      href=\"#\"\n                      onClick={useCallback<MouseEventHandler>(\n                        (e) => (\n                          e.preventDefault(),\n                          setExpanded((expanded) =>\n                            expanded.includes(i)\n                              ? expanded.filter((n) => n !== i)\n                              : expanded.concat(i)\n                          )\n                        ),\n                        []\n                      )}\n                    >\n                      {`${counter} / Szczegóły rozliczenia za okres od ${format(\n                        new Date(item[0].from),\n                        \"dd.MM.yyyy\"\n                      )} do ${format(\n                        new Date(item[item.length - 1].to),\n                        \"dd.MM.yyyy\"\n                      )}`}\n                    </a>\n                  </td>\n                  <td align=\"right\">\n                    {new Intl.NumberFormat(\"pl-PL\", {\n                      minimumFractionDigits: 2,\n                    }).format(value)}\n                  </td>\n                  <td align=\"right\">\n                    {new Intl.NumberFormat(\"pl-PL\", {\n                      minimumFractionDigits: 2,\n                    }).format(tax)}\n                  </td>\n                  <td align=\"right\">\n                    {new Intl.NumberFormat(\"pl-PL\", {\n                      minimumFractionDigits: 2,\n                    }).format(total)}\n                  </td>\n                </tr>\n              ))\n              .concat(\n                expanded.includes(i)\n                  ? [\n                      <tr key={`${i}-details`}>\n                        <td></td>\n                        <td colSpan={6}>\n                          <div>\n                            <h4>Wskazania układu pomiarowego</h4>\n                            <table width=\"100%\">\n                              <tbody>\n                                <tr>\n                                  <th align=\"left\">Numer licznika</th>\n                                  <th align=\"left\">Okres zużycia</th>\n                                  <th align=\"right\">\n                                    Poprzednie wskazanie licznika\n                                  </th>\n                                  <th align=\"right\">\n                                    Obecne wskazanie licznika\n                                  </th>\n                                  <th align=\"right\">Rodzaj odczytu</th>\n                                  <th align=\"right\">Zużycie [kWh]</th>\n                                </tr>\n                                {item.map(\n                                  (\n                                    { from, to, start, value, estimated },\n                                    k\n                                  ) => (\n                                    <tr key={k}>\n                                      <td>{counter}</td>\n                                      <td align=\"right\">\n                                        {formatRange(from, to)}\n                                      </td>\n                                      <td align=\"right\">\n                                        {new Intl.NumberFormat(\"pl-PL\", {\n                                          minimumFractionDigits: 2,\n                                        }).format(start)}\n                                      </td>\n                                      <td align=\"right\">\n                                        {new Intl.NumberFormat(\"pl-PL\", {\n                                          minimumFractionDigits: 2,\n                                        }).format(value)}\n                                      </td>\n                                      <td align=\"right\">\n                                        {estimated ? \"S**\" : \"R\"}\n                                      </td>\n                                      <td align=\"right\">\n                                        {new Intl.NumberFormat(\"pl-PL\", {\n                                          minimumFractionDigits: 2,\n                                        }).format(value - start)}\n                                      </td>\n                                    </tr>\n                                  )\n                                )}\n                              </tbody>\n                              <tfoot>\n                                <tr>\n                                  <th align=\"left\">Razem</th>\n                                  <td colSpan={3}></td>\n                                  <td align=\"right\"></td>\n                                </tr>\n                              </tfoot>\n                            </table>\n                          </div>\n                          {Object.entries(getMatch(item, rates)).map(\n                            ([name, list], key) => (\n                              <div key={key}>\n                                <h4>{name}</h4>\n                                <table width=\"100%\">\n                                  <tbody>\n                                    <tr>\n                                      <th></th>\n                                      <th align=\"left\">Okres zużycia</th>\n                                      <th align=\"right\">Ilość</th>\n                                      <th align=\"right\">Cena netto [zł]</th>\n                                      <th align=\"right\">Wartość netto [zł]</th>\n                                      <th align=\"right\">Stawka VAT [%]</th>\n                                      <th align=\"right\">Podatek VAT [zł]</th>\n                                      <th align=\"right\">Wartość brutto [zł]</th>\n                                    </tr>\n                                    {Object.entries(list).map(\n                                      ([label, list], i) =>\n                                        list.map(\n                                          (\n                                            {\n                                              from,\n                                              to,\n                                              count,\n                                              price,\n                                              value,\n                                              vat,\n                                              tax,\n                                              total,\n                                            },\n                                            j\n                                          ) => (\n                                            <tr key={`${i}-${j}`}>\n                                              <td>{label}</td>\n                                              <td align=\"right\">\n                                                {formatRange(from, to)}\n                                              </td>\n                                              <td align=\"right\">{count}</td>\n                                              <td align=\"right\">\n                                                {new Intl.NumberFormat(\n                                                  \"pl-PL\",\n                                                  {\n                                                    minimumFractionDigits: 4,\n                                                    maximumFractionDigits: 5,\n                                                  }\n                                                ).format(price)}\n                                              </td>\n                                              <td align=\"right\">\n                                                {new Intl.NumberFormat(\n                                                  \"pl-PL\",\n                                                  {\n                                                    minimumFractionDigits: 2,\n                                                  }\n                                                ).format(value)}\n                                              </td>\n                                              <td align=\"right\">{vat}</td>\n                                              <td align=\"right\">\n                                                {new Intl.NumberFormat(\n                                                  \"pl-PL\",\n                                                  {\n                                                    minimumFractionDigits: 2,\n                                                  }\n                                                ).format(tax)}\n                                              </td>\n                                              <td align=\"right\">\n                                                {new Intl.NumberFormat(\n                                                  \"pl-PL\",\n                                                  {\n                                                    minimumFractionDigits: 2,\n                                                  }\n                                                ).format(total)}\n                                              </td>\n                                            </tr>\n                                          )\n                                        )\n                                    )}\n                                  </tbody>\n                                  <tfoot>\n                                    {[getSummary(list)].map((item, i) => (\n                                      <tr key={i}>\n                                        <th align=\"left\">Razem</th>\n                                        <td colSpan={3}></td>\n                                        <td align=\"right\">\n                                          {new Intl.NumberFormat(\"pl-PL\", {\n                                            minimumFractionDigits: 2,\n                                          }).format(item.value)}\n                                        </td>\n                                        <td></td>\n                                        <td align=\"right\">\n                                          {new Intl.NumberFormat(\"pl-PL\", {\n                                            minimumFractionDigits: 2,\n                                          }).format(item.tax)}\n                                        </td>\n                                        <td align=\"right\">\n                                          {new Intl.NumberFormat(\"pl-PL\", {\n                                            minimumFractionDigits: 2,\n                                          }).format(item.total)}\n                                        </td>\n                                      </tr>\n                                    ))}\n                                  </tfoot>\n                                </table>\n                              </div>\n                            )\n                          )}\n                        </td>\n                      </tr>,\n                    ]\n                  : []\n              )\n          )}\n        </tbody>\n        <tfoot>\n          {[\n            items\n              .filter((_, i) => selected.includes(i))\n              .reduce(\n                (result, item) =>\n                  Object.values(getMatch(item, rates)).reduce(\n                    (result, line) =>\n                      Object.entries(line).reduce(\n                        (result, [_, list]) =>\n                          list.reduce(\n                            ({ value, tax, total }, item) => ({\n                              value: value + item.value,\n                              tax: tax + item.tax,\n                              total: total + item.total,\n                            }),\n                            result\n                          ),\n                        result\n                      ),\n                    result\n                  ),\n                {\n                  value: 0,\n                  tax: 0,\n                  total: 0,\n                }\n              ),\n          ].map(({ value, tax, total }, i) => (\n            <tr key={i}>\n              <td></td>\n              <td></td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(value)}\n              </td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(tax)}\n              </td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(total)}\n              </td>\n            </tr>\n          ))}\n        </tfoot>\n      </table>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport Calculations from \"./Calculations\";\nimport styles from \"./styles.module.scss\";\n\nimport { Items, RATES_1, RATES_2, Rates } from \"./utils\";\n\nexport const ITEMS_1: Items[] = [\n  [\n    {\n      from: \"2020-08-07\",\n      to: \"2020-12-31\",\n      start: 5479.41,\n      value: 5748.76,\n      estimated: true,\n    },\n    {\n      from: \"2021-01-01\",\n      to: \"2021-01-31\",\n      start: 5748.76,\n      value: 5816.55,\n      estimated: true,\n    },\n    {\n      from: \"2021-02-01\",\n      to: \"2021-02-02\",\n      start: 5816.55,\n      value: 5820.63,\n    },\n  ],\n  [\n    {\n      // data: {\n      //   ...RATES[\"2021-04-04\"],\n      //   \"Opłata przejściowa\": 0.1,\n      //   \"Opłata mocowa\": 4.48,\n      // },\n      from: \"2021-02-03\",\n      to: \"2021-05-31\",\n      start: 5820.63,\n      value: 6082.55,\n      estimated: true,\n    },\n    {\n      // data: {\n      //   ...RATES[\"2021-04-04\"],\n      //   \"Opłata przejściowa\": 0.1,\n      //   \"Opłata mocowa\": 4.48,\n      // },\n      from: \"2021-06-01\",\n      to: \"2021-08-09\",\n      start: 6082.55,\n      value: 6185.36,\n    },\n  ],\n  [\n    {\n      // data: {\n      //   ...RATES[\"2021-04-04\"],\n      //   \"Opłata przejściowa\": 0.1,\n      //   \"Opłata mocowa\": 4.48,\n      // },\n      from: \"2021-08-10\",\n      to: \"2021-12-31\",\n      start: 6185.36,\n      value: 6447.49,\n      estimated: true,\n    },\n    {\n      from: \"2022-01-01\",\n      to: \"2022-02-23\",\n      start: 6447.49,\n      value: 6561.0,\n    },\n  ],\n  [\n    {\n      from: \"2022-02-24\",\n      to: \"2022-03-31\",\n      start: 6561.0,\n      value: 6561.0 + 85.0,\n    },\n    {\n      from: \"2022-04-01\",\n      to: \"2022-05-31\",\n      start: 6561.0 + 85.0,\n      value: 6561.0 + 85.0 + 102.0,\n    },\n    {\n      from: \"2022-06-01\",\n      to: \"2022-08-09\",\n      start: 6561.0 + 85.0 + 102.0,\n      value: 6835.2,\n    },\n  ],\n  [\n    {\n      from: \"2022-10-15\",\n      to: \"2023-01-07\",\n      start: 2.26,\n      value: 171.86,\n    },\n  ],\n];\n// .map((item) => ({ contract: \"0351\", counter: \"8586\", ...item }))\n\nexport const ITEMS_2: Items[] = [\n  [\n    {\n      from: \"2019-10-20\",\n      to: \"2019-12-31\",\n      start: 5090.33,\n      value: 6099.11,\n      estimated: true,\n    },\n  ],\n  [\n    {\n      // data: {\n      //   ...RATES[\"2019-10-20\"],\n      //   \"Opłata jakościowa\": 0.0133,\n      //   \"Opłata sieciowa zmienna\": 0.1372,\n      //   \"Opłata sieciowa stała\": 10.55,\n      //   \"Opłata abonamentowa\": 0.42,\n      // },\n      from: \"2019-10-20\",\n      to: \"2019-12-31\",\n      start: 6099.11,\n      value: 5090.33 + 1413,\n      estimated: true,\n    },\n  ],\n  [\n    {\n      from: \"2020-01-01\",\n      to: \"2020-04-09\",\n      start: 5090.33 + 1413,\n      value: 7272.0,\n    },\n  ],\n  [\n    {\n      from: \"2020-04-10\",\n      to: \"2020-10-22\",\n      start: 7272.0,\n      value: 9734.69,\n    },\n  ],\n  [\n    {\n      from: \"2020-10-23\",\n      to: \"2020-12-31\",\n      start: 9734.69,\n      value: 10831.52,\n      estimated: true,\n    },\n  ],\n  [\n    {\n      // data: {\n      //   ...RATES[\"2021-04-04\"],\n      //   \"Energia czynna\": 0.3195,\n      //   \"Opłata handlowa\": 6.25,\n      //   \"Opłata jakościowa\": 0.0133,\n      //   \"Opłata sieciowa zmienna\": 0.1372,\n      //   \"Opłata sieciowa stała\": 10.55,\n      // },\n      from: \"2021-01-01\",\n      to: \"2021-01-31\",\n      start: 10831.52,\n      value: 11296.29,\n      estimated: true,\n    },\n  ],\n  [\n    {\n      from: \"2021-02-01\",\n      to: \"2021-04-03\",\n      start: 11296.29,\n      value: 12108.42,\n    },\n  ],\n  [\n    {\n      from: \"2021-04-04\",\n      to: \"2021-05-31\",\n      start: 12108.42,\n      value: 12736.33,\n      estimated: true,\n    },\n  ],\n  [\n    {\n      from: \"2021-06-01\",\n      to: \"2021-10-28\",\n      start: 12736.33,\n      value: 14643.17,\n    },\n  ],\n  [\n    {\n      from: \"2021-10-29\",\n      to: \"2021-12-31\",\n      start: 14643.17,\n      value: 15588.03,\n    },\n  ],\n  [\n    {\n      from: \"2022-01-01\",\n      to: \"2022-04-12\",\n      start: 15588.03,\n      value: 16919.0,\n      estimated: true,\n    },\n  ],\n  [\n    {\n      from: \"2022-04-13\",\n      to: \"2022-05-31\",\n      start: 16919.0,\n      value: 16919.0 + 530,\n    },\n    {\n      from: \"2022-06-01\",\n      to: \"2022-10-21\",\n      start: 16919.0 + 530,\n      value: 19169.0,\n    },\n  ],\n];\n// .map((item) => ({ contract: \"8586\", counter: \"2752\", ...item }))\n\nfunction Data({\n  counter,\n  items,\n  rates,\n}: {\n  counter: string;\n  items: Items[];\n  rates: Rates;\n}) {\n  const [selected, setSelected] = useState<number[]>(() =>\n    items.map((_, i) => i)\n  );\n\n  return (\n    <div>\n      <Calculations\n        counter={counter}\n        items={items}\n        rates={rates}\n        selected={selected}\n        setSelected={setSelected}\n      />\n    </div>\n  );\n}\n\nexport default function Section() {\n  return (\n    <div className={styles.Section}>\n      <h2>Energy</h2>\n      <Data counter=\"9057\" items={ITEMS_1} rates={RATES_1} />\n      <Data counter=\"7224\" items={ITEMS_2} rates={RATES_2} />\n    </div>\n  );\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ILYKcZwRrAG3B5Qm_6ti{color:purple}.QWuaC1AqCgpyeQ75yBWq{font-family:Arial,Helvetica,sans-serif;font-size:.7em}.QWuaC1AqCgpyeQ75yBWq table{border-collapse:collapse}.QWuaC1AqCgpyeQ75yBWq table tr:hover{background-color:#e0e0e0}.QWuaC1AqCgpyeQ75yBWq tr:nth-child(even){background-color:#f7f7f7}.QWuaC1AqCgpyeQ75yBWq th,.QWuaC1AqCgpyeQ75yBWq td{padding:.25em}.PbI4uYIFtC7LCTjgoOUg{clear:both;padding:.5em 0;border:2px solid rgba(0,0,0,0);margin:.5em}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/containers/Energy/styles.module.scss\"],\"names\":[],\"mappings\":\"AAAA,sBACE,YAAA,CAEF,sBACE,sCAAA,CACA,cAAA,CACA,4BACE,wBAAA,CAEE,qCACE,wBAAA,CAKJ,yCACE,wBAAA,CAGJ,kDAEE,aAAA,CAGJ,sBACE,UAAA,CACA,cAAA,CACA,8BAAA,CACA,WAAA\",\"sourcesContent\":[\".Section {\\n  color: purple;\\n}\\n.Calculations {\\n  font-family: Arial, Helvetica, sans-serif;\\n  font-size: 0.7em;\\n  table {\\n    border-collapse: collapse;\\n    tr {\\n      &:hover {\\n        background-color: #e0e0e0;\\n      }\\n    }\\n  }\\n  tr {\\n    &:nth-child(even) {\\n      background-color: #f7f7f7;\\n    }\\n  }\\n  th,\\n  td {\\n    padding: 0.25em;\\n  }\\n}\\n.Row {\\n  clear: both;\\n  padding: 0.5em 0;\\n  border: 2px solid transparent;\\n  margin: 0.5em;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Section\": \"ILYKcZwRrAG3B5Qm_6ti\",\n\t\"Calculations\": \"QWuaC1AqCgpyeQ75yBWq\",\n\t\"Row\": \"PbI4uYIFtC7LCTjgoOUg\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","import addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\n\nexport default function subDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport subDays from \"../subDays/index.js\";\nimport subMonths from \"../subMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\n\nexport default function sub(date, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || _typeof(duration) !== 'object') return new Date(NaN);\n  var years = duration.years ? toInteger(duration.years) : 0;\n  var months = duration.months ? toInteger(duration.months) : 0;\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\n  var days = duration.days ? toInteger(duration.days) : 0;\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0; // Subtract years and months\n\n  var dateWithoutMonths = subMonths(date, months + years * 12); // Subtract weeks and days\n\n  var dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7); // Subtract hours, minutes and seconds\n\n  var minutestoSub = minutes + hours * 60;\n  var secondstoSub = seconds + minutestoSub * 60;\n  var mstoSub = secondstoSub * 1000;\n  var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);\n  return finalDate;\n}"],"names":["getDaysInMonth","dirtyDate","requiredArgs","arguments","date","toDate","year","getFullYear","monthIndex","getMonth","lastDayOfMonth","Date","setFullYear","setHours","getDate","setMonth","dirtyMonth","month","toInteger","day","dateWithDesiredMonth","daysInMonth","Math","min","_typeof","obj","Symbol","iterator","constructor","prototype","set","values","RangeError","isNaN","getTime","NaN","setDate","hours","minutes","setMinutes","seconds","setSeconds","milliseconds","setMilliseconds","getMatch","item","list","Object","entries","reduce","result","key","value","assign","cost","map","rates","filter","price","from","to","vat","count","differenceInMonths","add","months","days","differenceInDays","round","start","tax","total","flat","getRates","i","format","sub","RATES_1","RATES_2","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","formatRange","Calculations","counter","items","selected","setSelected","useState","expanded","setExpanded","className","styles","type","checked","length","onChange","useCallback","target","_","align","line","includes","concat","n","href","onClick","e","preventDefault","Intl","NumberFormat","minimumFractionDigits","colSpan","width","k","estimated","name","label","j","maximumFractionDigits","ITEMS_1","ITEMS_2","Data","Section","___CSS_LOADER_EXPORT___","push","module","id","locals","subDays","dirtyAmount","amount","addDays","subMonths","addMonths","duration","years","weeks","dateWithoutMonths","dateWithoutDays","minutestoSub","secondstoSub","mstoSub","finalDate"],"sourceRoot":""}