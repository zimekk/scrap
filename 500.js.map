{"version":3,"file":"500.js","mappings":"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","sources":["webpack://@dev/web/./src/components/DonutChart/styles.module.scss?a1ed","webpack://@dev/web/./src/components/DonutChart/index.tsx","webpack://@dev/web/./src/containers/Quotes/styles.module.scss?548c","webpack://@dev/web/./src/containers/Quotes/Investments.tsx","webpack://@dev/web/./src/containers/Quotes/Transactions.tsx","webpack://@dev/web/./src/containers/Quotes/index.tsx","webpack://@dev/web/./src/components/DonutChart/styles.module.scss","webpack://@dev/web/./src/containers/Quotes/styles.module.scss","webpack://@dev/web/../../node_modules/date-fns/esm/addDays/index.js","webpack://@dev/web/../../node_modules/date-fns/esm/addMonths/index.js","webpack://@dev/web/../../node_modules/date-fns/esm/sub/index.js","webpack://@dev/web/../../node_modules/date-fns/esm/subMonths/index.js","webpack://@dev/web/../../node_modules/date-fns/esm/subDays/index.js","webpack://@dev/web/../../node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js","webpack://@dev/web/../../node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js","webpack://@dev/web/../../node_modules/rxjs/dist/esm5/internal/operators/map.js"],"sourcesContent":["\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { type PieArcDatum } from \"d3-shape\";\nimport cx from \"classnames\";\nimport styles from \"./styles.module.scss\";\n\n// https://medium.com/react-courses/drawing-basic-charts-with-react-typescript-d3-part-ii-pie-scatter-chart-da4fc653b715\ntype Data = {\n  label: string;\n  value: number;\n};\n\nexport default function Chart({\n  list,\n}: {\n  list: { label: string; value: number }[];\n}) {\n  const groupRef = useRef<SVGGeometryElement>(null);\n  const innerRadius = 60;\n  const outerRadius = 130;\n\n  // https://codesandbox.io/s/r5wp0v08xq\n  useEffect(() => {\n    const createPie = d3\n      .pie<Data>()\n      .value((d) => d.value)\n      .sort(null);\n    const createArc = d3\n      .arc<PieArcDatum<Data>>()\n      .innerRadius(innerRadius)\n      .outerRadius(outerRadius);\n    const colors = d3.scaleOrdinal(d3.schemeCategory10);\n\n    const data = createPie(list);\n    const group = d3.select(groupRef.current);\n    const groupWithData = group.selectAll(\"g.arc\").data(data);\n\n    groupWithData.exit().remove();\n\n    const groupWithUpdate = groupWithData\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"arc\");\n\n    const path = groupWithUpdate\n      .append(\"path\")\n      .merge(groupWithData.select(\"path.arc\"));\n\n    path\n      .attr(\"class\", \"arc\")\n      .attr(\"d\", createArc)\n      .attr(\"fill\", (d, i) => colors(i));\n\n    const text = groupWithUpdate\n      .append(\"text\")\n      .merge(groupWithData.select(\"text\"));\n\n    text\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"alignment-baseline\", \"middle\")\n      .attr(\"transform\", (d) => `translate(${createArc.centroid(d)})`)\n      .style(\"fill\", \"white\")\n      .style(\"font-size\", 10)\n      .text(({ data }) => `${data.label} (${data.value})`);\n  }, [list]);\n\n  return (\n    <div className={cx(styles.Chart)}>\n      <svg>\n        <g\n          ref={groupRef}\n          transform={`translate(${outerRadius + 20} ${outerRadius + 20})`}\n        />\n      </svg>\n    </div>\n  );\n}\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  type ChangeEventHandler,\n  type MouseEventHandler,\n  useCallback,\n  useMemo,\n  useState,\n} from \"react\";\nimport { format, sub } from \"date-fns\";\nimport cx from \"classnames\";\nimport styles from \"./styles.module.scss\";\n\nfunction getValueNearDate(values, date) {\n  for (let i = 0; i < 5; i++) {\n    const value = values[format(date, \"yyyy-MM-dd\")];\n    if (value) {\n      return value;\n    }\n    date = sub(date, {\n      days: 1,\n    });\n  }\n}\n\nexport function Percent({ value }: { value: number }) {\n  return isNaN(value) ? null : (\n    <div\n      className={cx(\n        styles.Percent,\n        value === 0 ? styles.eq : value > 0 ? styles.gt : styles.lt\n      )}\n    >\n      {new Intl.NumberFormat(\"pl-PL\", {\n        minimumFractionDigits: 2,\n      }).format(Math.round(100 * 100 * value) / 100)}\n      &nbsp;%\n    </div>\n  );\n}\n\nexport default function Investments({\n  investments,\n  rates,\n  selected,\n  setSelected,\n}: {\n  investments: { id: number; name: string }[];\n  rates: Record<string, Record<string, number>>;\n  selected: number[];\n  setSelected: Function;\n}) {\n  const [expanded, setExpanded] = useState<number[]>([]);\n  const list = useMemo(\n    () =>\n      investments.map((item) => {\n        const [date, unitValue] = Object.entries(rates[item.id]).pop();\n\n        return {\n          ...item,\n          date: new Date(date),\n          unitValue,\n        };\n      }),\n    [rates]\n  );\n\n  return (\n    <div className={styles.Investments}>\n      <h3>Investments</h3>\n      <table>\n        <tbody>\n          <tr>\n            <th>\n              <input\n                type=\"checkbox\"\n                checked={selected.length === investments.length}\n                onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                  ({ target }) =>\n                    setSelected(\n                      target.checked ? investments.map(({ id }) => id) : []\n                    ),\n                  []\n                )}\n              />\n            </th>\n            <th>Fundusz</th>\n            <th>Data wyceny jednostki</th>\n            <th>Wycena jednostki</th>\n            <th>7d</th>\n            <th>14d</th>\n            <th>1m</th>\n            <th>3m</th>\n            <th>6m</th>\n            <th>12m</th>\n            <th>24m</th>\n            <th>36m</th>\n          </tr>\n          {list.map((item, i) =>\n            [\n              <tr key={i}>\n                <td>\n                  <input\n                    type=\"checkbox\"\n                    checked={selected.includes(item.id)}\n                    onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                      ({ target }) =>\n                        setSelected((selected: number[]) =>\n                          !target.checked\n                            ? selected.filter((id) => id !== item.id)\n                            : selected.concat(item.id)\n                        ),\n                      []\n                    )}\n                  />\n                </td>\n                <td>\n                  <a\n                    href=\"#\"\n                    onClick={useCallback<MouseEventHandler>(\n                      (e) => (\n                        e.preventDefault(),\n                        setExpanded((expanded) =>\n                          expanded.includes(item.id)\n                            ? expanded.filter((id) => id !== item.id)\n                            : expanded.concat(item.id)\n                        )\n                      ),\n                      []\n                    )}\n                  >\n                    {item.name}\n                  </a>\n                </td>\n                <td align=\"right\">{format(item.date, \"dd.MM.yyyy\")}</td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(item.unitValue)}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            days: 7,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            days: 14,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            months: 1,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        rates[item.id][\n                          format(\n                            sub(item.date, {\n                              months: 3,\n                            }),\n                            \"yyyy-MM-dd\"\n                          )\n                        ] -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            months: 6,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            months: 12,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            months: 24,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            months: 36,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n              </tr>,\n            ].concat(\n              expanded.includes(item.id)\n                ? [\n                    <tr key={`${i}-details`}>\n                      <td></td>\n                      <td colSpan={11}>\n                        <pre>{JSON.stringify(item, null, 2)}</pre>\n                        <pre>{JSON.stringify(rates[item.id], null, 2)}</pre>\n                      </td>\n                    </tr>,\n                  ]\n                : []\n            )\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React, {\n  type ChangeEventHandler,\n  type MouseEventHandler,\n  useCallback,\n  useMemo,\n  useState,\n} from \"react\";\nimport { format } from \"date-fns\";\nimport { Percent } from \"./Investments\";\nimport styles from \"./styles.module.scss\";\n\nconst getInvestmentTransaction =\n  ({\n    names,\n    rates,\n  }: {\n    names: Record<string, string>;\n    rates: Record<string, Record<string, number>>;\n  }) =>\n  ({\n    date,\n    investment_id,\n    value,\n  }: {\n    date: string;\n    investment_id: number;\n    value: number;\n  }) => {\n    if (!rates[investment_id]) {\n      return null;\n    }\n    const unitValue = rates[investment_id][date];\n    const round = 1000;\n    const units = Math.round((round * value) / unitValue) / round;\n    return {\n      name: names[investment_id],\n      date: new Date(date),\n      investment_id,\n      value: Math.round(100 * units * unitValue) / 100,\n      valueNetto: value,\n      valueBrutto: value,\n      unitValue,\n      units,\n    };\n  };\n\nexport default function Transactions({\n  transactions,\n  rates,\n  names,\n  selected,\n  setSelected,\n}: {\n  transactions: { date: string; investment_id: number; value: number }[];\n  names: Record<string, string>;\n  rates: Record<string, Record<string, number>>;\n  selected: number[];\n  setSelected: Function;\n}) {\n  const [expanded, setExpanded] = useState<number[]>([]);\n\n  const quotes = useMemo(\n    () =>\n      Object.keys(rates).reduce((result, id) => {\n        const [date, unitValue] = Object.entries(rates[id]).pop();\n\n        return Object.assign(result, {\n          [id]: {\n            date: new Date(date),\n            unitValue,\n          },\n        });\n      }, {}),\n    [rates]\n  );\n\n  const list = useMemo(\n    () =>\n      transactions\n        .map(getInvestmentTransaction({ names, rates }))\n        .filter(Boolean),\n    [transactions, names, rates]\n  );\n\n  return (\n    <div className={styles.Transactions}>\n      <h3>Transactions</h3>\n      <table>\n        <tbody>\n          <tr>\n            <th>\n              <input\n                type=\"checkbox\"\n                checked={selected.length === transactions.length}\n                onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                  ({ target }) =>\n                    setSelected(\n                      target.checked ? transactions.map((_, i) => i) : []\n                    ),\n                  []\n                )}\n              />\n            </th>\n            <th>Fundusz</th>\n            <th>Kwota transakcji</th>\n            <th>Liczba jednostek</th>\n            <th>Data wyceny jednostki</th>\n            <th>Wycena jednostki</th>\n            <th>Wartość</th>\n            <th>Data wyceny jednostki</th>\n            <th>Wycena jednostki</th>\n            <th>Wartość</th>\n            <th>%</th>\n          </tr>\n          {list.map((item, i) =>\n            [\n              <tr key={i}>\n                <td>\n                  <input\n                    type=\"checkbox\"\n                    checked={selected.includes(i)}\n                    onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                      ({ target }) =>\n                        setSelected((selected: number[]) =>\n                          !target.checked\n                            ? selected.filter((n) => n !== i)\n                            : selected.concat(i)\n                        ),\n                      []\n                    )}\n                  />\n                </td>\n                <td>\n                  <a\n                    href=\"#\"\n                    onClick={useCallback<MouseEventHandler>(\n                      (e) => (\n                        e.preventDefault(),\n                        setExpanded((expanded) =>\n                          expanded.includes(i)\n                            ? expanded.filter((n) => n !== i)\n                            : expanded.concat(i)\n                        )\n                      ),\n                      []\n                    )}\n                  >\n                    {item.name}\n                  </a>\n                </td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(item.valueNetto)}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {}).format(item.units)}\n                </td>\n                <td align=\"right\">{format(item.date, \"dd.MM.yyyy\")}</td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(item.unitValue)}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(item.value)}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  {format(quotes[item.investment_id].date, \"dd.MM.yyyy\")}\n                </td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(quotes[item.investment_id].unitValue)}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(\n                    Math.round(\n                      100 * quotes[item.investment_id].unitValue * item.units\n                    ) / 100\n                  )}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      quotes[item.investment_id].unitValue / item.unitValue - 1\n                    }\n                  />\n                </td>\n              </tr>,\n            ].concat(\n              expanded.includes(i)\n                ? [\n                    <tr key={`${i}-details`}>\n                      <td></td>\n                      <td colSpan={10}>\n                        {/* <pre>{JSON.stringify(rates[investment_id], null, 2)}</pre> */}\n                        <pre>\n                          {`Data wyceny jednostki\n${format(item.date, \"dd.MM.yyyy\")}\nData realizacji\n${format(item.date, \"dd.MM.yyyy\")}\nKwota transakcji netto w PLN\n${new Intl.NumberFormat(\"pl-PL\", {\n  minimumFractionDigits: 2,\n}).format(item.valueNetto)} PLN\nKwota transakcji brutto w PLN\n${new Intl.NumberFormat(\"pl-PL\", {\n  minimumFractionDigits: 2,\n}).format(item.valueBrutto)} PLN\nIlość jednostek po transakcji\n${new Intl.NumberFormat(\"pl-PL\", {}).format(item.units)}\nWartość jednostki w dniu wyceny\n${new Intl.NumberFormat(\"pl-PL\", {\n  minimumFractionDigits: 2,\n}).format(item.unitValue)} PLN\nWartość\n${new Intl.NumberFormat(\"pl-PL\", {\n  minimumFractionDigits: 2,\n}).format(item.value)} PLN\nOpłata manipulacyjna\n0,00 PLN / 0 %`}\n                        </pre>\n                      </td>\n                    </tr>,\n                  ]\n                : []\n            )\n          )}\n        </tbody>\n        <tfoot>\n          {[\n            list\n              .filter((_, i) => selected.includes(i))\n              .reduce(\n                ({ units, value, valueNetto, quote }, item) => ({\n                  units: units + item.units,\n                  value: value + item.value,\n                  valueNetto: valueNetto + item.valueNetto,\n                  quote:\n                    quote +\n                    Math.round(\n                      100 * quotes[item.investment_id].unitValue * item.units\n                    ) /\n                      100,\n                }),\n                {\n                  units: 0,\n                  value: 0,\n                  valueNetto: 0,\n                  quote: 0,\n                }\n              ),\n          ].map((item, i) => (\n            <tr key={i}>\n              <td></td>\n              <td></td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.valueNetto)}\n                &nbsp;PLN\n              </td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.units)}\n              </td>\n              <td colSpan={2}></td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.value)}\n                &nbsp;PLN\n              </td>\n              <td colSpan={2}></td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.quote)}\n                &nbsp;PLN\n              </td>\n              <td align=\"right\">\n                <Percent value={item.quote / item.value - 1} />\n              </td>\n            </tr>\n          ))}\n        </tfoot>\n      </table>\n    </div>\n  );\n}\n","import React, {\n  type ChangeEventHandler,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { Subject } from \"rxjs\";\nimport { debounceTime, distinctUntilChanged, map } from \"rxjs/operators\";\nimport { createAsset } from \"use-asset\";\nimport { format, sub } from \"date-fns\";\nimport Chart, { SyncZoomProvider } from \"../../components/ZoomableLineChart\";\nimport DonutChart from \"../../components/DonutChart\";\nimport Investments from \"./Investments\";\nimport Transactions from \"./Transactions\";\nimport styles from \"./styles.module.scss\";\n\nimport type { Meta, Item } from \"@dev/cli/src/services/QuotesService/types\";\n\nconst ERA = 24 * 3600 * 1000;\nconst DAYS = 1200;\n\n// https://github.com/pmndrs/use-asset#dealing-with-async-assets\nconst asset = createAsset(async (version) => {\n  const res = await fetch(`api/quotes/data.json?${version}`);\n  return await res.json().then(({ metas, objects }) => ({\n    metas,\n    objects: objects.concat([\n      {\n        date: \"2022-06-23\",\n        // \"roi\": -29.59,\n        // \"unit\": \"A\",\n        // value: 70.55,\n        value: 68.65,\n        // \"id\": \"investments-10-2022-06-22\",\n        investment_id: 10,\n      },\n    ]),\n  }));\n});\n\nconst getInvestmentTransactionValue =\n  ({\n    date: valueDate,\n    rates,\n  }: {\n    date: Date;\n    rates: Record<string, Record<string, number>>;\n  }) =>\n  ({\n    date,\n    investment_id,\n    value,\n  }: {\n    date: string;\n    investment_id: number;\n    value: number;\n  }) => {\n    if (!rates[investment_id]) {\n      return null;\n    }\n    const unitValue = rates[investment_id][date];\n    const round = 1000;\n    const units = Math.round((round * value) / unitValue) / round;\n    const unitValueDate = rates[investment_id][format(valueDate, \"yyyy-MM-dd\")];\n    return rates[investment_id][format(valueDate, \"yyyy-MM-dd\")]\n      ? {\n          investment_id,\n          value: Math.round(100 * units * unitValueDate) / 100,\n        }\n      : null;\n  };\n\nfunction Data({ version = \"v1\" }) {\n  const { metas, objects: results } = asset.read(version) as {\n    metas: Meta[];\n    objects: Item[];\n  };\n\n  const [transactions] = useState(() => [\n    { date: \"2018-12-28\", investment_id: 44, value: 5331.6 }, // PKO Zabezpieczenia Emerytalnego 2050\n    { date: \"2019-12-30\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n    { date: \"2020-12-28\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n    { date: \"2021-12-15\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n    { date: \"2022-01-03\", investment_id: 75, value: 1000 }, // PKO Akcji Rynku Amerykańskiego\n    { date: \"2022-02-01\", investment_id: 75, value: 1000 }, // PKO Akcji Rynku Amerykańskiego\n    { date: \"2022-02-28\", investment_id: 34, value: 1000 }, // PKO Surowców Globalny\n    { date: \"2022-03-08\", investment_id: 35, value: 1000 }, // PKO Technologii i Innowacji Globalny\n    { date: \"2022-03-11\", investment_id: 10, value: 1000 }, // PKO Akcji Nowa Europa\n    { date: \"2022-03-21\", investment_id: 36, value: 1000 }, // PKO Dóbr Luksusowych Globalny\n    { date: \"2022-03-21\", investment_id: 37, value: 1000 }, // PKO Infrastruktury i Budownictwa Globalny\n    { date: \"2022-04-01\", investment_id: 34, value: 1000 }, // PKO Surowców Globalny\n    { date: \"2022-04-11\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n    { date: \"2022-04-26\", investment_id: 34, value: 1000 }, // PKO Surowców Globalny\n    { date: \"2022-05-05\", investment_id: 75, value: 1000 }, // PKO Akcji Rynku Amerykańskiego\n    { date: \"2022-06-20\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n    { date: \"2022-06-23\", investment_id: 10, value: -907.62 }, // PKO Akcji Nowa Europa\n    { date: \"2022-06-23\", investment_id: 33, value: 907.62 }, // PKO Akcji Plus\n    { date: \"2022-07-29\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n    { date: \"2022-08-29\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n    { date: \"2023-06-29\", investment_id: 79, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n  ]);\n\n  const options = useMemo(\n    () => ({\n      investment: metas\n        .map(({ id, name }) => ({ id, name }))\n        .sort((a, b) => a.name.localeCompare(b.name)),\n    }),\n    [results]\n  );\n\n  const names = useMemo(\n    () =>\n      metas.reduce(\n        (result: Record<string, string>, { id, name }) =>\n          Object.assign(result, {\n            [id]: name,\n          }),\n        {}\n      ),\n    [metas]\n  );\n\n  const rates = useMemo(\n    () =>\n      results\n        .sort((a, b) => a.date.localeCompare(b.date))\n        .reduce(\n          (\n            result: Record<string, Record<string, number>>,\n            { date, investment_id, value }\n          ) =>\n            Object.assign(result, {\n              [investment_id]: Object.assign(result[investment_id] || {}, {\n                [date]: value,\n              }),\n            }),\n          {}\n        ),\n    [results]\n  );\n\n  const [filters, setFilters] = useState(() => ({\n    // investment: options.investment[0].id,\n    // related: options.investment[0].id,\n    search: \"\",\n  }));\n\n  const [queries, setQueries] = useState(() => filters);\n\n  const search$ = useMemo(() => new Subject<any>(), []);\n\n  useEffect(() => {\n    const subscription = search$\n      .pipe(\n        map(({ search, ...filters }) =>\n          JSON.stringify({ ...queries, ...filters, search: search.trim() })\n        ),\n        distinctUntilChanged(),\n        debounceTime(400)\n      )\n      .subscribe((filters) =>\n        setQueries((queries) => ({ ...queries, ...JSON.parse(filters) }))\n      );\n    return () => subscription.unsubscribe();\n  }, [search$]);\n\n  useEffect(() => {\n    search$.next(filters);\n  }, [filters]);\n\n  console.log({ metas, options, filters, results, rates });\n\n  const unified = useMemo(\n    () =>\n      results\n        .map(({ investment_id, value, date }) => ({\n          investment_id,\n          value,\n          date: new Date(date),\n        }))\n        .sort(\n          (a, b) => new Date(a.date).getTime() - new Date(b.date).getTime()\n        ),\n    [results]\n  );\n\n  const from = useMemo(\n    () => unified[unified.length - 1].date.getTime() - ERA * 2000,\n    [unified]\n  );\n\n  const [selected, setSelected] = useState<number[]>(() =>\n    transactions.map((_, i) => i)\n  );\n  const [selectedDate, setSelectedDate] = useState<string>(() =>\n    format(unified[unified.length - 1].date.getTime(), \"yyyy-MM-dd\")\n  );\n  const [investmentsSelected, setInvestmentsSelected] = useState<number[]>(\n    () => [34, 35, 79]\n  );\n\n  const list = useMemo(\n    () =>\n      unified\n        .filter(({ investment_id }) =>\n          investmentsSelected.includes(investment_id)\n        )\n        .filter(({ date }) => date.getTime() > from),\n    [unified, investmentsSelected]\n  );\n\n  // const relation = useMemo(\n  //   () =>\n  //     Object.entries(\n  //       unified.reduce(\n  //         (result, { date, investment_id, value }) =>\n  //           Object.assign(result, {\n  //             [format(date, \"yyyy-MM-dd\")]: Object.assign(\n  //               result[format(date, \"yyyy-MM-dd\")] || {},\n  //               {\n  //                 [investment_id]: value,\n  //               }\n  //             ),\n  //           }),\n  //         {}\n  //       )\n  //     )\n  //       .map(([date, investments]) => ({\n  //         date: new Date(date),\n  //         value: investments[filters.investment] / investments[filters.related],\n  //       }))\n  //       .filter(({ date }) => date.getTime() > from),\n  //   [unified, filters]\n  // );\n\n  const getRelatedValue = useCallback((values, date, selectedDate) => {\n    const formattedDate = format(date, \"yyyy-MM-dd\");\n    if (values[formattedDate] && values[selectedDate]) {\n      return values[formattedDate] / values[selectedDate];\n    }\n    return 0;\n  }, []);\n\n  return (\n    <div>\n      <SyncZoomProvider>\n        {/* <fieldset>\n          <label>\n            <span>Investment</span>\n            <select\n              value={filters.investment}\n              onChange={useCallback<ChangeEventHandler<HTMLSelectElement>>(\n                ({ target }) =>\n                  setFilters((filters) => ({\n                    ...filters,\n                    investment: Number(target.value),\n                  })),\n                []\n              )}\n            >\n              {options.investment.map(({ id, name }) => (\n                <option key={id} value={id}>\n                  {name}\n                </option>\n              ))}\n            </select>\n          </label>\n        </fieldset> */}\n        <Chart\n          list={list.map(({ investment_id, ...item }) => ({\n            ...item,\n            group: names[investment_id],\n          }))}\n          legend\n          rule\n        />\n        <fieldset>\n          {/* <label>\n            <span>Related</span>\n            <select\n              value={filters.related}\n              onChange={useCallback<ChangeEventHandler<HTMLSelectElement>>(\n                ({ target }) =>\n                  setFilters((filters) => ({\n                    ...filters,\n                    related: Number(target.value),\n                  })),\n                []\n              )}\n            >\n              {options.investment.map(({ id, name }) => (\n                <option key={id} value={id}>\n                  {name}\n                </option>\n              ))}\n            </select>\n          </label>\n          <button\n            onClick={useCallback<MouseEventHandler>(\n              (e) => (\n                e.preventDefault(),\n                setFilters(({ investment, related, ...filters }) => ({\n                  ...filters,\n                  investment: related,\n                  related: investment,\n                }))\n              ),\n              []\n            )}\n          >\n            reverse\n          </button> */}\n          <label>\n            <span>Date</span>\n            <input\n              type=\"date\"\n              value={selectedDate}\n              onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                ({ target }) => setSelectedDate(target.value),\n                []\n              )}\n            />\n          </label>\n        </fieldset>\n        <Chart\n          list={unified\n            .filter(({ investment_id }) =>\n              investmentsSelected.includes(investment_id)\n            )\n            .filter(({ date }) => date.getTime() > from)\n\n            .map(({ investment_id, ...item }) => ({\n              ...item,\n              value: getRelatedValue(\n                rates[investment_id],\n                item.date,\n                selectedDate\n              ),\n              group: names[investment_id],\n            }))}\n          rule\n        />\n        {/* <fieldset>\n          <label>\n            <span>Search</span>\n            <input\n              type=\"search\"\n              value={filters.search}\n              onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                ({ target }) =>\n                  setFilters((filters) => ({\n                    ...filters,\n                    search: target.value,\n                  })),\n                []\n              )}\n            />\n          </label>\n        </fieldset> */}\n        <Investments\n          investments={options.investment}\n          rates={rates}\n          selected={investmentsSelected}\n          setSelected={setInvestmentsSelected}\n        />\n      </SyncZoomProvider>\n      <SyncZoomProvider>\n        <Chart\n          list={[...Array(DAYS)]\n            .map((_, i) =>\n              sub(new Date(), {\n                days: i,\n              })\n            )\n            .reverse()\n            .map((date, i) =>\n              Object.entries(\n                transactions\n                  .filter(\n                    (transaction, i) =>\n                      new Date(transaction.date) <= date && selected.includes(i)\n                  )\n                  .map(getInvestmentTransactionValue({ date, rates }))\n                  .filter(Boolean)\n                  .reduce(\n                    (\n                      result: Record<string, number>,\n                      { value, investment_id }\n                    ) =>\n                      Object.assign(result, {\n                        [investment_id]: (result[investment_id] || 0) + value,\n                      }),\n                    {}\n                  )\n              ).map(([investment_id, value]) => ({\n                date,\n                group: names[investment_id],\n                value,\n              }))\n            )\n            .flat()}\n        />\n        <Chart\n          list={[...Array(DAYS)]\n            .map((_, i) =>\n              sub(new Date(), {\n                days: i,\n              })\n            )\n            .reverse()\n            .map((date) =>\n              Object.entries(\n                transactions\n                  .filter(\n                    (transaction, i) =>\n                      new Date(transaction.date) <= date && selected.includes(i)\n                  )\n                  .map(getInvestmentTransactionValue({ date, rates }))\n                  .filter(Boolean)\n                  .reduce(\n                    (result, { value }, i) =>\n                      Object.assign(result, {\n                        [i]: value,\n                      }),\n                    {}\n                  )\n              ).map(([group, value], i, list) =>\n                ((value2) => ({\n                  date,\n                  group,\n                  value: value + value2,\n                  value2,\n                }))(\n                  list\n                    .slice(0, i)\n                    .reduce((result, [_, value]) => result + value, 0)\n                )\n              )\n            )\n            .flat()}\n          type=\"area\"\n          legend\n        />\n        <Transactions\n          transactions={transactions}\n          rates={rates}\n          names={names}\n          selected={selected}\n          setSelected={setSelected}\n        />\n      </SyncZoomProvider>\n      <DonutChart\n        list={Object.entries(\n          transactions\n            .filter((_, i) => selected.includes(i))\n            .reduce(\n              (list: Record<number, number>, item) =>\n                Object.assign(list, {\n                  [item.investment_id]:\n                    (list[item.investment_id] || 0) + item.value,\n                }),\n              {}\n            )\n        )\n          .map(([investment_id, value]) => ({\n            label: names[investment_id],\n            value,\n          }))\n          .sort((a, b) => b.value - a.value)}\n      />\n      {/* <pre>{JSON.stringify(metas, null, 2)}</pre> */}\n      {/* <pre>{JSON.stringify(list.slice(0, 5), null, 2)}</pre> */}\n    </div>\n  );\n}\n\nexport default function Section() {\n  return (\n    <div className={styles.Section}>\n      <h2>Quotes</h2>\n      <Data />\n    </div>\n  );\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.D4hghWDR6tislQFHDqDO{position:relative;padding:2em}.D4hghWDR6tislQFHDqDO svg{display:block;width:100%;height:300px;background:#f7f7f7;overflow:visible}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/DonutChart/styles.module.scss\"],\"names\":[],\"mappings\":\"AAAA,sBACE,iBAAA,CACA,WAAA,CAEA,0BACE,aAAA,CACA,UAAA,CACA,YAAA,CACA,kBAAA,CACA,gBAAA\",\"sourcesContent\":[\".Chart {\\n  position: relative;\\n  padding: 2em;\\n\\n  svg {\\n    display: block;\\n    width: 100%;\\n    height: 300px;\\n    background: #f7f7f7;\\n    overflow: visible;\\n\\n    //   rect.selection {\\n    //     stroke: none;\\n    //   }\\n  }\\n\\n  // .Tooltip {\\n  //   position: absolute;\\n  // }\\n}\\n// .Tooltip {\\n//   background: white;\\n//   border: 1px solid lightgray;\\n//   color: orange;\\n//   padding: 0.25em;\\n// }\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Chart\": `D4hghWDR6tislQFHDqDO`\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `._ESpGSPPpzgrCHtLDC15{color:purple}.TdrVPL_ZKxEpsGqtgAKw,.XpEtlXAz0qkmc2pUZelh{font-family:Arial,Helvetica,sans-serif;font-size:.7em}.TdrVPL_ZKxEpsGqtgAKw table,.XpEtlXAz0qkmc2pUZelh table{border-collapse:collapse}.TdrVPL_ZKxEpsGqtgAKw table tr:hover,.XpEtlXAz0qkmc2pUZelh table tr:hover{background-color:#e0e0e0}.TdrVPL_ZKxEpsGqtgAKw tr:nth-child(even),.XpEtlXAz0qkmc2pUZelh tr:nth-child(even){background-color:#f7f7f7}.TdrVPL_ZKxEpsGqtgAKw th,.TdrVPL_ZKxEpsGqtgAKw td,.XpEtlXAz0qkmc2pUZelh th,.XpEtlXAz0qkmc2pUZelh td{padding:.25em}.B5XUoft7ajzWeLY9QZQ9{clear:both;padding:.5em 0;border:2px solid rgba(0,0,0,0);margin:.5em}.MXCudOGdPDTJtcb0KFtk{color:#000;text-align:right;width:4.5em}.MXCudOGdPDTJtcb0KFtk.oGGbruZcUCrKnRswgvhX{color:blue}.MXCudOGdPDTJtcb0KFtk.LFTPI4HvrN257b34VKog{color:green}.MXCudOGdPDTJtcb0KFtk.LFTPI4HvrN257b34VKog::before{content:\"↖\"}.MXCudOGdPDTJtcb0KFtk.IYciZuUEzLYtaU3GzLql{color:red}.MXCudOGdPDTJtcb0KFtk.IYciZuUEzLYtaU3GzLql::before{content:\"↘\"}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/containers/Quotes/styles.module.scss\"],\"names\":[],\"mappings\":\"AAAA,sBAAA,YACE,CAAA,4CAEF,sCAEE,CAAA,cACA,CAAA,wDACA,wBACE,CAAA,0EAEE,wBACE,CAAA,kFAKJ,wBACE,CAAA,oGAGJ,aAEE,CAAA,sBAGJ,UACE,CAAA,cACA,CAAA,8BACA,CAAA,WACA,CAAA,sBAEF,UACE,CAAA,gBACA,CAAA,WACA,CAAA,2CACA,UACE,CAAA,2CAEF,WACE,CAAA,mDACA,WACE,CAAA,2CAGJ,SACE,CAAA,mDACA,WACE\",\"sourcesContent\":[\".Section {\\n  color: purple;\\n}\\n.Investments,\\n.Transactions {\\n  font-family: Arial, Helvetica, sans-serif;\\n  font-size: 0.7em;\\n  table {\\n    border-collapse: collapse;\\n    tr {\\n      &:hover {\\n        background-color: #e0e0e0;\\n      }\\n    }\\n  }\\n  tr {\\n    &:nth-child(even) {\\n      background-color: #f7f7f7;\\n    }\\n  }\\n  th,\\n  td {\\n    padding: 0.25em;\\n  }\\n}\\n.Row {\\n  clear: both;\\n  padding: 0.5em 0;\\n  border: 2px solid transparent;\\n  margin: 0.5em;\\n}\\n.Percent {\\n  color: black;\\n  text-align: right;\\n  width: 4.5em;\\n  &.eq {\\n    color: blue;\\n  }\\n  &.gt {\\n    color: green;\\n    &::before {\\n      content: \\\"\\\\2196\\\";\\n    }\\n  }\\n  &.lt {\\n    color: red;\\n    &::before {\\n      content: \\\"\\\\2198\\\";\\n    }\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Section\": `_ESpGSPPpzgrCHtLDC15`,\n\t\"Investments\": `TdrVPL_ZKxEpsGqtgAKw`,\n\t\"Transactions\": `XpEtlXAz0qkmc2pUZelh`,\n\t\"Row\": `B5XUoft7ajzWeLY9QZQ9`,\n\t\"Percent\": `MXCudOGdPDTJtcb0KFtk`,\n\t\"eq\": `oGGbruZcUCrKnRswgvhX`,\n\t\"gt\": `LFTPI4HvrN257b34VKog`,\n\t\"lt\": `IYciZuUEzLYtaU3GzLql`\n};\nexport default ___CSS_LOADER_EXPORT___;\n","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  var dayOfMonth = date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport subDays from \"../subDays/index.js\";\nimport subMonths from \"../subMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\nexport default function sub(date, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || _typeof(duration) !== 'object') return new Date(NaN);\n  var years = duration.years ? toInteger(duration.years) : 0;\n  var months = duration.months ? toInteger(duration.months) : 0;\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\n  var days = duration.days ? toInteger(duration.days) : 0;\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0;\n\n  // Subtract years and months\n  var dateWithoutMonths = subMonths(date, months + years * 12);\n\n  // Subtract weeks and days\n  var dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7);\n\n  // Subtract hours, minutes and seconds\n  var minutestoSub = minutes + hours * 60;\n  var secondstoSub = seconds + minutestoSub * 60;\n  var mstoSub = secondstoSub * 1000;\n  var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);\n  return finalDate;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}","import addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\nexport default function subDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}","import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    return operate(function (source, subscriber) {\n        var activeTask = null;\n        var lastValue = null;\n        var lastTime = null;\n        var emit = function () {\n            if (activeTask) {\n                activeTask.unsubscribe();\n                activeTask = null;\n                var value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        function emitWhenIdle() {\n            var targetTime = lastTime + dueTime;\n            var now = scheduler.now();\n            if (now < targetTime) {\n                activeTask = this.schedule(undefined, targetTime - now);\n                subscriber.add(activeTask);\n                return;\n            }\n            emit();\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            lastValue = value;\n            lastTime = scheduler.now();\n            if (!activeTask) {\n                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n                subscriber.add(activeTask);\n            }\n        }, function () {\n            emit();\n            subscriber.complete();\n        }, undefined, function () {\n            lastValue = activeTask = null;\n        }));\n    });\n}\n//# sourceMappingURL=debounceTime.js.map","import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function distinctUntilChanged(comparator, keySelector) {\n    if (keySelector === void 0) { keySelector = identity; }\n    comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n    return operate(function (source, subscriber) {\n        var previousKey;\n        var first = true;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var currentKey = keySelector(value);\n            if (first || !comparator(previousKey, currentKey)) {\n                first = false;\n                previousKey = currentKey;\n                subscriber.next(value);\n            }\n        }));\n    });\n}\nfunction defaultCompare(a, b) {\n    return a === b;\n}\n//# sourceMappingURL=distinctUntilChanged.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function map(project, thisArg) {\n    return operate(function (source, subscriber) {\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            subscriber.next(project.call(thisArg, value, index++));\n        }));\n    });\n}\n//# sourceMappingURL=map.js.map"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","undefined","Chart","_ref","list","groupRef","useRef","useEffect","createPie","d3","value","d","sort","createArc","innerRadius","outerRadius","colors","data","groupWithData","current","selectAll","exit","remove","groupWithUpdate","enter","append","attr","merge","select","i","concat","centroid","style","text","_ref2","label","React","className","cx","styles","ref","transform","getValueNearDate","values","date","format","sub","days","Percent","isNaN","eq","gt","lt","Intl","NumberFormat","minimumFractionDigits","Math","round","Investments","investments","rates","selected","setSelected","_useState2","_slicedToArray","useState","expanded","setExpanded","useMemo","map","item","_Object$entries$pop2","Object","entries","id","pop","unitValue","_objectSpread","Date","type","checked","length","onChange","useCallback","_ref3","target","_ref4","key","includes","_ref5","filter","href","onClick","e","preventDefault","name","align","months","colSpan","JSON","stringify","getInvestmentTransaction","names","investment_id","units","valueNetto","valueBrutto","Transactions","transactions","quotes","keys","reduce","result","assign","Boolean","_","n","_ref6","quote","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","val","object","reverse","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","ERA","DAYS","asset","createAsset","_callee","version","res","_context","fetch","json","metas","objects","args","arguments","apply","_x","getInvestmentTransactionValue","valueDate","unitValueDate","Data","_ref5$version","read","results","investment","_ref7","a","b","localeCompare","_ref8","_defineProperty","_ref9","_useState4","search","filters","_useState6","queries","setQueries","search$","Subject","subscription","pipe","_ref10","_objectWithoutProperties","_excluded","trim","distinctUntilChanged","debounceTime","subscribe","parse","unsubscribe","console","log","unified","_ref11","getTime","from","_useState8","_useState10","selectedDate","setSelectedDate","_useState12","investmentsSelected","setInvestmentsSelected","_ref12","_ref13","getRelatedValue","formattedDate","SyncZoomProvider","_ref14","_excluded2","group","legend","rule","_ref15","_ref16","_ref17","_ref18","_excluded3","_toConsumableArray","Array","transaction","_ref19","_ref20","_ref21","flat","_ref22","_ref23","value2","_ref24","_ref25","_ref26","DonutChart","_ref27","_ref28","Section","___CSS_LOADER_EXPORT___","module","addDays","dirtyDate","dirtyAmount","amount","NaN","setDate","getDate","addMonths","dayOfMonth","endOfDesiredMonth","setMonth","getMonth","setFullYear","getFullYear","duration","requiredArgs","years","toInteger","weeks","hours","minutes","seconds","dateWithoutMonths","subMonths","dateWithoutDays","subDays","mstoSub","dueTime","scheduler","source","subscriber","activeTask","lastValue","lastTime","emit","emitWhenIdle","targetTime","now","this","schedule","add","comparator","keySelector","defaultCompare","previousKey","first","currentKey","project","thisArg","index"],"sourceRoot":""}