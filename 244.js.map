{"version":3,"file":"244.js","mappings":"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","sources":["webpack://@dev/web/./src/components/DonutChart/styles.module.scss?a1ed","webpack://@dev/web/./src/components/DonutChart/index.tsx","webpack://@dev/web/./src/containers/Quotes/styles.module.scss?548c","webpack://@dev/web/./src/containers/Quotes/Investments.tsx","webpack://@dev/web/./src/containers/Quotes/Transactions.tsx","webpack://@dev/web/./src/containers/Quotes/data.ts","webpack://@dev/web/./src/containers/Quotes/index.tsx","webpack://@dev/web/./src/components/DonutChart/styles.module.scss","webpack://@dev/web/./src/containers/Quotes/styles.module.scss","webpack://@dev/web/../../node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js","webpack://@dev/web/../../node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js","webpack://@dev/web/../../node_modules/rxjs/dist/esm5/internal/operators/map.js","webpack://@dev/web/../../node_modules/date-fns/addDays.mjs","webpack://@dev/web/../../node_modules/date-fns/addMonths.mjs","webpack://@dev/web/../../node_modules/date-fns/sub.mjs","webpack://@dev/web/../../node_modules/date-fns/subDays.mjs","webpack://@dev/web/../../node_modules/date-fns/subMonths.mjs"],"sourcesContent":["\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { type PieArcDatum } from \"d3-shape\";\nimport cx from \"classnames\";\nimport styles from \"./styles.module.scss\";\n\n// https://medium.com/react-courses/drawing-basic-charts-with-react-typescript-d3-part-ii-pie-scatter-chart-da4fc653b715\ntype Data = {\n  label: string;\n  value: number;\n};\n\nexport default function Chart({\n  list,\n}: {\n  list: { label: string; value: number }[];\n}) {\n  const groupRef = useRef<SVGGeometryElement>(null);\n  const innerRadius = 60;\n  const outerRadius = 130;\n\n  // https://codesandbox.io/s/r5wp0v08xq\n  useEffect(() => {\n    const createPie = d3\n      .pie<Data>()\n      .value((d) => d.value)\n      .sort(null);\n    const createArc = d3\n      .arc<PieArcDatum<Data>>()\n      .innerRadius(innerRadius)\n      .outerRadius(outerRadius);\n    const colors = d3.scaleOrdinal(d3.schemeCategory10);\n\n    const data = createPie(list);\n    const group = d3.select(groupRef.current);\n    const groupWithData = group.selectAll(\"g.arc\").data(data);\n\n    groupWithData.exit().remove();\n\n    const groupWithUpdate = groupWithData\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"arc\");\n\n    const path = groupWithUpdate\n      .append(\"path\")\n      .merge(groupWithData.select(\"path.arc\"));\n\n    path\n      .attr(\"class\", \"arc\")\n      .attr(\"d\", createArc)\n      .attr(\"fill\", (d, i) => colors(i));\n\n    const text = groupWithUpdate\n      .append(\"text\")\n      .merge(groupWithData.select(\"text\"));\n\n    text\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"alignment-baseline\", \"middle\")\n      .attr(\"transform\", (d) => `translate(${createArc.centroid(d)})`)\n      .style(\"fill\", \"white\")\n      .style(\"font-size\", 10)\n      .text(({ data }) => `${data.label} (${data.value})`);\n  }, [list]);\n\n  return (\n    <div className={cx(styles.Chart)}>\n      <svg>\n        <g\n          ref={groupRef}\n          transform={`translate(${outerRadius + 20} ${outerRadius + 20})`}\n        />\n      </svg>\n    </div>\n  );\n}\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  type ChangeEventHandler,\n  type MouseEventHandler,\n  useCallback,\n  useMemo,\n  useState,\n} from \"react\";\nimport { format, sub } from \"date-fns\";\nimport cx from \"classnames\";\nimport styles from \"./styles.module.scss\";\n\nfunction getValueNearDate(values, date) {\n  for (let i = 0; i < 5; i++) {\n    const value = values[format(date, \"yyyy-MM-dd\")];\n    if (value) {\n      return value;\n    }\n    date = sub(date, {\n      days: 1,\n    });\n  }\n}\n\nexport function Percent({ value }: { value: number }) {\n  return isNaN(value) ? null : (\n    <div\n      className={cx(\n        styles.Percent,\n        value === 0 ? styles.eq : value > 0 ? styles.gt : styles.lt\n      )}\n    >\n      {new Intl.NumberFormat(\"pl-PL\", {\n        minimumFractionDigits: 2,\n      }).format(Math.round(100 * 100 * value) / 100)}\n      &nbsp;%\n    </div>\n  );\n}\n\nexport default function Investments({\n  investments,\n  rates,\n  selected,\n  setSelected,\n}: {\n  investments: { id: number; name: string }[];\n  rates: Record<string, Record<string, number>>;\n  selected: number[];\n  setSelected: Function;\n}) {\n  const [expanded, setExpanded] = useState<number[]>([]);\n  const list = useMemo(\n    () =>\n      investments.map((item) => {\n        const [date, unitValue] = Object.entries(rates[item.id]).pop();\n\n        return {\n          ...item,\n          date: new Date(date),\n          unitValue,\n        };\n      }),\n    [rates]\n  );\n\n  return (\n    <div className={styles.Investments}>\n      <h3>Investments</h3>\n      <table>\n        <tbody>\n          <tr>\n            <th>\n              <input\n                type=\"checkbox\"\n                checked={selected.length === investments.length}\n                onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                  ({ target }) =>\n                    setSelected(\n                      target.checked ? investments.map(({ id }) => id) : []\n                    ),\n                  []\n                )}\n              />\n            </th>\n            <th>Fundusz</th>\n            <th>Data wyceny jednostki</th>\n            <th>Wycena jednostki</th>\n            <th>7d</th>\n            <th>14d</th>\n            <th>1m</th>\n            <th>3m</th>\n            <th>6m</th>\n            <th>12m</th>\n            <th>24m</th>\n            <th>36m</th>\n          </tr>\n          {list.map((item, i) =>\n            [\n              <tr key={i}>\n                <td>\n                  <input\n                    type=\"checkbox\"\n                    checked={selected.includes(item.id)}\n                    onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                      ({ target }) =>\n                        setSelected((selected: number[]) =>\n                          !target.checked\n                            ? selected.filter((id) => id !== item.id)\n                            : selected.concat(item.id)\n                        ),\n                      []\n                    )}\n                  />\n                </td>\n                <td>\n                  <a\n                    href=\"#\"\n                    onClick={useCallback<MouseEventHandler>(\n                      (e) => (\n                        e.preventDefault(),\n                        setExpanded((expanded) =>\n                          expanded.includes(item.id)\n                            ? expanded.filter((id) => id !== item.id)\n                            : expanded.concat(item.id)\n                        )\n                      ),\n                      []\n                    )}\n                  >\n                    {item.name}\n                  </a>\n                </td>\n                <td align=\"right\">{format(item.date, \"dd.MM.yyyy\")}</td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(item.unitValue)}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            days: 7,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            days: 14,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            months: 1,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        rates[item.id][\n                          format(\n                            sub(item.date, {\n                              months: 3,\n                            }),\n                            \"yyyy-MM-dd\"\n                          )\n                        ] -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            months: 6,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            months: 12,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            months: 24,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            months: 36,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n              </tr>,\n            ].concat(\n              expanded.includes(item.id)\n                ? [\n                    <tr key={`${i}-details`}>\n                      <td></td>\n                      <td colSpan={11}>\n                        <pre>{JSON.stringify(item, null, 2)}</pre>\n                        <pre>{JSON.stringify(rates[item.id], null, 2)}</pre>\n                      </td>\n                    </tr>,\n                  ]\n                : []\n            )\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React, {\n  type ChangeEventHandler,\n  type MouseEventHandler,\n  useCallback,\n  useMemo,\n  useState,\n} from \"react\";\nimport { format } from \"date-fns\";\nimport { Percent } from \"./Investments\";\nimport styles from \"./styles.module.scss\";\n\nconst getInvestmentTransaction =\n  ({\n    names,\n    rates,\n  }: {\n    names: Record<string, string>;\n    rates: Record<string, Record<string, number>>;\n  }) =>\n  ({\n    date,\n    investment_id,\n    value,\n  }: {\n    date: string;\n    investment_id: number;\n    value: number;\n  }) => {\n    if (!rates[investment_id]) {\n      return null;\n    }\n    const unitValue = rates[investment_id][date];\n    const round = 1000;\n    const units = Math.round((round * value) / unitValue) / round;\n    return {\n      name: names[investment_id],\n      date: new Date(date),\n      investment_id,\n      value: Math.round(100 * units * unitValue) / 100,\n      valueNetto: value,\n      valueBrutto: value,\n      unitValue,\n      units,\n    };\n  };\n\nexport default function Transactions({\n  transactions,\n  rates,\n  names,\n  selected,\n  setSelected,\n}: {\n  transactions: { date: string; investment_id: number; value: number }[];\n  names: Record<string, string>;\n  rates: Record<string, Record<string, number>>;\n  selected: number[];\n  setSelected: Function;\n}) {\n  const [expanded, setExpanded] = useState<number[]>([]);\n\n  const quotes = useMemo(\n    () =>\n      Object.keys(rates).reduce((result, id) => {\n        const [date, unitValue] = Object.entries(rates[id]).pop();\n\n        return Object.assign(result, {\n          [id]: {\n            date: new Date(date),\n            unitValue,\n          },\n        });\n      }, {}),\n    [rates]\n  );\n\n  const list = useMemo(\n    () =>\n      transactions\n        .map(getInvestmentTransaction({ names, rates }))\n        .filter(Boolean),\n    [transactions, names, rates]\n  );\n\n  return (\n    <div className={styles.Transactions}>\n      <h3>Transactions</h3>\n      <table>\n        <tbody>\n          <tr>\n            <th>\n              <input\n                type=\"checkbox\"\n                checked={selected.length === transactions.length}\n                onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                  ({ target }) =>\n                    setSelected(\n                      target.checked ? transactions.map((_, i) => i) : []\n                    ),\n                  []\n                )}\n              />\n            </th>\n            <th>Fundusz</th>\n            <th>Kwota transakcji</th>\n            <th>Liczba jednostek</th>\n            <th>Data wyceny jednostki</th>\n            <th>Wycena jednostki</th>\n            <th>Wartość</th>\n            <th>Data wyceny jednostki</th>\n            <th>Wycena jednostki</th>\n            <th>Wartość</th>\n            <th>%</th>\n          </tr>\n          {list.map((item, i) =>\n            [\n              <tr key={i}>\n                <td>\n                  <input\n                    type=\"checkbox\"\n                    checked={selected.includes(i)}\n                    onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                      ({ target }) =>\n                        setSelected((selected: number[]) =>\n                          !target.checked\n                            ? selected.filter((n) => n !== i)\n                            : selected.concat(i)\n                        ),\n                      []\n                    )}\n                  />\n                </td>\n                <td>\n                  <a\n                    href=\"#\"\n                    onClick={useCallback<MouseEventHandler>(\n                      (e) => (\n                        e.preventDefault(),\n                        setExpanded((expanded) =>\n                          expanded.includes(i)\n                            ? expanded.filter((n) => n !== i)\n                            : expanded.concat(i)\n                        )\n                      ),\n                      []\n                    )}\n                  >\n                    {item.name}\n                  </a>\n                </td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(item.valueNetto)}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {}).format(item.units)}\n                </td>\n                <td align=\"right\">{format(item.date, \"dd.MM.yyyy\")}</td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(item.unitValue)}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(item.value)}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  {format(quotes[item.investment_id].date, \"dd.MM.yyyy\")}\n                </td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(quotes[item.investment_id].unitValue)}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(\n                    Math.round(\n                      100 * quotes[item.investment_id].unitValue * item.units\n                    ) / 100\n                  )}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      quotes[item.investment_id].unitValue / item.unitValue - 1\n                    }\n                  />\n                </td>\n              </tr>,\n            ].concat(\n              expanded.includes(i)\n                ? [\n                    <tr key={`${i}-details`}>\n                      <td></td>\n                      <td colSpan={10}>\n                        {/* <pre>{JSON.stringify(rates[investment_id], null, 2)}</pre> */}\n                        <pre>\n                          {`Data wyceny jednostki\n${format(item.date, \"dd.MM.yyyy\")}\nData realizacji\n${format(item.date, \"dd.MM.yyyy\")}\nKwota transakcji netto w PLN\n${new Intl.NumberFormat(\"pl-PL\", {\n  minimumFractionDigits: 2,\n}).format(item.valueNetto)} PLN\nKwota transakcji brutto w PLN\n${new Intl.NumberFormat(\"pl-PL\", {\n  minimumFractionDigits: 2,\n}).format(item.valueBrutto)} PLN\nIlość jednostek po transakcji\n${new Intl.NumberFormat(\"pl-PL\", {}).format(item.units)}\nWartość jednostki w dniu wyceny\n${new Intl.NumberFormat(\"pl-PL\", {\n  minimumFractionDigits: 2,\n}).format(item.unitValue)} PLN\nWartość\n${new Intl.NumberFormat(\"pl-PL\", {\n  minimumFractionDigits: 2,\n}).format(item.value)} PLN\nOpłata manipulacyjna\n0,00 PLN / 0 %`}\n                        </pre>\n                      </td>\n                    </tr>,\n                  ]\n                : []\n            )\n          )}\n        </tbody>\n        <tfoot>\n          {[\n            list\n              .filter((_, i) => selected.includes(i))\n              .reduce(\n                ({ units, value, valueNetto, quote }, item) => ({\n                  units: units + item.units,\n                  value: value + item.value,\n                  valueNetto: valueNetto + item.valueNetto,\n                  quote:\n                    quote +\n                    Math.round(\n                      100 * quotes[item.investment_id].unitValue * item.units\n                    ) /\n                      100,\n                }),\n                {\n                  units: 0,\n                  value: 0,\n                  valueNetto: 0,\n                  quote: 0,\n                }\n              ),\n          ].map((item, i) => (\n            <tr key={i}>\n              <td></td>\n              <td></td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.valueNetto)}\n                &nbsp;PLN\n              </td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.units)}\n              </td>\n              <td colSpan={2}></td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.value)}\n                &nbsp;PLN\n              </td>\n              <td colSpan={2}></td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.quote)}\n                &nbsp;PLN\n              </td>\n              <td align=\"right\">\n                <Percent value={item.quote / item.value - 1} />\n              </td>\n            </tr>\n          ))}\n        </tfoot>\n      </table>\n    </div>\n  );\n}\n","export const transactions = [\n  { date: \"2018-12-28\", investment_id: 44, value: 5331.6 }, // PKO Zabezpieczenia Emerytalnego 2050\n  { date: \"2019-12-30\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n  { date: \"2020-12-28\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n  { date: \"2021-12-15\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n  { date: \"2022-01-03\", investment_id: 75, value: 1000 }, // PKO Akcji Rynku Amerykańskiego\n  { date: \"2022-02-01\", investment_id: 75, value: 1000 }, // PKO Akcji Rynku Amerykańskiego\n  { date: \"2022-02-28\", investment_id: 34, value: 1000 }, // PKO Surowców Globalny\n  { date: \"2022-03-08\", investment_id: 35, value: 1000 }, // PKO Technologii i Innowacji Globalny\n  { date: \"2022-03-11\", investment_id: 10, value: 1000 }, // PKO Akcji Nowa Europa\n  { date: \"2022-03-21\", investment_id: 36, value: 1000 }, // PKO Dóbr Luksusowych Globalny\n  { date: \"2022-03-21\", investment_id: 37, value: 1000 }, // PKO Infrastruktury i Budownictwa Globalny\n  { date: \"2022-04-01\", investment_id: 34, value: 1000 }, // PKO Surowców Globalny\n  { date: \"2022-04-11\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n  { date: \"2022-04-26\", investment_id: 34, value: 1000 }, // PKO Surowców Globalny\n  { date: \"2022-05-05\", investment_id: 75, value: 1000 }, // PKO Akcji Rynku Amerykańskiego\n  { date: \"2022-06-20\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n  { date: \"2022-06-23\", investment_id: 10, value: -907.62 }, // PKO Akcji Nowa Europa\n  { date: \"2022-06-23\", investment_id: 33, value: 907.62 }, // PKO Akcji Plus\n  { date: \"2022-07-29\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n  { date: \"2022-08-29\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n  { date: \"2023-06-29\", investment_id: 79, value: 1000 }, // PKO Akcji Rynku Złota\n  { date: \"2023-12-11\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n];\n","import React, {\n  type ChangeEventHandler,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { Subject } from \"rxjs\";\nimport { debounceTime, distinctUntilChanged, map } from \"rxjs/operators\";\nimport { createAsset } from \"use-asset\";\nimport { format, sub } from \"date-fns\";\nimport Chart, { SyncZoomProvider } from \"../../components/ZoomableLineChart\";\nimport DonutChart from \"../../components/DonutChart\";\nimport Investments from \"./Investments\";\nimport Transactions from \"./Transactions\";\nimport * as data from \"./data\";\nimport styles from \"./styles.module.scss\";\n\nimport type { Meta, Item } from \"@dev/cli/src/services/QuotesService/types\";\n\nconst ERA = 24 * 3600 * 1000;\nconst DAYS = 1200;\n\n// https://github.com/pmndrs/use-asset#dealing-with-async-assets\nconst asset = createAsset(async (version) => {\n  const res = await fetch(`api/quotes/data.json?${version}`);\n  return await res.json().then(({ metas, objects }) => ({\n    metas,\n    objects: objects.concat([\n      {\n        date: \"2022-06-23\",\n        // \"roi\": -29.59,\n        // \"unit\": \"A\",\n        // value: 70.55,\n        value: 68.65,\n        // \"id\": \"investments-10-2022-06-22\",\n        investment_id: 10,\n      },\n    ]),\n  }));\n});\n\nconst getInvestmentTransactionValue =\n  ({\n    date: valueDate,\n    rates,\n  }: {\n    date: Date;\n    rates: Record<string, Record<string, number>>;\n  }) =>\n  ({\n    date,\n    investment_id,\n    value,\n  }: {\n    date: string;\n    investment_id: number;\n    value: number;\n  }) => {\n    if (!rates[investment_id]) {\n      return null;\n    }\n    const unitValue = rates[investment_id][date];\n    const round = 1000;\n    const units = Math.round((round * value) / unitValue) / round;\n    const unitValueDate = rates[investment_id][format(valueDate, \"yyyy-MM-dd\")];\n    return rates[investment_id][format(valueDate, \"yyyy-MM-dd\")]\n      ? {\n          investment_id,\n          value: Math.round(100 * units * unitValueDate) / 100,\n        }\n      : null;\n  };\n\nfunction Data({ version = \"v1\" }) {\n  const { metas, objects: results } = asset.read(version) as {\n    metas: Meta[];\n    objects: Item[];\n  };\n\n  const [transactions] = useState(() => data.transactions);\n\n  const options = useMemo(\n    () => ({\n      investment: metas\n        .map(({ id, name }) => ({ id, name }))\n        .sort((a, b) => a.name.localeCompare(b.name)),\n    }),\n    [results],\n  );\n\n  const names = useMemo(\n    () =>\n      metas.reduce(\n        (result: Record<string, string>, { id, name }) =>\n          Object.assign(result, {\n            [id]: name,\n          }),\n        {},\n      ),\n    [metas],\n  );\n\n  const rates = useMemo(\n    () =>\n      results\n        .sort((a, b) => a.date.localeCompare(b.date))\n        .reduce(\n          (\n            result: Record<string, Record<string, number>>,\n            { date, investment_id, value },\n          ) =>\n            Object.assign(result, {\n              [investment_id]: Object.assign(result[investment_id] || {}, {\n                [date]: value,\n              }),\n            }),\n          {},\n        ),\n    [results],\n  );\n\n  const [filters, setFilters] = useState(() => ({\n    // investment: options.investment[0].id,\n    // related: options.investment[0].id,\n    search: \"\",\n  }));\n\n  const [queries, setQueries] = useState(() => filters);\n\n  const search$ = useMemo(() => new Subject<any>(), []);\n\n  useEffect(() => {\n    const subscription = search$\n      .pipe(\n        map(({ search, ...filters }) =>\n          JSON.stringify({ ...queries, ...filters, search: search.trim() }),\n        ),\n        distinctUntilChanged(),\n        debounceTime(400),\n      )\n      .subscribe((filters) =>\n        setQueries((queries) => ({ ...queries, ...JSON.parse(filters) })),\n      );\n    return () => subscription.unsubscribe();\n  }, [search$]);\n\n  useEffect(() => {\n    search$.next(filters);\n  }, [filters]);\n\n  console.log({ metas, options, filters, results, rates });\n\n  const unified = useMemo(\n    () =>\n      results\n        .map(({ investment_id, value, date }) => ({\n          investment_id,\n          value,\n          date: new Date(date),\n        }))\n        .sort(\n          (a, b) => new Date(a.date).getTime() - new Date(b.date).getTime(),\n        ),\n    [results],\n  );\n\n  const from = useMemo(\n    () => unified[unified.length - 1].date.getTime() - ERA * 2000,\n    [unified],\n  );\n\n  const [selected, setSelected] = useState<number[]>(() =>\n    transactions.map((_, i) => i),\n  );\n  const [selectedDate, setSelectedDate] = useState<string>(() =>\n    format(unified[unified.length - 1].date.getTime(), \"yyyy-MM-dd\"),\n  );\n  const [investmentsSelected, setInvestmentsSelected] = useState<number[]>(\n    () => [34, 35, 44, 79],\n  );\n\n  const list = useMemo(\n    () =>\n      unified\n        .filter(({ investment_id }) =>\n          investmentsSelected.includes(investment_id),\n        )\n        .filter(({ date }) => date.getTime() > from),\n    [unified, investmentsSelected],\n  );\n\n  // const relation = useMemo(\n  //   () =>\n  //     Object.entries(\n  //       unified.reduce(\n  //         (result, { date, investment_id, value }) =>\n  //           Object.assign(result, {\n  //             [format(date, \"yyyy-MM-dd\")]: Object.assign(\n  //               result[format(date, \"yyyy-MM-dd\")] || {},\n  //               {\n  //                 [investment_id]: value,\n  //               }\n  //             ),\n  //           }),\n  //         {}\n  //       )\n  //     )\n  //       .map(([date, investments]) => ({\n  //         date: new Date(date),\n  //         value: investments[filters.investment] / investments[filters.related],\n  //       }))\n  //       .filter(({ date }) => date.getTime() > from),\n  //   [unified, filters]\n  // );\n\n  const getRelatedValue = useCallback((values, date, selectedDate) => {\n    const formattedDate = format(date, \"yyyy-MM-dd\");\n    if (values[formattedDate] && values[selectedDate]) {\n      return values[formattedDate] / values[selectedDate];\n    }\n    return 0;\n  }, []);\n\n  return (\n    <div>\n      <SyncZoomProvider>\n        {/* <fieldset>\n          <label>\n            <span>Investment</span>\n            <select\n              value={filters.investment}\n              onChange={useCallback<ChangeEventHandler<HTMLSelectElement>>(\n                ({ target }) =>\n                  setFilters((filters) => ({\n                    ...filters,\n                    investment: Number(target.value),\n                  })),\n                []\n              )}\n            >\n              {options.investment.map(({ id, name }) => (\n                <option key={id} value={id}>\n                  {name}\n                </option>\n              ))}\n            </select>\n          </label>\n        </fieldset> */}\n        <Chart\n          list={list.map(({ investment_id, ...item }) => ({\n            ...item,\n            group: names[investment_id],\n          }))}\n          legend\n          rule\n        />\n        <fieldset>\n          {/* <label>\n            <span>Related</span>\n            <select\n              value={filters.related}\n              onChange={useCallback<ChangeEventHandler<HTMLSelectElement>>(\n                ({ target }) =>\n                  setFilters((filters) => ({\n                    ...filters,\n                    related: Number(target.value),\n                  })),\n                []\n              )}\n            >\n              {options.investment.map(({ id, name }) => (\n                <option key={id} value={id}>\n                  {name}\n                </option>\n              ))}\n            </select>\n          </label>\n          <button\n            onClick={useCallback<MouseEventHandler>(\n              (e) => (\n                e.preventDefault(),\n                setFilters(({ investment, related, ...filters }) => ({\n                  ...filters,\n                  investment: related,\n                  related: investment,\n                }))\n              ),\n              []\n            )}\n          >\n            reverse\n          </button> */}\n          <label>\n            <span>Date</span>\n            <input\n              type=\"date\"\n              value={selectedDate}\n              onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                ({ target }) => setSelectedDate(target.value),\n                [],\n              )}\n            />\n          </label>\n        </fieldset>\n        <Chart\n          list={unified\n            .filter(({ investment_id }) =>\n              investmentsSelected.includes(investment_id),\n            )\n            .filter(({ date }) => date.getTime() > from)\n\n            .map(({ investment_id, ...item }) => ({\n              ...item,\n              value: getRelatedValue(\n                rates[investment_id],\n                item.date,\n                selectedDate,\n              ),\n              group: names[investment_id],\n            }))}\n          rule\n        />\n        {/* <fieldset>\n          <label>\n            <span>Search</span>\n            <input\n              type=\"search\"\n              value={filters.search}\n              onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                ({ target }) =>\n                  setFilters((filters) => ({\n                    ...filters,\n                    search: target.value,\n                  })),\n                []\n              )}\n            />\n          </label>\n        </fieldset> */}\n        <Investments\n          investments={options.investment}\n          rates={rates}\n          selected={investmentsSelected}\n          setSelected={setInvestmentsSelected}\n        />\n      </SyncZoomProvider>\n      <SyncZoomProvider>\n        <Chart\n          list={[...Array(DAYS)]\n            .map((_, i) =>\n              sub(new Date(), {\n                days: i,\n              }),\n            )\n            .reverse()\n            .map((date, i) =>\n              Object.entries(\n                transactions\n                  .filter(\n                    (transaction, i) =>\n                      new Date(transaction.date) <= date &&\n                      selected.includes(i),\n                  )\n                  .map(getInvestmentTransactionValue({ date, rates }))\n                  .filter(Boolean)\n                  .reduce(\n                    (\n                      result: Record<string, number>,\n                      { value, investment_id },\n                    ) =>\n                      Object.assign(result, {\n                        [investment_id]: (result[investment_id] || 0) + value,\n                      }),\n                    {},\n                  ),\n              ).map(([investment_id, value]) => ({\n                date,\n                group: names[investment_id],\n                value,\n              })),\n            )\n            .flat()}\n        />\n        <Chart\n          list={[...Array(DAYS)]\n            .map((_, i) =>\n              sub(new Date(), {\n                days: i,\n              }),\n            )\n            .reverse()\n            .map((date) =>\n              Object.entries(\n                transactions\n                  .filter(\n                    (transaction, i) =>\n                      new Date(transaction.date) <= date &&\n                      selected.includes(i),\n                  )\n                  .map(getInvestmentTransactionValue({ date, rates }))\n                  .filter(Boolean)\n                  .reduce(\n                    (result, { value }, i) =>\n                      Object.assign(result, {\n                        [i]: value,\n                      }),\n                    {},\n                  ),\n              ).map(([group, value], i, list) =>\n                ((value2) => ({\n                  date,\n                  group,\n                  value: value + value2,\n                  value2,\n                }))(\n                  list\n                    .slice(0, i)\n                    .reduce((result, [_, value]) => result + value, 0),\n                ),\n              ),\n            )\n            .flat()}\n          type=\"area\"\n          legend\n        />\n        <Transactions\n          transactions={transactions}\n          rates={rates}\n          names={names}\n          selected={selected}\n          setSelected={setSelected}\n        />\n      </SyncZoomProvider>\n      <DonutChart\n        list={Object.entries(\n          transactions\n            .filter((_, i) => selected.includes(i))\n            .reduce(\n              (list: Record<number, number>, item) =>\n                Object.assign(list, {\n                  [item.investment_id]:\n                    (list[item.investment_id] || 0) + item.value,\n                }),\n              {},\n            ),\n        )\n          .map(([investment_id, value]) => ({\n            label: names[investment_id],\n            value,\n          }))\n          .sort((a, b) => b.value - a.value)}\n      />\n      {/* <pre>{JSON.stringify(metas, null, 2)}</pre> */}\n      {/* <pre>{JSON.stringify(list.slice(0, 5), null, 2)}</pre> */}\n    </div>\n  );\n}\n\nexport default function Section() {\n  return (\n    <div className={styles.Section}>\n      <h2>Quotes</h2>\n      <Data />\n    </div>\n  );\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.D4hghWDR6tislQFHDqDO{position:relative;padding:2em}.D4hghWDR6tislQFHDqDO svg{display:block;width:100%;height:300px;background:#f7f7f7;overflow:visible}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/DonutChart/styles.module.scss\"],\"names\":[],\"mappings\":\"AAAA,sBACE,iBAAA,CACA,WAAA,CAEA,0BACE,aAAA,CACA,UAAA,CACA,YAAA,CACA,kBAAA,CACA,gBAAA\",\"sourcesContent\":[\".Chart {\\n  position: relative;\\n  padding: 2em;\\n\\n  svg {\\n    display: block;\\n    width: 100%;\\n    height: 300px;\\n    background: #f7f7f7;\\n    overflow: visible;\\n\\n    //   rect.selection {\\n    //     stroke: none;\\n    //   }\\n  }\\n\\n  // .Tooltip {\\n  //   position: absolute;\\n  // }\\n}\\n// .Tooltip {\\n//   background: white;\\n//   border: 1px solid lightgray;\\n//   color: orange;\\n//   padding: 0.25em;\\n// }\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Chart\": `D4hghWDR6tislQFHDqDO`\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `._ESpGSPPpzgrCHtLDC15{color:purple}.TdrVPL_ZKxEpsGqtgAKw,.XpEtlXAz0qkmc2pUZelh{font-family:Arial,Helvetica,sans-serif;font-size:.7em}.TdrVPL_ZKxEpsGqtgAKw table,.XpEtlXAz0qkmc2pUZelh table{border-collapse:collapse}.TdrVPL_ZKxEpsGqtgAKw table tr:hover,.XpEtlXAz0qkmc2pUZelh table tr:hover{background-color:#e0e0e0}.TdrVPL_ZKxEpsGqtgAKw tr:nth-child(even),.XpEtlXAz0qkmc2pUZelh tr:nth-child(even){background-color:#f7f7f7}.TdrVPL_ZKxEpsGqtgAKw th,.TdrVPL_ZKxEpsGqtgAKw td,.XpEtlXAz0qkmc2pUZelh th,.XpEtlXAz0qkmc2pUZelh td{padding:.25em}.B5XUoft7ajzWeLY9QZQ9{clear:both;padding:.5em 0;border:2px solid rgba(0,0,0,0);margin:.5em}.MXCudOGdPDTJtcb0KFtk{color:#000;text-align:right;width:4.5em}.MXCudOGdPDTJtcb0KFtk.oGGbruZcUCrKnRswgvhX{color:blue}.MXCudOGdPDTJtcb0KFtk.LFTPI4HvrN257b34VKog{color:green}.MXCudOGdPDTJtcb0KFtk.LFTPI4HvrN257b34VKog::before{content:\"↖\"}.MXCudOGdPDTJtcb0KFtk.IYciZuUEzLYtaU3GzLql{color:red}.MXCudOGdPDTJtcb0KFtk.IYciZuUEzLYtaU3GzLql::before{content:\"↘\"}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/containers/Quotes/styles.module.scss\"],\"names\":[],\"mappings\":\"AAAA,sBAAA,YACE,CAAA,4CAEF,sCAEE,CAAA,cACA,CAAA,wDACA,wBACE,CAAA,0EAEE,wBACE,CAAA,kFAKJ,wBACE,CAAA,oGAGJ,aAEE,CAAA,sBAGJ,UACE,CAAA,cACA,CAAA,8BACA,CAAA,WACA,CAAA,sBAEF,UACE,CAAA,gBACA,CAAA,WACA,CAAA,2CACA,UACE,CAAA,2CAEF,WACE,CAAA,mDACA,WACE,CAAA,2CAGJ,SACE,CAAA,mDACA,WACE\",\"sourcesContent\":[\".Section {\\n  color: purple;\\n}\\n.Investments,\\n.Transactions {\\n  font-family: Arial, Helvetica, sans-serif;\\n  font-size: 0.7em;\\n  table {\\n    border-collapse: collapse;\\n    tr {\\n      &:hover {\\n        background-color: #e0e0e0;\\n      }\\n    }\\n  }\\n  tr {\\n    &:nth-child(even) {\\n      background-color: #f7f7f7;\\n    }\\n  }\\n  th,\\n  td {\\n    padding: 0.25em;\\n  }\\n}\\n.Row {\\n  clear: both;\\n  padding: 0.5em 0;\\n  border: 2px solid transparent;\\n  margin: 0.5em;\\n}\\n.Percent {\\n  color: black;\\n  text-align: right;\\n  width: 4.5em;\\n  &.eq {\\n    color: blue;\\n  }\\n  &.gt {\\n    color: green;\\n    &::before {\\n      content: \\\"\\\\2196\\\";\\n    }\\n  }\\n  &.lt {\\n    color: red;\\n    &::before {\\n      content: \\\"\\\\2198\\\";\\n    }\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Section\": `_ESpGSPPpzgrCHtLDC15`,\n\t\"Investments\": `TdrVPL_ZKxEpsGqtgAKw`,\n\t\"Transactions\": `XpEtlXAz0qkmc2pUZelh`,\n\t\"Row\": `B5XUoft7ajzWeLY9QZQ9`,\n\t\"Percent\": `MXCudOGdPDTJtcb0KFtk`,\n\t\"eq\": `oGGbruZcUCrKnRswgvhX`,\n\t\"gt\": `LFTPI4HvrN257b34VKog`,\n\t\"lt\": `IYciZuUEzLYtaU3GzLql`\n};\nexport default ___CSS_LOADER_EXPORT___;\n","import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    return operate(function (source, subscriber) {\n        var activeTask = null;\n        var lastValue = null;\n        var lastTime = null;\n        var emit = function () {\n            if (activeTask) {\n                activeTask.unsubscribe();\n                activeTask = null;\n                var value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        function emitWhenIdle() {\n            var targetTime = lastTime + dueTime;\n            var now = scheduler.now();\n            if (now < targetTime) {\n                activeTask = this.schedule(undefined, targetTime - now);\n                subscriber.add(activeTask);\n                return;\n            }\n            emit();\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            lastValue = value;\n            lastTime = scheduler.now();\n            if (!activeTask) {\n                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n                subscriber.add(activeTask);\n            }\n        }, function () {\n            emit();\n            subscriber.complete();\n        }, undefined, function () {\n            lastValue = activeTask = null;\n        }));\n    });\n}\n//# sourceMappingURL=debounceTime.js.map","import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function distinctUntilChanged(comparator, keySelector) {\n    if (keySelector === void 0) { keySelector = identity; }\n    comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n    return operate(function (source, subscriber) {\n        var previousKey;\n        var first = true;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var currentKey = keySelector(value);\n            if (first || !comparator(previousKey, currentKey)) {\n                first = false;\n                previousKey = currentKey;\n                subscriber.next(value);\n            }\n        }));\n    });\n}\nfunction defaultCompare(a, b) {\n    return a === b;\n}\n//# sourceMappingURL=distinctUntilChanged.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function map(project, thisArg) {\n    return operate(function (source, subscriber) {\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            subscriber.next(project.call(thisArg, value, index++));\n        }));\n    });\n}\n//# sourceMappingURL=map.js.map","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be added.\n *\n * @returns The new date with the months added\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n *\n * // Add one month to 30 January 2023:\n * const result = addMonths(new Date(2023, 0, 30), 1)\n * //=> Tue Feb 28 2023 00:00:00\n */\nexport function addMonths(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  const dayOfMonth = _date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  const endOfDesiredMonth = constructFrom(date, _date.getTime());\n  endOfDesiredMonth.setMonth(_date.getMonth() + amount + 1, 0);\n  const daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    _date.setFullYear(\n      endOfDesiredMonth.getFullYear(),\n      endOfDesiredMonth.getMonth(),\n      dayOfMonth,\n    );\n    return _date;\n  }\n}\n\n// Fallback for modularized imports:\nexport default addMonths;\n","import { subDays } from \"./subDays.mjs\";\nimport { subMonths } from \"./subMonths.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns The new date with the seconds subtracted\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\nexport function sub(date, duration) {\n  const {\n    years = 0,\n    months = 0,\n    weeks = 0,\n    days = 0,\n    hours = 0,\n    minutes = 0,\n    seconds = 0,\n  } = duration;\n\n  // Subtract years and months\n  const dateWithoutMonths = subMonths(date, months + years * 12);\n\n  // Subtract weeks and days\n  const dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7);\n\n  // Subtract hours, minutes and seconds\n  const minutestoSub = minutes + hours * 60;\n  const secondstoSub = seconds + minutestoSub * 60;\n  const mstoSub = secondstoSub * 1000;\n  const finalDate = constructFrom(date, dateWithoutDays.getTime() - mstoSub);\n\n  return finalDate;\n}\n\n// Fallback for modularized imports:\nexport default sub;\n","import { addDays } from \"./addDays.mjs\";\n\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be subtracted.\n *\n * @returns The new date with the days subtracted\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\nexport function subDays(date, amount) {\n  return addDays(date, -amount);\n}\n\n// Fallback for modularized imports:\nexport default subDays;\n","import { addMonths } from \"./addMonths.mjs\";\n\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be subtracted.\n *\n * @returns The new date with the months subtracted\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function subMonths(date, amount) {\n  return addMonths(date, -amount);\n}\n\n// Fallback for modularized imports:\nexport default subMonths;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","c","locals","undefined","Chart","_ref","list","groupRef","useRef","useEffect","createPie","d3","value","d","sort","createArc","innerRadius","outerRadius","colors","data","groupWithData","current","selectAll","exit","remove","groupWithUpdate","enter","append","attr","merge","select","i","concat","centroid","style","text","_ref2","label","React","className","cx","styles","ref","transform","getValueNearDate","values","date","format","sub","days","Percent","isNaN","eq","gt","lt","Intl","NumberFormat","minimumFractionDigits","Math","round","Investments","investments","rates","selected","setSelected","_useState2","_slicedToArray","useState","expanded","setExpanded","useMemo","map","item","_Object$entries$pop2","Object","entries","id","pop","unitValue","_objectSpread","Date","type","checked","length","onChange","useCallback","_ref3","target","_ref4","key","includes","_ref5","filter","href","onClick","e","preventDefault","name","align","months","colSpan","JSON","stringify","getInvestmentTransaction","names","investment_id","units","valueNetto","valueBrutto","Transactions","transactions","quotes","keys","reduce","result","assign","Boolean","_","n","_ref6","quote","_regeneratorRuntime","t","r","prototype","hasOwnProperty","o","defineProperty","Symbol","a","iterator","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","getPrototypeOf","v","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","error","ERA","DAYS","asset","createAsset","fn","_callee","version","res","_context","fetch","json","metas","objects","self","args","arguments","apply","err","_x","getInvestmentTransactionValue","valueDate","unitValueDate","Data","_ref5$version","read","results","investment","_ref7","b","localeCompare","_ref8","_defineProperty","_ref9","_useState4","search","filters","_useState6","queries","setQueries","search$","Subject","subscription","pipe","_ref10","_objectWithoutProperties","_excluded","trim","distinctUntilChanged","debounceTime","subscribe","parse","unsubscribe","console","log","unified","_ref11","getTime","from","_useState8","_useState10","selectedDate","setSelectedDate","_useState12","investmentsSelected","setInvestmentsSelected","_ref12","_ref13","getRelatedValue","formattedDate","SyncZoomProvider","_ref14","_excluded2","group","legend","rule","_ref15","_ref16","_ref17","_ref18","_excluded3","_toConsumableArray","Array","transaction","_ref19","_ref20","_ref21","flat","_ref22","_ref23","value2","_ref24","_ref25","_ref26","DonutChart","_ref27","_ref28","Section","___CSS_LOADER_EXPORT___","module","dueTime","scheduler","source","subscriber","activeTask","lastValue","lastTime","emit","emitWhenIdle","targetTime","now","this","schedule","add","comparator","keySelector","defaultCompare","previousKey","first","currentKey","project","thisArg","index","addDays","amount","_date","NaN","setDate","getDate","addMonths","dayOfMonth","endOfDesiredMonth","setMonth","getMonth","setFullYear","getFullYear","duration","years","weeks","hours","minutes","seconds","dateWithoutDays","subDays","subMonths","mstoSub","constructFrom"],"sourceRoot":""}