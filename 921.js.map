{"version":3,"file":"921.js","mappings":"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","sources":["webpack://@dev/web/./src/components/DonutChart/styles.module.scss?5910","webpack://@dev/web/./src/components/DonutChart/index.tsx","webpack://@dev/web/./src/containers/Quotes/styles.module.scss?b887","webpack://@dev/web/./src/containers/Quotes/Investments.tsx","webpack://@dev/web/./src/containers/Quotes/Transactions.tsx","webpack://@dev/web/./src/containers/Quotes/data.ts","webpack://@dev/web/./src/containers/Quotes/index.tsx","webpack://@dev/web/../../node_modules/date-fns/addDays.js","webpack://@dev/web/./src/containers/Quotes/styles.module.scss","webpack://@dev/web/./src/components/DonutChart/styles.module.scss","webpack://@dev/web/../../node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js","webpack://@dev/web/../../node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js","webpack://@dev/web/../../node_modules/date-fns/sub.js","webpack://@dev/web/../../node_modules/date-fns/subDays.js","webpack://@dev/web/../../node_modules/date-fns/subMonths.js","webpack://@dev/web/../../node_modules/rxjs/dist/esm5/internal/operators/map.js","webpack://@dev/web/../../node_modules/date-fns/addMonths.js"],"sourcesContent":["\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { type PieArcDatum } from \"d3-shape\";\nimport cx from \"classnames\";\nimport styles from \"./styles.module.scss\";\n\n// https://medium.com/react-courses/drawing-basic-charts-with-react-typescript-d3-part-ii-pie-scatter-chart-da4fc653b715\ntype Data = {\n  label: string;\n  value: number;\n};\n\nexport default function Chart({\n  list,\n}: {\n  list: { label: string; value: number }[];\n}) {\n  const groupRef = useRef<SVGGeometryElement>(null);\n  const innerRadius = 60;\n  const outerRadius = 130;\n\n  // https://codesandbox.io/s/r5wp0v08xq\n  useEffect(() => {\n    const createPie = d3\n      .pie<Data>()\n      .value((d) => d.value)\n      .sort(null);\n    const createArc = d3\n      .arc<PieArcDatum<Data>>()\n      .innerRadius(innerRadius)\n      .outerRadius(outerRadius);\n    const colors = d3.scaleOrdinal(d3.schemeCategory10);\n\n    const data = createPie(list);\n    const group = d3.select(groupRef.current);\n    const groupWithData = group.selectAll(\"g.arc\").data(data);\n\n    groupWithData.exit().remove();\n\n    const groupWithUpdate = groupWithData\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"arc\");\n\n    const path = groupWithUpdate\n      .append(\"path\")\n      .merge(groupWithData.select(\"path.arc\"));\n\n    path\n      .attr(\"class\", \"arc\")\n      .attr(\"d\", createArc)\n      .attr(\"fill\", (d, i) => colors(i));\n\n    const text = groupWithUpdate\n      .append(\"text\")\n      .merge(groupWithData.select(\"text\"));\n\n    text\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"alignment-baseline\", \"middle\")\n      .attr(\"transform\", (d) => `translate(${createArc.centroid(d)})`)\n      .style(\"fill\", \"white\")\n      .style(\"font-size\", 10)\n      .text(({ data }) => `${data.label} (${data.value})`);\n  }, [list]);\n\n  return (\n    <div className={cx(styles.Chart)}>\n      <svg>\n        <g\n          ref={groupRef}\n          transform={`translate(${outerRadius + 20} ${outerRadius + 20})`}\n        />\n      </svg>\n    </div>\n  );\n}\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  type ChangeEventHandler,\n  type MouseEventHandler,\n  useCallback,\n  useMemo,\n  useState,\n} from \"react\";\nimport { format, sub } from \"date-fns\";\nimport cx from \"classnames\";\nimport styles from \"./styles.module.scss\";\n\nfunction getValueNearDate(values, date) {\n  for (let i = 0; i < 5; i++) {\n    const value = values[format(date, \"yyyy-MM-dd\")];\n    if (value) {\n      return value;\n    }\n    date = sub(date, {\n      days: 1,\n    });\n  }\n}\n\nexport function Percent({ value }: { value: number }) {\n  return isNaN(value) ? null : (\n    <div\n      className={cx(\n        styles.Percent,\n        value === 0 ? styles.eq : value > 0 ? styles.gt : styles.lt\n      )}\n    >\n      {new Intl.NumberFormat(\"pl-PL\", {\n        minimumFractionDigits: 2,\n      }).format(Math.round(100 * 100 * value) / 100)}\n      &nbsp;%\n    </div>\n  );\n}\n\nexport default function Investments({\n  investments,\n  rates,\n  selected,\n  setSelected,\n}: {\n  investments: { id: number; name: string }[];\n  rates: Record<string, Record<string, number>>;\n  selected: number[];\n  setSelected: Function;\n}) {\n  const [expanded, setExpanded] = useState<number[]>([]);\n  const list = useMemo(\n    () =>\n      investments.map((item) => {\n        const [date, unitValue] = Object.entries(rates[item.id]).pop();\n\n        return {\n          ...item,\n          date: new Date(date),\n          unitValue,\n        };\n      }),\n    [rates]\n  );\n\n  return (\n    <div className={styles.Investments}>\n      <h3>Investments</h3>\n      <table>\n        <tbody>\n          <tr>\n            <th>\n              <input\n                type=\"checkbox\"\n                checked={selected.length === investments.length}\n                onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                  ({ target }) =>\n                    setSelected(\n                      target.checked ? investments.map(({ id }) => id) : []\n                    ),\n                  []\n                )}\n              />\n            </th>\n            <th>Fundusz</th>\n            <th>Data wyceny jednostki</th>\n            <th>Wycena jednostki</th>\n            <th>7d</th>\n            <th>14d</th>\n            <th>1m</th>\n            <th>3m</th>\n            <th>6m</th>\n            <th>12m</th>\n            <th>24m</th>\n            <th>36m</th>\n          </tr>\n          {list.map((item, i) =>\n            [\n              <tr key={i}>\n                <td>\n                  <input\n                    type=\"checkbox\"\n                    checked={selected.includes(item.id)}\n                    onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                      ({ target }) =>\n                        setSelected((selected: number[]) =>\n                          !target.checked\n                            ? selected.filter((id) => id !== item.id)\n                            : selected.concat(item.id)\n                        ),\n                      []\n                    )}\n                  />\n                </td>\n                <td>\n                  <a\n                    href=\"#\"\n                    onClick={useCallback<MouseEventHandler>(\n                      (e) => (\n                        e.preventDefault(),\n                        setExpanded((expanded) =>\n                          expanded.includes(item.id)\n                            ? expanded.filter((id) => id !== item.id)\n                            : expanded.concat(item.id)\n                        )\n                      ),\n                      []\n                    )}\n                  >\n                    {item.name}\n                  </a>\n                </td>\n                <td align=\"right\">{format(item.date, \"dd.MM.yyyy\")}</td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(item.unitValue)}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            days: 7,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            days: 14,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            months: 1,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        rates[item.id][\n                          format(\n                            sub(item.date, {\n                              months: 3,\n                            }),\n                            \"yyyy-MM-dd\"\n                          )\n                        ] -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            months: 6,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            months: 12,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            months: 24,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            months: 36,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n              </tr>,\n            ].concat(\n              expanded.includes(item.id)\n                ? [\n                    <tr key={`${i}-details`}>\n                      <td></td>\n                      <td colSpan={11}>\n                        <pre>{JSON.stringify(item, null, 2)}</pre>\n                        <pre>{JSON.stringify(rates[item.id], null, 2)}</pre>\n                      </td>\n                    </tr>,\n                  ]\n                : []\n            )\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React, {\n  type ChangeEventHandler,\n  type MouseEventHandler,\n  useCallback,\n  useMemo,\n  useState,\n} from \"react\";\nimport { format } from \"date-fns\";\nimport { Percent } from \"./Investments\";\nimport styles from \"./styles.module.scss\";\n\nconst getInvestmentTransaction =\n  ({\n    names,\n    rates,\n  }: {\n    names: Record<string, string>;\n    rates: Record<string, Record<string, number>>;\n  }) =>\n  ({\n    date,\n    investment_id,\n    value,\n  }: {\n    date: string;\n    investment_id: number;\n    value: number;\n  }) => {\n    if (!rates[investment_id]) {\n      return null;\n    }\n    const unitValue = rates[investment_id][date];\n    const round = 1000;\n    const units = Math.round((round * value) / unitValue) / round;\n    return {\n      name: names[investment_id],\n      date: new Date(date),\n      investment_id,\n      value: Math.round(100 * units * unitValue) / 100,\n      valueNetto: value,\n      valueBrutto: value,\n      unitValue,\n      units,\n    };\n  };\n\nexport default function Transactions({\n  transactions,\n  rates,\n  names,\n  selected,\n  setSelected,\n}: {\n  transactions: { date: string; investment_id: number; value: number }[];\n  names: Record<string, string>;\n  rates: Record<string, Record<string, number>>;\n  selected: number[];\n  setSelected: Function;\n}) {\n  const [expanded, setExpanded] = useState<number[]>([]);\n\n  const quotes = useMemo(\n    () =>\n      Object.keys(rates).reduce((result, id) => {\n        const [date, unitValue] = Object.entries(rates[id]).pop();\n\n        return Object.assign(result, {\n          [id]: {\n            date: new Date(date),\n            unitValue,\n          },\n        });\n      }, {}),\n    [rates]\n  );\n\n  const list = useMemo(\n    () =>\n      transactions\n        .map(getInvestmentTransaction({ names, rates }))\n        .filter(Boolean),\n    [transactions, names, rates]\n  );\n\n  return (\n    <div className={styles.Transactions}>\n      <h3>Transactions</h3>\n      <table>\n        <tbody>\n          <tr>\n            <th>\n              <input\n                type=\"checkbox\"\n                checked={selected.length === transactions.length}\n                onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                  ({ target }) =>\n                    setSelected(\n                      target.checked ? transactions.map((_, i) => i) : []\n                    ),\n                  []\n                )}\n              />\n            </th>\n            <th>Fundusz</th>\n            <th>Kwota transakcji</th>\n            <th>Liczba jednostek</th>\n            <th>Data wyceny jednostki</th>\n            <th>Wycena jednostki</th>\n            <th>Wartość</th>\n            <th>Data wyceny jednostki</th>\n            <th>Wycena jednostki</th>\n            <th>Wartość</th>\n            <th>%</th>\n          </tr>\n          {list.map((item, i) =>\n            [\n              <tr key={i}>\n                <td>\n                  <input\n                    type=\"checkbox\"\n                    checked={selected.includes(i)}\n                    onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                      ({ target }) =>\n                        setSelected((selected: number[]) =>\n                          !target.checked\n                            ? selected.filter((n) => n !== i)\n                            : selected.concat(i)\n                        ),\n                      []\n                    )}\n                  />\n                </td>\n                <td>\n                  <a\n                    href=\"#\"\n                    onClick={useCallback<MouseEventHandler>(\n                      (e) => (\n                        e.preventDefault(),\n                        setExpanded((expanded) =>\n                          expanded.includes(i)\n                            ? expanded.filter((n) => n !== i)\n                            : expanded.concat(i)\n                        )\n                      ),\n                      []\n                    )}\n                  >\n                    {item.name}\n                  </a>\n                </td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(item.valueNetto)}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {}).format(item.units)}\n                </td>\n                <td align=\"right\">{format(item.date, \"dd.MM.yyyy\")}</td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(item.unitValue)}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(item.value)}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  {format(quotes[item.investment_id].date, \"dd.MM.yyyy\")}\n                </td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(quotes[item.investment_id].unitValue)}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(\n                    Math.round(\n                      100 * quotes[item.investment_id].unitValue * item.units\n                    ) / 100\n                  )}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      quotes[item.investment_id].unitValue / item.unitValue - 1\n                    }\n                  />\n                </td>\n              </tr>,\n            ].concat(\n              expanded.includes(i)\n                ? [\n                    <tr key={`${i}-details`}>\n                      <td></td>\n                      <td colSpan={10}>\n                        {/* <pre>{JSON.stringify(rates[investment_id], null, 2)}</pre> */}\n                        <pre>\n                          {`Data wyceny jednostki\n${format(item.date, \"dd.MM.yyyy\")}\nData realizacji\n${format(item.date, \"dd.MM.yyyy\")}\nKwota transakcji netto w PLN\n${new Intl.NumberFormat(\"pl-PL\", {\n  minimumFractionDigits: 2,\n}).format(item.valueNetto)} PLN\nKwota transakcji brutto w PLN\n${new Intl.NumberFormat(\"pl-PL\", {\n  minimumFractionDigits: 2,\n}).format(item.valueBrutto)} PLN\nIlość jednostek po transakcji\n${new Intl.NumberFormat(\"pl-PL\", {}).format(item.units)}\nWartość jednostki w dniu wyceny\n${new Intl.NumberFormat(\"pl-PL\", {\n  minimumFractionDigits: 2,\n}).format(item.unitValue)} PLN\nWartość\n${new Intl.NumberFormat(\"pl-PL\", {\n  minimumFractionDigits: 2,\n}).format(item.value)} PLN\nOpłata manipulacyjna\n0,00 PLN / 0 %`}\n                        </pre>\n                      </td>\n                    </tr>,\n                  ]\n                : []\n            )\n          )}\n        </tbody>\n        <tfoot>\n          {[\n            list\n              .filter((_, i) => selected.includes(i))\n              .reduce(\n                ({ units, value, valueNetto, quote }, item) => ({\n                  units: units + item.units,\n                  value: value + item.value,\n                  valueNetto: valueNetto + item.valueNetto,\n                  quote:\n                    quote +\n                    Math.round(\n                      100 * quotes[item.investment_id].unitValue * item.units\n                    ) /\n                      100,\n                }),\n                {\n                  units: 0,\n                  value: 0,\n                  valueNetto: 0,\n                  quote: 0,\n                }\n              ),\n          ].map((item, i) => (\n            <tr key={i}>\n              <td></td>\n              <td></td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.valueNetto)}\n                &nbsp;PLN\n              </td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.units)}\n              </td>\n              <td colSpan={2}></td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.value)}\n                &nbsp;PLN\n              </td>\n              <td colSpan={2}></td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.quote)}\n                &nbsp;PLN\n              </td>\n              <td align=\"right\">\n                <Percent value={item.quote / item.value - 1} />\n              </td>\n            </tr>\n          ))}\n        </tfoot>\n      </table>\n    </div>\n  );\n}\n","export const transactions = [\n  { date: \"2018-12-28\", investment_id: 44, value: 5331.6 }, // PKO Zabezpieczenia Emerytalnego 2050\n  { date: \"2019-12-30\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n  { date: \"2020-12-28\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n  { date: \"2021-12-15\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n  { date: \"2022-01-03\", investment_id: 75, value: 1000 }, // PKO Akcji Rynku Amerykańskiego\n  { date: \"2022-02-01\", investment_id: 75, value: 1000 }, // PKO Akcji Rynku Amerykańskiego\n  { date: \"2022-02-28\", investment_id: 34, value: 1000 }, // PKO Surowców Globalny\n  { date: \"2022-03-08\", investment_id: 35, value: 1000 }, // PKO Technologii i Innowacji Globalny\n  { date: \"2022-03-11\", investment_id: 10, value: 1000 }, // PKO Akcji Nowa Europa\n  { date: \"2022-03-21\", investment_id: 36, value: 1000 }, // PKO Dóbr Luksusowych Globalny\n  { date: \"2022-03-21\", investment_id: 37, value: 1000 }, // PKO Infrastruktury i Budownictwa Globalny\n  { date: \"2022-04-01\", investment_id: 34, value: 1000 }, // PKO Surowców Globalny\n  { date: \"2022-04-11\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n  { date: \"2022-04-26\", investment_id: 34, value: 1000 }, // PKO Surowców Globalny\n  { date: \"2022-05-05\", investment_id: 75, value: 1000 }, // PKO Akcji Rynku Amerykańskiego\n  { date: \"2022-06-20\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n  { date: \"2022-06-23\", investment_id: 10, value: -907.62 }, // PKO Akcji Nowa Europa\n  { date: \"2022-06-23\", investment_id: 33, value: 907.62 }, // PKO Akcji Plus\n  { date: \"2022-07-29\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n  { date: \"2022-08-29\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n  { date: \"2023-06-29\", investment_id: 79, value: 1000 }, // PKO Akcji Rynku Złota\n  { date: \"2023-12-11\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n  { date: \"2024-08-20\", investment_id: 35, value: 1000 }, // PKO Technologii i Innowacji Globalny\n];\n","import React, {\n  type ChangeEventHandler,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { Subject } from \"rxjs\";\nimport { debounceTime, distinctUntilChanged, map } from \"rxjs/operators\";\nimport { createAsset } from \"use-asset\";\nimport { format, sub } from \"date-fns\";\nimport Chart, { SyncZoomProvider } from \"../../components/ZoomableLineChart\";\nimport DonutChart from \"../../components/DonutChart\";\nimport Investments from \"./Investments\";\nimport Transactions from \"./Transactions\";\nimport * as data from \"./data\";\nimport styles from \"./styles.module.scss\";\n\nimport type { Meta, Item } from \"@dev/cli/src/services/QuotesService/types\";\n\nconst ERA = 24 * 3600 * 1000;\nconst DAYS = 1200;\n\n// https://github.com/pmndrs/use-asset#dealing-with-async-assets\nconst asset = createAsset(async (version) => {\n  const res = await fetch(`api/quotes/data.json?${version}`);\n  return await res.json().then(({ metas, objects }) => ({\n    metas,\n    objects: objects.concat([\n      {\n        date: \"2022-06-23\",\n        // \"roi\": -29.59,\n        // \"unit\": \"A\",\n        // value: 70.55,\n        value: 68.65,\n        // \"id\": \"investments-10-2022-06-22\",\n        investment_id: 10,\n      },\n    ]),\n  }));\n});\n\nconst getInvestmentTransactionValue =\n  ({\n    date: valueDate,\n    rates,\n  }: {\n    date: Date;\n    rates: Record<string, Record<string, number>>;\n  }) =>\n  ({\n    date,\n    investment_id,\n    value,\n  }: {\n    date: string;\n    investment_id: number;\n    value: number;\n  }) => {\n    if (!rates[investment_id]) {\n      return null;\n    }\n    const unitValue = rates[investment_id][date];\n    const round = 1000;\n    const units = Math.round((round * value) / unitValue) / round;\n    const unitValueDate = rates[investment_id][format(valueDate, \"yyyy-MM-dd\")];\n    return rates[investment_id][format(valueDate, \"yyyy-MM-dd\")]\n      ? {\n          investment_id,\n          value: Math.round(100 * units * unitValueDate) / 100,\n        }\n      : null;\n  };\n\nfunction Data({ version = \"v1\" }) {\n  const { metas, objects: results } = asset.read(version) as {\n    metas: Meta[];\n    objects: Item[];\n  };\n\n  const [transactions] = useState(() => data.transactions);\n\n  const options = useMemo(\n    () => ({\n      investment: metas\n        .map(({ id, name }) => ({ id, name }))\n        .sort((a, b) => a.name.localeCompare(b.name)),\n    }),\n    [results],\n  );\n\n  const names = useMemo(\n    () =>\n      metas.reduce(\n        (result: Record<string, string>, { id, name }) =>\n          Object.assign(result, {\n            [id]: name,\n          }),\n        {},\n      ),\n    [metas],\n  );\n\n  const rates = useMemo(\n    () =>\n      results\n        .sort((a, b) => a.date.localeCompare(b.date))\n        .reduce(\n          (\n            result: Record<string, Record<string, number>>,\n            { date, investment_id, value },\n          ) =>\n            Object.assign(result, {\n              [investment_id]: Object.assign(result[investment_id] || {}, {\n                [date]: value,\n              }),\n            }),\n          {},\n        ),\n    [results],\n  );\n\n  const [filters, setFilters] = useState(() => ({\n    // investment: options.investment[0].id,\n    // related: options.investment[0].id,\n    search: \"\",\n  }));\n\n  const [queries, setQueries] = useState(() => filters);\n\n  const search$ = useMemo(() => new Subject<any>(), []);\n\n  useEffect(() => {\n    const subscription = search$\n      .pipe(\n        map(({ search, ...filters }) =>\n          JSON.stringify({ ...queries, ...filters, search: search.trim() }),\n        ),\n        distinctUntilChanged(),\n        debounceTime(400),\n      )\n      .subscribe((filters) =>\n        setQueries((queries) => ({ ...queries, ...JSON.parse(filters) })),\n      );\n    return () => subscription.unsubscribe();\n  }, [search$]);\n\n  useEffect(() => {\n    search$.next(filters);\n  }, [filters]);\n\n  console.log({ metas, options, filters, results, rates });\n\n  const unified = useMemo(\n    () =>\n      results\n        .map(({ investment_id, value, date }) => ({\n          investment_id,\n          value,\n          date: new Date(date),\n        }))\n        .sort(\n          (a, b) => new Date(a.date).getTime() - new Date(b.date).getTime(),\n        ),\n    [results],\n  );\n\n  const from = useMemo(\n    () => unified[unified.length - 1].date.getTime() - ERA * 2000,\n    [unified],\n  );\n\n  const [selected, setSelected] = useState<number[]>(() =>\n    transactions.map((_, i) => i),\n  );\n  const [selectedDate, setSelectedDate] = useState<string>(() =>\n    format(unified[unified.length - 1].date.getTime(), \"yyyy-MM-dd\"),\n  );\n  const [investmentsSelected, setInvestmentsSelected] = useState<number[]>(\n    () => [34, 35, 44, 79],\n  );\n\n  const list = useMemo(\n    () =>\n      unified\n        .filter(({ investment_id }) =>\n          investmentsSelected.includes(investment_id),\n        )\n        .filter(({ date }) => date.getTime() > from),\n    [unified, investmentsSelected],\n  );\n\n  // const relation = useMemo(\n  //   () =>\n  //     Object.entries(\n  //       unified.reduce(\n  //         (result, { date, investment_id, value }) =>\n  //           Object.assign(result, {\n  //             [format(date, \"yyyy-MM-dd\")]: Object.assign(\n  //               result[format(date, \"yyyy-MM-dd\")] || {},\n  //               {\n  //                 [investment_id]: value,\n  //               }\n  //             ),\n  //           }),\n  //         {}\n  //       )\n  //     )\n  //       .map(([date, investments]) => ({\n  //         date: new Date(date),\n  //         value: investments[filters.investment] / investments[filters.related],\n  //       }))\n  //       .filter(({ date }) => date.getTime() > from),\n  //   [unified, filters]\n  // );\n\n  const getRelatedValue = useCallback((values, date, selectedDate) => {\n    const formattedDate = format(date, \"yyyy-MM-dd\");\n    if (values[formattedDate] && values[selectedDate]) {\n      return values[formattedDate] / values[selectedDate];\n    }\n    return 0;\n  }, []);\n\n  return (\n    <div>\n      <SyncZoomProvider>\n        {/* <fieldset>\n          <label>\n            <span>Investment</span>\n            <select\n              value={filters.investment}\n              onChange={useCallback<ChangeEventHandler<HTMLSelectElement>>(\n                ({ target }) =>\n                  setFilters((filters) => ({\n                    ...filters,\n                    investment: Number(target.value),\n                  })),\n                []\n              )}\n            >\n              {options.investment.map(({ id, name }) => (\n                <option key={id} value={id}>\n                  {name}\n                </option>\n              ))}\n            </select>\n          </label>\n        </fieldset> */}\n        <Chart\n          list={list.map(({ investment_id, ...item }) => ({\n            ...item,\n            group: names[investment_id],\n          }))}\n          legend\n          rule\n        />\n        <fieldset>\n          {/* <label>\n            <span>Related</span>\n            <select\n              value={filters.related}\n              onChange={useCallback<ChangeEventHandler<HTMLSelectElement>>(\n                ({ target }) =>\n                  setFilters((filters) => ({\n                    ...filters,\n                    related: Number(target.value),\n                  })),\n                []\n              )}\n            >\n              {options.investment.map(({ id, name }) => (\n                <option key={id} value={id}>\n                  {name}\n                </option>\n              ))}\n            </select>\n          </label>\n          <button\n            onClick={useCallback<MouseEventHandler>(\n              (e) => (\n                e.preventDefault(),\n                setFilters(({ investment, related, ...filters }) => ({\n                  ...filters,\n                  investment: related,\n                  related: investment,\n                }))\n              ),\n              []\n            )}\n          >\n            reverse\n          </button> */}\n          <label>\n            <span>Date</span>\n            <input\n              type=\"date\"\n              value={selectedDate}\n              onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                ({ target }) => setSelectedDate(target.value),\n                [],\n              )}\n            />\n          </label>\n        </fieldset>\n        <Chart\n          list={unified\n            .filter(({ investment_id }) =>\n              investmentsSelected.includes(investment_id),\n            )\n            .filter(({ date }) => date.getTime() > from)\n\n            .map(({ investment_id, ...item }) => ({\n              ...item,\n              value: getRelatedValue(\n                rates[investment_id],\n                item.date,\n                selectedDate,\n              ),\n              group: names[investment_id],\n            }))}\n          rule\n        />\n        {/* <fieldset>\n          <label>\n            <span>Search</span>\n            <input\n              type=\"search\"\n              value={filters.search}\n              onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                ({ target }) =>\n                  setFilters((filters) => ({\n                    ...filters,\n                    search: target.value,\n                  })),\n                []\n              )}\n            />\n          </label>\n        </fieldset> */}\n        <Investments\n          investments={options.investment}\n          rates={rates}\n          selected={investmentsSelected}\n          setSelected={setInvestmentsSelected}\n        />\n      </SyncZoomProvider>\n      <SyncZoomProvider>\n        <Chart\n          list={[...Array(DAYS)]\n            .map((_, i) =>\n              sub(new Date(), {\n                days: i,\n              }),\n            )\n            .reverse()\n            .map((date, i) =>\n              Object.entries(\n                transactions\n                  .filter(\n                    (transaction, i) =>\n                      new Date(transaction.date) <= date &&\n                      selected.includes(i),\n                  )\n                  .map(getInvestmentTransactionValue({ date, rates }))\n                  .filter(Boolean)\n                  .reduce(\n                    (\n                      result: Record<string, number>,\n                      { value, investment_id },\n                    ) =>\n                      Object.assign(result, {\n                        [investment_id]: (result[investment_id] || 0) + value,\n                      }),\n                    {},\n                  ),\n              ).map(([investment_id, value]) => ({\n                date,\n                group: names[investment_id],\n                value,\n              })),\n            )\n            .flat()}\n        />\n        <Chart\n          list={[...Array(DAYS)]\n            .map((_, i) =>\n              sub(new Date(), {\n                days: i,\n              }),\n            )\n            .reverse()\n            .map((date) =>\n              Object.entries(\n                transactions\n                  .filter(\n                    (transaction, i) =>\n                      new Date(transaction.date) <= date &&\n                      selected.includes(i),\n                  )\n                  .map(getInvestmentTransactionValue({ date, rates }))\n                  .filter(Boolean)\n                  .reduce(\n                    (result, { value }, i) =>\n                      Object.assign(result, {\n                        [i]: value,\n                      }),\n                    {},\n                  ),\n              ).map(([group, value], i, list) =>\n                ((value2) => ({\n                  date,\n                  group,\n                  value: value + value2,\n                  value2,\n                }))(\n                  list\n                    .slice(0, i)\n                    .reduce((result, [_, value]) => result + value, 0),\n                ),\n              ),\n            )\n            .flat()}\n          type=\"area\"\n          legend\n        />\n        <Transactions\n          transactions={transactions}\n          rates={rates}\n          names={names}\n          selected={selected}\n          setSelected={setSelected}\n        />\n      </SyncZoomProvider>\n      <DonutChart\n        list={Object.entries(\n          transactions\n            .filter((_, i) => selected.includes(i))\n            .reduce(\n              (list: Record<number, number>, item) =>\n                Object.assign(list, {\n                  [item.investment_id]:\n                    (list[item.investment_id] || 0) + item.value,\n                }),\n              {},\n            ),\n        )\n          .map(([investment_id, value]) => ({\n            label: names[investment_id],\n            value,\n          }))\n          .sort((a, b) => b.value - a.value)}\n      />\n      {/* <pre>{JSON.stringify(metas, null, 2)}</pre> */}\n      {/* <pre>{JSON.stringify(list.slice(0, 5), null, 2)}</pre> */}\n    </div>\n  );\n}\n\nexport default function Section() {\n  return (\n    <div className={styles.Section}>\n      <h2>Quotes</h2>\n      <Data />\n    </div>\n  );\n}\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link addDays} function options.\n */\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n * @param options - An object with options\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount, options) {\n  const _date = toDate(date, options?.in);\n  if (isNaN(amount)) return constructFrom(options?.in || date, NaN);\n\n  // If 0 days, no-op to avoid changing times in the hour before end of DST\n  if (!amount) return _date;\n\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `._ESpGSPPpzgrCHtLDC15{color:purple}.TdrVPL_ZKxEpsGqtgAKw,.XpEtlXAz0qkmc2pUZelh{font-family:Arial,Helvetica,sans-serif;font-size:.7em}.TdrVPL_ZKxEpsGqtgAKw table,.XpEtlXAz0qkmc2pUZelh table{border-collapse:collapse}.TdrVPL_ZKxEpsGqtgAKw table tr:hover,.XpEtlXAz0qkmc2pUZelh table tr:hover{background-color:#e0e0e0}.TdrVPL_ZKxEpsGqtgAKw tr:nth-child(even),.XpEtlXAz0qkmc2pUZelh tr:nth-child(even){background-color:#f7f7f7}.TdrVPL_ZKxEpsGqtgAKw th,.TdrVPL_ZKxEpsGqtgAKw td,.XpEtlXAz0qkmc2pUZelh th,.XpEtlXAz0qkmc2pUZelh td{padding:.25em}.B5XUoft7ajzWeLY9QZQ9{clear:both;padding:.5em 0;border:2px solid rgba(0,0,0,0);margin:.5em}.MXCudOGdPDTJtcb0KFtk{color:#000;text-align:right;width:4.5em}.MXCudOGdPDTJtcb0KFtk.oGGbruZcUCrKnRswgvhX{color:blue}.MXCudOGdPDTJtcb0KFtk.LFTPI4HvrN257b34VKog{color:green}.MXCudOGdPDTJtcb0KFtk.LFTPI4HvrN257b34VKog::before{content:\"↖\"}.MXCudOGdPDTJtcb0KFtk.IYciZuUEzLYtaU3GzLql{color:red}.MXCudOGdPDTJtcb0KFtk.IYciZuUEzLYtaU3GzLql::before{content:\"↘\"}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/containers/Quotes/styles.module.scss\"],\"names\":[],\"mappings\":\"AAAA,sBAAA,YACE,CAAA,4CAEF,sCAEE,CAAA,cACA,CAAA,wDACA,wBACE,CAAA,0EAEE,wBACE,CAAA,kFAKJ,wBACE,CAAA,oGAGJ,aAEE,CAAA,sBAGJ,UACE,CAAA,cACA,CAAA,8BACA,CAAA,WACA,CAAA,sBAEF,UACE,CAAA,gBACA,CAAA,WACA,CAAA,2CACA,UACE,CAAA,2CAEF,WACE,CAAA,mDACA,WACE,CAAA,2CAGJ,SACE,CAAA,mDACA,WACE\",\"sourcesContent\":[\".Section {\\n  color: purple;\\n}\\n.Investments,\\n.Transactions {\\n  font-family: Arial, Helvetica, sans-serif;\\n  font-size: 0.7em;\\n  table {\\n    border-collapse: collapse;\\n    tr {\\n      &:hover {\\n        background-color: #e0e0e0;\\n      }\\n    }\\n  }\\n  tr {\\n    &:nth-child(even) {\\n      background-color: #f7f7f7;\\n    }\\n  }\\n  th,\\n  td {\\n    padding: 0.25em;\\n  }\\n}\\n.Row {\\n  clear: both;\\n  padding: 0.5em 0;\\n  border: 2px solid transparent;\\n  margin: 0.5em;\\n}\\n.Percent {\\n  color: black;\\n  text-align: right;\\n  width: 4.5em;\\n  &.eq {\\n    color: blue;\\n  }\\n  &.gt {\\n    color: green;\\n    &::before {\\n      content: \\\"\\\\2196\\\";\\n    }\\n  }\\n  &.lt {\\n    color: red;\\n    &::before {\\n      content: \\\"\\\\2198\\\";\\n    }\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Section\": `_ESpGSPPpzgrCHtLDC15`,\n\t\"Investments\": `TdrVPL_ZKxEpsGqtgAKw`,\n\t\"Transactions\": `XpEtlXAz0qkmc2pUZelh`,\n\t\"Row\": `B5XUoft7ajzWeLY9QZQ9`,\n\t\"Percent\": `MXCudOGdPDTJtcb0KFtk`,\n\t\"eq\": `oGGbruZcUCrKnRswgvhX`,\n\t\"gt\": `LFTPI4HvrN257b34VKog`,\n\t\"lt\": `IYciZuUEzLYtaU3GzLql`\n};\nmodule.exports = ___CSS_LOADER_EXPORT___;\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.D4hghWDR6tislQFHDqDO{position:relative;padding:2em}.D4hghWDR6tislQFHDqDO svg{display:block;width:100%;height:300px;background:#f7f7f7;overflow:visible}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/DonutChart/styles.module.scss\"],\"names\":[],\"mappings\":\"AAAA,sBACE,iBAAA,CACA,WAAA,CAEA,0BACE,aAAA,CACA,UAAA,CACA,YAAA,CACA,kBAAA,CACA,gBAAA\",\"sourcesContent\":[\".Chart {\\n  position: relative;\\n  padding: 2em;\\n\\n  svg {\\n    display: block;\\n    width: 100%;\\n    height: 300px;\\n    background: #f7f7f7;\\n    overflow: visible;\\n\\n    //   rect.selection {\\n    //     stroke: none;\\n    //   }\\n  }\\n\\n  // .Tooltip {\\n  //   position: absolute;\\n  // }\\n}\\n// .Tooltip {\\n//   background: white;\\n//   border: 1px solid lightgray;\\n//   color: orange;\\n//   padding: 0.25em;\\n// }\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Chart\": `D4hghWDR6tislQFHDqDO`\n};\nmodule.exports = ___CSS_LOADER_EXPORT___;\n","import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function distinctUntilChanged(comparator, keySelector) {\n    if (keySelector === void 0) { keySelector = identity; }\n    comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n    return operate(function (source, subscriber) {\n        var previousKey;\n        var first = true;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var currentKey = keySelector(value);\n            if (first || !comparator(previousKey, currentKey)) {\n                first = false;\n                previousKey = currentKey;\n                subscriber.next(value);\n            }\n        }));\n    });\n}\nfunction defaultCompare(a, b) {\n    return a === b;\n}\n//# sourceMappingURL=distinctUntilChanged.js.map","import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    return operate(function (source, subscriber) {\n        var activeTask = null;\n        var lastValue = null;\n        var lastTime = null;\n        var emit = function () {\n            if (activeTask) {\n                activeTask.unsubscribe();\n                activeTask = null;\n                var value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        function emitWhenIdle() {\n            var targetTime = lastTime + dueTime;\n            var now = scheduler.now();\n            if (now < targetTime) {\n                activeTask = this.schedule(undefined, targetTime - now);\n                subscriber.add(activeTask);\n                return;\n            }\n            emit();\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            lastValue = value;\n            lastTime = scheduler.now();\n            if (!activeTask) {\n                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n                subscriber.add(activeTask);\n            }\n        }, function () {\n            emit();\n            subscriber.complete();\n        }, undefined, function () {\n            lastValue = activeTask = null;\n        }));\n    });\n}\n//# sourceMappingURL=debounceTime.js.map","import { constructFrom } from \"./constructFrom.js\";\nimport { subDays } from \"./subDays.js\";\nimport { subMonths } from \"./subMonths.js\";\n\n/**\n * The {@link sub} function options.\n */\n\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n * @param options - An object with options\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns The new date with the seconds subtracted\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\nexport function sub(date, duration, options) {\n  const {\n    years = 0,\n    months = 0,\n    weeks = 0,\n    days = 0,\n    hours = 0,\n    minutes = 0,\n    seconds = 0,\n  } = duration;\n\n  const withoutMonths = subMonths(date, months + years * 12, options);\n  const withoutDays = subDays(withoutMonths, days + weeks * 7, options);\n\n  const minutesToSub = minutes + hours * 60;\n  const secondsToSub = seconds + minutesToSub * 60;\n  const msToSub = secondsToSub * 1000;\n\n  return constructFrom(options?.in || date, +withoutDays - msToSub);\n}\n\n// Fallback for modularized imports:\nexport default sub;\n","import { addDays } from \"./addDays.js\";\n\n/**\n * The {@link subDays} function options.\n */\n\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be subtracted.\n * @param options - An object with options\n *\n * @returns The new date with the days subtracted\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\nexport function subDays(date, amount, options) {\n  return addDays(date, -amount, options);\n}\n\n// Fallback for modularized imports:\nexport default subDays;\n","import { addMonths } from \"./addMonths.js\";\n\n/**\n * The subMonths function options.\n */\n\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be subtracted.\n * @param options - An object with options\n *\n * @returns The new date with the months subtracted\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function subMonths(date, amount, options) {\n  return addMonths(date, -amount, options);\n}\n\n// Fallback for modularized imports:\nexport default subMonths;\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function map(project, thisArg) {\n    return operate(function (source, subscriber) {\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            subscriber.next(project.call(thisArg, value, index++));\n        }));\n    });\n}\n//# sourceMappingURL=map.js.map","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link addMonths} function options.\n */\n\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be added.\n * @param options - The options object\n *\n * @returns The new date with the months added\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n *\n * // Add one month to 30 January 2023:\n * const result = addMonths(new Date(2023, 0, 30), 1)\n * //=> Tue Feb 28 2023 00:00:00\n */\nexport function addMonths(date, amount, options) {\n  const _date = toDate(date, options?.in);\n  if (isNaN(amount)) return constructFrom(options?.in || date, NaN);\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  const dayOfMonth = _date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  const endOfDesiredMonth = constructFrom(options?.in || date, _date.getTime());\n  endOfDesiredMonth.setMonth(_date.getMonth() + amount + 1, 0);\n  const daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    _date.setFullYear(\n      endOfDesiredMonth.getFullYear(),\n      endOfDesiredMonth.getMonth(),\n      dayOfMonth,\n    );\n    return _date;\n  }\n}\n\n// Fallback for modularized imports:\nexport default addMonths;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","Chart","_ref","list","groupRef","useRef","useEffect","createPie","d3","value","d","sort","createArc","innerRadius","outerRadius","colors","data","groupWithData","current","selectAll","exit","remove","groupWithUpdate","enter","append","attr","merge","select","i","concat","centroid","style","text","_ref2","label","React","className","cx","styles","ref","transform","getValueNearDate","values","date","format","sub","days","Percent","isNaN","Intl","NumberFormat","minimumFractionDigits","Math","round","Investments","investments","rates","selected","setSelected","_useState2","_slicedToArray","useState","expanded","setExpanded","useMemo","map","item","_Object$entries$pop2","Object","entries","id","pop","unitValue","_objectSpread","Date","type","checked","length","onChange","useCallback","_ref3","target","_ref4","key","includes","_ref5","filter","href","onClick","e","preventDefault","name","align","months","colSpan","JSON","stringify","getInvestmentTransaction","names","investment_id","units","valueNetto","valueBrutto","Transactions","transactions","quotes","keys","reduce","result","assign","Boolean","_","n","_ref6","quote","t","r","Symbol","iterator","o","toStringTag","c","prototype","Generator","u","create","_regeneratorDefine2","f","p","y","G","v","a","bind","l","TypeError","call","done","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","enumerable","configurable","writable","_invoke","_OverloadYield","k","asyncGeneratorStep","Promise","resolve","then","ERA","DAYS","asset","createAsset","_regeneratorRuntime","mark","_callee","version","res","wrap","_context","prev","next","fetch","sent","json","metas","objects","abrupt","stop","arguments","apply","_next","_throw","_x","getInvestmentTransactionValue","valueDate","unitValueDate","Data","_ref5$version","read","results","investment","_ref7","b","localeCompare","_ref8","_defineProperty","_ref9","_useState4","search","filters","_useState6","queries","setQueries","search$","Subject","subscription","pipe","_ref0","_objectWithoutProperties","_excluded","trim","distinctUntilChanged","debounceTime","subscribe","parse","unsubscribe","console","log","unified","_ref1","getTime","from","_useState8","_useState0","selectedDate","setSelectedDate","_useState10","investmentsSelected","setInvestmentsSelected","_ref10","_ref11","getRelatedValue","formattedDate","SyncZoomProvider","_ref12","_excluded2","group","legend","rule","_ref13","_ref14","_ref15","_ref16","_excluded3","_toConsumableArray","Array","reverse","transaction","_ref17","_ref18","_ref19","flat","_ref20","_ref21","value2","_ref22","slice","_ref23","_ref24","DonutChart","_ref25","_ref26","Section","addDays","amount","_date","in","NaN","setDate","getDate","___CSS_LOADER_API_SOURCEMAP_IMPORT___","___CSS_LOADER_EXPORT___","___CSS_LOADER_API_IMPORT___","push","module","locals","exports","comparator","keySelector","defaultCompare","source","subscriber","previousKey","first","currentKey","dueTime","scheduler","activeTask","lastValue","lastTime","emit","emitWhenIdle","targetTime","now","this","schedule","add","complete","duration","years","weeks","hours","minutes","seconds","withoutDays","subDays","addMonths","subMonths","msToSub","constructFrom","project","thisArg","index","dayOfMonth","endOfDesiredMonth","setMonth","getMonth","setFullYear","getFullYear"],"sourceRoot":""}