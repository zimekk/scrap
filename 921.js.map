{"version":3,"file":"921.js","mappings":"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","sources":["webpack://@dev/web/./src/components/DonutChart/styles.module.scss?5910","webpack://@dev/web/./src/components/DonutChart/index.tsx","webpack://@dev/web/./src/containers/Quotes/styles.module.scss?b887","webpack://@dev/web/./src/containers/Quotes/Investments.tsx","webpack://@dev/web/./src/containers/Quotes/Transactions.tsx","webpack://@dev/web/./src/containers/Quotes/data.ts","webpack://@dev/web/./src/containers/Quotes/index.tsx","webpack://@dev/web/./src/components/DonutChart/styles.module.scss","webpack://@dev/web/./src/containers/Quotes/styles.module.scss","webpack://@dev/web/../../node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js","webpack://@dev/web/../../node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js","webpack://@dev/web/../../node_modules/rxjs/dist/esm5/internal/operators/map.js","webpack://@dev/web/../../node_modules/date-fns/addDays.mjs","webpack://@dev/web/../../node_modules/date-fns/addMonths.mjs","webpack://@dev/web/../../node_modules/date-fns/sub.mjs","webpack://@dev/web/../../node_modules/date-fns/subDays.mjs","webpack://@dev/web/../../node_modules/date-fns/subMonths.mjs"],"sourcesContent":["\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { type PieArcDatum } from \"d3-shape\";\nimport cx from \"classnames\";\nimport styles from \"./styles.module.scss\";\n\n// https://medium.com/react-courses/drawing-basic-charts-with-react-typescript-d3-part-ii-pie-scatter-chart-da4fc653b715\ntype Data = {\n  label: string;\n  value: number;\n};\n\nexport default function Chart({\n  list,\n}: {\n  list: { label: string; value: number }[];\n}) {\n  const groupRef = useRef<SVGGeometryElement>(null);\n  const innerRadius = 60;\n  const outerRadius = 130;\n\n  // https://codesandbox.io/s/r5wp0v08xq\n  useEffect(() => {\n    const createPie = d3\n      .pie<Data>()\n      .value((d) => d.value)\n      .sort(null);\n    const createArc = d3\n      .arc<PieArcDatum<Data>>()\n      .innerRadius(innerRadius)\n      .outerRadius(outerRadius);\n    const colors = d3.scaleOrdinal(d3.schemeCategory10);\n\n    const data = createPie(list);\n    const group = d3.select(groupRef.current);\n    const groupWithData = group.selectAll(\"g.arc\").data(data);\n\n    groupWithData.exit().remove();\n\n    const groupWithUpdate = groupWithData\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"arc\");\n\n    const path = groupWithUpdate\n      .append(\"path\")\n      .merge(groupWithData.select(\"path.arc\"));\n\n    path\n      .attr(\"class\", \"arc\")\n      .attr(\"d\", createArc)\n      .attr(\"fill\", (d, i) => colors(i));\n\n    const text = groupWithUpdate\n      .append(\"text\")\n      .merge(groupWithData.select(\"text\"));\n\n    text\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"alignment-baseline\", \"middle\")\n      .attr(\"transform\", (d) => `translate(${createArc.centroid(d)})`)\n      .style(\"fill\", \"white\")\n      .style(\"font-size\", 10)\n      .text(({ data }) => `${data.label} (${data.value})`);\n  }, [list]);\n\n  return (\n    <div className={cx(styles.Chart)}>\n      <svg>\n        <g\n          ref={groupRef}\n          transform={`translate(${outerRadius + 20} ${outerRadius + 20})`}\n        />\n      </svg>\n    </div>\n  );\n}\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  type ChangeEventHandler,\n  type MouseEventHandler,\n  useCallback,\n  useMemo,\n  useState,\n} from \"react\";\nimport { format, sub } from \"date-fns\";\nimport cx from \"classnames\";\nimport styles from \"./styles.module.scss\";\n\nfunction getValueNearDate(values, date) {\n  for (let i = 0; i < 5; i++) {\n    const value = values[format(date, \"yyyy-MM-dd\")];\n    if (value) {\n      return value;\n    }\n    date = sub(date, {\n      days: 1,\n    });\n  }\n}\n\nexport function Percent({ value }: { value: number }) {\n  return isNaN(value) ? null : (\n    <div\n      className={cx(\n        styles.Percent,\n        value === 0 ? styles.eq : value > 0 ? styles.gt : styles.lt\n      )}\n    >\n      {new Intl.NumberFormat(\"pl-PL\", {\n        minimumFractionDigits: 2,\n      }).format(Math.round(100 * 100 * value) / 100)}\n      &nbsp;%\n    </div>\n  );\n}\n\nexport default function Investments({\n  investments,\n  rates,\n  selected,\n  setSelected,\n}: {\n  investments: { id: number; name: string }[];\n  rates: Record<string, Record<string, number>>;\n  selected: number[];\n  setSelected: Function;\n}) {\n  const [expanded, setExpanded] = useState<number[]>([]);\n  const list = useMemo(\n    () =>\n      investments.map((item) => {\n        const [date, unitValue] = Object.entries(rates[item.id]).pop();\n\n        return {\n          ...item,\n          date: new Date(date),\n          unitValue,\n        };\n      }),\n    [rates]\n  );\n\n  return (\n    <div className={styles.Investments}>\n      <h3>Investments</h3>\n      <table>\n        <tbody>\n          <tr>\n            <th>\n              <input\n                type=\"checkbox\"\n                checked={selected.length === investments.length}\n                onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                  ({ target }) =>\n                    setSelected(\n                      target.checked ? investments.map(({ id }) => id) : []\n                    ),\n                  []\n                )}\n              />\n            </th>\n            <th>Fundusz</th>\n            <th>Data wyceny jednostki</th>\n            <th>Wycena jednostki</th>\n            <th>7d</th>\n            <th>14d</th>\n            <th>1m</th>\n            <th>3m</th>\n            <th>6m</th>\n            <th>12m</th>\n            <th>24m</th>\n            <th>36m</th>\n          </tr>\n          {list.map((item, i) =>\n            [\n              <tr key={i}>\n                <td>\n                  <input\n                    type=\"checkbox\"\n                    checked={selected.includes(item.id)}\n                    onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                      ({ target }) =>\n                        setSelected((selected: number[]) =>\n                          !target.checked\n                            ? selected.filter((id) => id !== item.id)\n                            : selected.concat(item.id)\n                        ),\n                      []\n                    )}\n                  />\n                </td>\n                <td>\n                  <a\n                    href=\"#\"\n                    onClick={useCallback<MouseEventHandler>(\n                      (e) => (\n                        e.preventDefault(),\n                        setExpanded((expanded) =>\n                          expanded.includes(item.id)\n                            ? expanded.filter((id) => id !== item.id)\n                            : expanded.concat(item.id)\n                        )\n                      ),\n                      []\n                    )}\n                  >\n                    {item.name}\n                  </a>\n                </td>\n                <td align=\"right\">{format(item.date, \"dd.MM.yyyy\")}</td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(item.unitValue)}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            days: 7,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            days: 14,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            months: 1,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        rates[item.id][\n                          format(\n                            sub(item.date, {\n                              months: 3,\n                            }),\n                            \"yyyy-MM-dd\"\n                          )\n                        ] -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            months: 6,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            months: 12,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            months: 24,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      item.unitValue /\n                        getValueNearDate(\n                          rates[item.id],\n                          sub(item.date, {\n                            months: 36,\n                          })\n                        ) -\n                      1\n                    }\n                  />\n                </td>\n              </tr>,\n            ].concat(\n              expanded.includes(item.id)\n                ? [\n                    <tr key={`${i}-details`}>\n                      <td></td>\n                      <td colSpan={11}>\n                        <pre>{JSON.stringify(item, null, 2)}</pre>\n                        <pre>{JSON.stringify(rates[item.id], null, 2)}</pre>\n                      </td>\n                    </tr>,\n                  ]\n                : []\n            )\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React, {\n  type ChangeEventHandler,\n  type MouseEventHandler,\n  useCallback,\n  useMemo,\n  useState,\n} from \"react\";\nimport { format } from \"date-fns\";\nimport { Percent } from \"./Investments\";\nimport styles from \"./styles.module.scss\";\n\nconst getInvestmentTransaction =\n  ({\n    names,\n    rates,\n  }: {\n    names: Record<string, string>;\n    rates: Record<string, Record<string, number>>;\n  }) =>\n  ({\n    date,\n    investment_id,\n    value,\n  }: {\n    date: string;\n    investment_id: number;\n    value: number;\n  }) => {\n    if (!rates[investment_id]) {\n      return null;\n    }\n    const unitValue = rates[investment_id][date];\n    const round = 1000;\n    const units = Math.round((round * value) / unitValue) / round;\n    return {\n      name: names[investment_id],\n      date: new Date(date),\n      investment_id,\n      value: Math.round(100 * units * unitValue) / 100,\n      valueNetto: value,\n      valueBrutto: value,\n      unitValue,\n      units,\n    };\n  };\n\nexport default function Transactions({\n  transactions,\n  rates,\n  names,\n  selected,\n  setSelected,\n}: {\n  transactions: { date: string; investment_id: number; value: number }[];\n  names: Record<string, string>;\n  rates: Record<string, Record<string, number>>;\n  selected: number[];\n  setSelected: Function;\n}) {\n  const [expanded, setExpanded] = useState<number[]>([]);\n\n  const quotes = useMemo(\n    () =>\n      Object.keys(rates).reduce((result, id) => {\n        const [date, unitValue] = Object.entries(rates[id]).pop();\n\n        return Object.assign(result, {\n          [id]: {\n            date: new Date(date),\n            unitValue,\n          },\n        });\n      }, {}),\n    [rates]\n  );\n\n  const list = useMemo(\n    () =>\n      transactions\n        .map(getInvestmentTransaction({ names, rates }))\n        .filter(Boolean),\n    [transactions, names, rates]\n  );\n\n  return (\n    <div className={styles.Transactions}>\n      <h3>Transactions</h3>\n      <table>\n        <tbody>\n          <tr>\n            <th>\n              <input\n                type=\"checkbox\"\n                checked={selected.length === transactions.length}\n                onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                  ({ target }) =>\n                    setSelected(\n                      target.checked ? transactions.map((_, i) => i) : []\n                    ),\n                  []\n                )}\n              />\n            </th>\n            <th>Fundusz</th>\n            <th>Kwota transakcji</th>\n            <th>Liczba jednostek</th>\n            <th>Data wyceny jednostki</th>\n            <th>Wycena jednostki</th>\n            <th>Wartość</th>\n            <th>Data wyceny jednostki</th>\n            <th>Wycena jednostki</th>\n            <th>Wartość</th>\n            <th>%</th>\n          </tr>\n          {list.map((item, i) =>\n            [\n              <tr key={i}>\n                <td>\n                  <input\n                    type=\"checkbox\"\n                    checked={selected.includes(i)}\n                    onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                      ({ target }) =>\n                        setSelected((selected: number[]) =>\n                          !target.checked\n                            ? selected.filter((n) => n !== i)\n                            : selected.concat(i)\n                        ),\n                      []\n                    )}\n                  />\n                </td>\n                <td>\n                  <a\n                    href=\"#\"\n                    onClick={useCallback<MouseEventHandler>(\n                      (e) => (\n                        e.preventDefault(),\n                        setExpanded((expanded) =>\n                          expanded.includes(i)\n                            ? expanded.filter((n) => n !== i)\n                            : expanded.concat(i)\n                        )\n                      ),\n                      []\n                    )}\n                  >\n                    {item.name}\n                  </a>\n                </td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(item.valueNetto)}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {}).format(item.units)}\n                </td>\n                <td align=\"right\">{format(item.date, \"dd.MM.yyyy\")}</td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(item.unitValue)}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(item.value)}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  {format(quotes[item.investment_id].date, \"dd.MM.yyyy\")}\n                </td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(quotes[item.investment_id].unitValue)}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  {new Intl.NumberFormat(\"pl-PL\", {\n                    minimumFractionDigits: 2,\n                  }).format(\n                    Math.round(\n                      100 * quotes[item.investment_id].unitValue * item.units\n                    ) / 100\n                  )}\n                  &nbsp;PLN\n                </td>\n                <td align=\"right\">\n                  <Percent\n                    value={\n                      quotes[item.investment_id].unitValue / item.unitValue - 1\n                    }\n                  />\n                </td>\n              </tr>,\n            ].concat(\n              expanded.includes(i)\n                ? [\n                    <tr key={`${i}-details`}>\n                      <td></td>\n                      <td colSpan={10}>\n                        {/* <pre>{JSON.stringify(rates[investment_id], null, 2)}</pre> */}\n                        <pre>\n                          {`Data wyceny jednostki\n${format(item.date, \"dd.MM.yyyy\")}\nData realizacji\n${format(item.date, \"dd.MM.yyyy\")}\nKwota transakcji netto w PLN\n${new Intl.NumberFormat(\"pl-PL\", {\n  minimumFractionDigits: 2,\n}).format(item.valueNetto)} PLN\nKwota transakcji brutto w PLN\n${new Intl.NumberFormat(\"pl-PL\", {\n  minimumFractionDigits: 2,\n}).format(item.valueBrutto)} PLN\nIlość jednostek po transakcji\n${new Intl.NumberFormat(\"pl-PL\", {}).format(item.units)}\nWartość jednostki w dniu wyceny\n${new Intl.NumberFormat(\"pl-PL\", {\n  minimumFractionDigits: 2,\n}).format(item.unitValue)} PLN\nWartość\n${new Intl.NumberFormat(\"pl-PL\", {\n  minimumFractionDigits: 2,\n}).format(item.value)} PLN\nOpłata manipulacyjna\n0,00 PLN / 0 %`}\n                        </pre>\n                      </td>\n                    </tr>,\n                  ]\n                : []\n            )\n          )}\n        </tbody>\n        <tfoot>\n          {[\n            list\n              .filter((_, i) => selected.includes(i))\n              .reduce(\n                ({ units, value, valueNetto, quote }, item) => ({\n                  units: units + item.units,\n                  value: value + item.value,\n                  valueNetto: valueNetto + item.valueNetto,\n                  quote:\n                    quote +\n                    Math.round(\n                      100 * quotes[item.investment_id].unitValue * item.units\n                    ) /\n                      100,\n                }),\n                {\n                  units: 0,\n                  value: 0,\n                  valueNetto: 0,\n                  quote: 0,\n                }\n              ),\n          ].map((item, i) => (\n            <tr key={i}>\n              <td></td>\n              <td></td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.valueNetto)}\n                &nbsp;PLN\n              </td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.units)}\n              </td>\n              <td colSpan={2}></td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.value)}\n                &nbsp;PLN\n              </td>\n              <td colSpan={2}></td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.quote)}\n                &nbsp;PLN\n              </td>\n              <td align=\"right\">\n                <Percent value={item.quote / item.value - 1} />\n              </td>\n            </tr>\n          ))}\n        </tfoot>\n      </table>\n    </div>\n  );\n}\n","export const transactions = [\n  { date: \"2018-12-28\", investment_id: 44, value: 5331.6 }, // PKO Zabezpieczenia Emerytalnego 2050\n  { date: \"2019-12-30\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n  { date: \"2020-12-28\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n  { date: \"2021-12-15\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n  { date: \"2022-01-03\", investment_id: 75, value: 1000 }, // PKO Akcji Rynku Amerykańskiego\n  { date: \"2022-02-01\", investment_id: 75, value: 1000 }, // PKO Akcji Rynku Amerykańskiego\n  { date: \"2022-02-28\", investment_id: 34, value: 1000 }, // PKO Surowców Globalny\n  { date: \"2022-03-08\", investment_id: 35, value: 1000 }, // PKO Technologii i Innowacji Globalny\n  { date: \"2022-03-11\", investment_id: 10, value: 1000 }, // PKO Akcji Nowa Europa\n  { date: \"2022-03-21\", investment_id: 36, value: 1000 }, // PKO Dóbr Luksusowych Globalny\n  { date: \"2022-03-21\", investment_id: 37, value: 1000 }, // PKO Infrastruktury i Budownictwa Globalny\n  { date: \"2022-04-01\", investment_id: 34, value: 1000 }, // PKO Surowców Globalny\n  { date: \"2022-04-11\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n  { date: \"2022-04-26\", investment_id: 34, value: 1000 }, // PKO Surowców Globalny\n  { date: \"2022-05-05\", investment_id: 75, value: 1000 }, // PKO Akcji Rynku Amerykańskiego\n  { date: \"2022-06-20\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n  { date: \"2022-06-23\", investment_id: 10, value: -907.62 }, // PKO Akcji Nowa Europa\n  { date: \"2022-06-23\", investment_id: 33, value: 907.62 }, // PKO Akcji Plus\n  { date: \"2022-07-29\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n  { date: \"2022-08-29\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n  { date: \"2023-06-29\", investment_id: 79, value: 1000 }, // PKO Akcji Rynku Złota\n  { date: \"2023-12-11\", investment_id: 44, value: 1000 }, // PKO Zabezpieczenia Emerytalnego 2050\n];\n","import React, {\n  type ChangeEventHandler,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { Subject } from \"rxjs\";\nimport { debounceTime, distinctUntilChanged, map } from \"rxjs/operators\";\nimport { createAsset } from \"use-asset\";\nimport { format, sub } from \"date-fns\";\nimport Chart, { SyncZoomProvider } from \"../../components/ZoomableLineChart\";\nimport DonutChart from \"../../components/DonutChart\";\nimport Investments from \"./Investments\";\nimport Transactions from \"./Transactions\";\nimport * as data from \"./data\";\nimport styles from \"./styles.module.scss\";\n\nimport type { Meta, Item } from \"@dev/cli/src/services/QuotesService/types\";\n\nconst ERA = 24 * 3600 * 1000;\nconst DAYS = 1200;\n\n// https://github.com/pmndrs/use-asset#dealing-with-async-assets\nconst asset = createAsset(async (version) => {\n  const res = await fetch(`api/quotes/data.json?${version}`);\n  return await res.json().then(({ metas, objects }) => ({\n    metas,\n    objects: objects.concat([\n      {\n        date: \"2022-06-23\",\n        // \"roi\": -29.59,\n        // \"unit\": \"A\",\n        // value: 70.55,\n        value: 68.65,\n        // \"id\": \"investments-10-2022-06-22\",\n        investment_id: 10,\n      },\n    ]),\n  }));\n});\n\nconst getInvestmentTransactionValue =\n  ({\n    date: valueDate,\n    rates,\n  }: {\n    date: Date;\n    rates: Record<string, Record<string, number>>;\n  }) =>\n  ({\n    date,\n    investment_id,\n    value,\n  }: {\n    date: string;\n    investment_id: number;\n    value: number;\n  }) => {\n    if (!rates[investment_id]) {\n      return null;\n    }\n    const unitValue = rates[investment_id][date];\n    const round = 1000;\n    const units = Math.round((round * value) / unitValue) / round;\n    const unitValueDate = rates[investment_id][format(valueDate, \"yyyy-MM-dd\")];\n    return rates[investment_id][format(valueDate, \"yyyy-MM-dd\")]\n      ? {\n          investment_id,\n          value: Math.round(100 * units * unitValueDate) / 100,\n        }\n      : null;\n  };\n\nfunction Data({ version = \"v1\" }) {\n  const { metas, objects: results } = asset.read(version) as {\n    metas: Meta[];\n    objects: Item[];\n  };\n\n  const [transactions] = useState(() => data.transactions);\n\n  const options = useMemo(\n    () => ({\n      investment: metas\n        .map(({ id, name }) => ({ id, name }))\n        .sort((a, b) => a.name.localeCompare(b.name)),\n    }),\n    [results],\n  );\n\n  const names = useMemo(\n    () =>\n      metas.reduce(\n        (result: Record<string, string>, { id, name }) =>\n          Object.assign(result, {\n            [id]: name,\n          }),\n        {},\n      ),\n    [metas],\n  );\n\n  const rates = useMemo(\n    () =>\n      results\n        .sort((a, b) => a.date.localeCompare(b.date))\n        .reduce(\n          (\n            result: Record<string, Record<string, number>>,\n            { date, investment_id, value },\n          ) =>\n            Object.assign(result, {\n              [investment_id]: Object.assign(result[investment_id] || {}, {\n                [date]: value,\n              }),\n            }),\n          {},\n        ),\n    [results],\n  );\n\n  const [filters, setFilters] = useState(() => ({\n    // investment: options.investment[0].id,\n    // related: options.investment[0].id,\n    search: \"\",\n  }));\n\n  const [queries, setQueries] = useState(() => filters);\n\n  const search$ = useMemo(() => new Subject<any>(), []);\n\n  useEffect(() => {\n    const subscription = search$\n      .pipe(\n        map(({ search, ...filters }) =>\n          JSON.stringify({ ...queries, ...filters, search: search.trim() }),\n        ),\n        distinctUntilChanged(),\n        debounceTime(400),\n      )\n      .subscribe((filters) =>\n        setQueries((queries) => ({ ...queries, ...JSON.parse(filters) })),\n      );\n    return () => subscription.unsubscribe();\n  }, [search$]);\n\n  useEffect(() => {\n    search$.next(filters);\n  }, [filters]);\n\n  console.log({ metas, options, filters, results, rates });\n\n  const unified = useMemo(\n    () =>\n      results\n        .map(({ investment_id, value, date }) => ({\n          investment_id,\n          value,\n          date: new Date(date),\n        }))\n        .sort(\n          (a, b) => new Date(a.date).getTime() - new Date(b.date).getTime(),\n        ),\n    [results],\n  );\n\n  const from = useMemo(\n    () => unified[unified.length - 1].date.getTime() - ERA * 2000,\n    [unified],\n  );\n\n  const [selected, setSelected] = useState<number[]>(() =>\n    transactions.map((_, i) => i),\n  );\n  const [selectedDate, setSelectedDate] = useState<string>(() =>\n    format(unified[unified.length - 1].date.getTime(), \"yyyy-MM-dd\"),\n  );\n  const [investmentsSelected, setInvestmentsSelected] = useState<number[]>(\n    () => [34, 35, 44, 79],\n  );\n\n  const list = useMemo(\n    () =>\n      unified\n        .filter(({ investment_id }) =>\n          investmentsSelected.includes(investment_id),\n        )\n        .filter(({ date }) => date.getTime() > from),\n    [unified, investmentsSelected],\n  );\n\n  // const relation = useMemo(\n  //   () =>\n  //     Object.entries(\n  //       unified.reduce(\n  //         (result, { date, investment_id, value }) =>\n  //           Object.assign(result, {\n  //             [format(date, \"yyyy-MM-dd\")]: Object.assign(\n  //               result[format(date, \"yyyy-MM-dd\")] || {},\n  //               {\n  //                 [investment_id]: value,\n  //               }\n  //             ),\n  //           }),\n  //         {}\n  //       )\n  //     )\n  //       .map(([date, investments]) => ({\n  //         date: new Date(date),\n  //         value: investments[filters.investment] / investments[filters.related],\n  //       }))\n  //       .filter(({ date }) => date.getTime() > from),\n  //   [unified, filters]\n  // );\n\n  const getRelatedValue = useCallback((values, date, selectedDate) => {\n    const formattedDate = format(date, \"yyyy-MM-dd\");\n    if (values[formattedDate] && values[selectedDate]) {\n      return values[formattedDate] / values[selectedDate];\n    }\n    return 0;\n  }, []);\n\n  return (\n    <div>\n      <SyncZoomProvider>\n        {/* <fieldset>\n          <label>\n            <span>Investment</span>\n            <select\n              value={filters.investment}\n              onChange={useCallback<ChangeEventHandler<HTMLSelectElement>>(\n                ({ target }) =>\n                  setFilters((filters) => ({\n                    ...filters,\n                    investment: Number(target.value),\n                  })),\n                []\n              )}\n            >\n              {options.investment.map(({ id, name }) => (\n                <option key={id} value={id}>\n                  {name}\n                </option>\n              ))}\n            </select>\n          </label>\n        </fieldset> */}\n        <Chart\n          list={list.map(({ investment_id, ...item }) => ({\n            ...item,\n            group: names[investment_id],\n          }))}\n          legend\n          rule\n        />\n        <fieldset>\n          {/* <label>\n            <span>Related</span>\n            <select\n              value={filters.related}\n              onChange={useCallback<ChangeEventHandler<HTMLSelectElement>>(\n                ({ target }) =>\n                  setFilters((filters) => ({\n                    ...filters,\n                    related: Number(target.value),\n                  })),\n                []\n              )}\n            >\n              {options.investment.map(({ id, name }) => (\n                <option key={id} value={id}>\n                  {name}\n                </option>\n              ))}\n            </select>\n          </label>\n          <button\n            onClick={useCallback<MouseEventHandler>(\n              (e) => (\n                e.preventDefault(),\n                setFilters(({ investment, related, ...filters }) => ({\n                  ...filters,\n                  investment: related,\n                  related: investment,\n                }))\n              ),\n              []\n            )}\n          >\n            reverse\n          </button> */}\n          <label>\n            <span>Date</span>\n            <input\n              type=\"date\"\n              value={selectedDate}\n              onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                ({ target }) => setSelectedDate(target.value),\n                [],\n              )}\n            />\n          </label>\n        </fieldset>\n        <Chart\n          list={unified\n            .filter(({ investment_id }) =>\n              investmentsSelected.includes(investment_id),\n            )\n            .filter(({ date }) => date.getTime() > from)\n\n            .map(({ investment_id, ...item }) => ({\n              ...item,\n              value: getRelatedValue(\n                rates[investment_id],\n                item.date,\n                selectedDate,\n              ),\n              group: names[investment_id],\n            }))}\n          rule\n        />\n        {/* <fieldset>\n          <label>\n            <span>Search</span>\n            <input\n              type=\"search\"\n              value={filters.search}\n              onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                ({ target }) =>\n                  setFilters((filters) => ({\n                    ...filters,\n                    search: target.value,\n                  })),\n                []\n              )}\n            />\n          </label>\n        </fieldset> */}\n        <Investments\n          investments={options.investment}\n          rates={rates}\n          selected={investmentsSelected}\n          setSelected={setInvestmentsSelected}\n        />\n      </SyncZoomProvider>\n      <SyncZoomProvider>\n        <Chart\n          list={[...Array(DAYS)]\n            .map((_, i) =>\n              sub(new Date(), {\n                days: i,\n              }),\n            )\n            .reverse()\n            .map((date, i) =>\n              Object.entries(\n                transactions\n                  .filter(\n                    (transaction, i) =>\n                      new Date(transaction.date) <= date &&\n                      selected.includes(i),\n                  )\n                  .map(getInvestmentTransactionValue({ date, rates }))\n                  .filter(Boolean)\n                  .reduce(\n                    (\n                      result: Record<string, number>,\n                      { value, investment_id },\n                    ) =>\n                      Object.assign(result, {\n                        [investment_id]: (result[investment_id] || 0) + value,\n                      }),\n                    {},\n                  ),\n              ).map(([investment_id, value]) => ({\n                date,\n                group: names[investment_id],\n                value,\n              })),\n            )\n            .flat()}\n        />\n        <Chart\n          list={[...Array(DAYS)]\n            .map((_, i) =>\n              sub(new Date(), {\n                days: i,\n              }),\n            )\n            .reverse()\n            .map((date) =>\n              Object.entries(\n                transactions\n                  .filter(\n                    (transaction, i) =>\n                      new Date(transaction.date) <= date &&\n                      selected.includes(i),\n                  )\n                  .map(getInvestmentTransactionValue({ date, rates }))\n                  .filter(Boolean)\n                  .reduce(\n                    (result, { value }, i) =>\n                      Object.assign(result, {\n                        [i]: value,\n                      }),\n                    {},\n                  ),\n              ).map(([group, value], i, list) =>\n                ((value2) => ({\n                  date,\n                  group,\n                  value: value + value2,\n                  value2,\n                }))(\n                  list\n                    .slice(0, i)\n                    .reduce((result, [_, value]) => result + value, 0),\n                ),\n              ),\n            )\n            .flat()}\n          type=\"area\"\n          legend\n        />\n        <Transactions\n          transactions={transactions}\n          rates={rates}\n          names={names}\n          selected={selected}\n          setSelected={setSelected}\n        />\n      </SyncZoomProvider>\n      <DonutChart\n        list={Object.entries(\n          transactions\n            .filter((_, i) => selected.includes(i))\n            .reduce(\n              (list: Record<number, number>, item) =>\n                Object.assign(list, {\n                  [item.investment_id]:\n                    (list[item.investment_id] || 0) + item.value,\n                }),\n              {},\n            ),\n        )\n          .map(([investment_id, value]) => ({\n            label: names[investment_id],\n            value,\n          }))\n          .sort((a, b) => b.value - a.value)}\n      />\n      {/* <pre>{JSON.stringify(metas, null, 2)}</pre> */}\n      {/* <pre>{JSON.stringify(list.slice(0, 5), null, 2)}</pre> */}\n    </div>\n  );\n}\n\nexport default function Section() {\n  return (\n    <div className={styles.Section}>\n      <h2>Quotes</h2>\n      <Data />\n    </div>\n  );\n}\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.D4hghWDR6tislQFHDqDO{position:relative;padding:2em}.D4hghWDR6tislQFHDqDO svg{display:block;width:100%;height:300px;background:#f7f7f7;overflow:visible}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/DonutChart/styles.module.scss\"],\"names\":[],\"mappings\":\"AAAA,sBACE,iBAAA,CACA,WAAA,CAEA,0BACE,aAAA,CACA,UAAA,CACA,YAAA,CACA,kBAAA,CACA,gBAAA\",\"sourcesContent\":[\".Chart {\\n  position: relative;\\n  padding: 2em;\\n\\n  svg {\\n    display: block;\\n    width: 100%;\\n    height: 300px;\\n    background: #f7f7f7;\\n    overflow: visible;\\n\\n    //   rect.selection {\\n    //     stroke: none;\\n    //   }\\n  }\\n\\n  // .Tooltip {\\n  //   position: absolute;\\n  // }\\n}\\n// .Tooltip {\\n//   background: white;\\n//   border: 1px solid lightgray;\\n//   color: orange;\\n//   padding: 0.25em;\\n// }\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Chart\": `D4hghWDR6tislQFHDqDO`\n};\nmodule.exports = ___CSS_LOADER_EXPORT___;\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `._ESpGSPPpzgrCHtLDC15{color:purple}.TdrVPL_ZKxEpsGqtgAKw,.XpEtlXAz0qkmc2pUZelh{font-family:Arial,Helvetica,sans-serif;font-size:.7em}.TdrVPL_ZKxEpsGqtgAKw table,.XpEtlXAz0qkmc2pUZelh table{border-collapse:collapse}.TdrVPL_ZKxEpsGqtgAKw table tr:hover,.XpEtlXAz0qkmc2pUZelh table tr:hover{background-color:#e0e0e0}.TdrVPL_ZKxEpsGqtgAKw tr:nth-child(even),.XpEtlXAz0qkmc2pUZelh tr:nth-child(even){background-color:#f7f7f7}.TdrVPL_ZKxEpsGqtgAKw th,.TdrVPL_ZKxEpsGqtgAKw td,.XpEtlXAz0qkmc2pUZelh th,.XpEtlXAz0qkmc2pUZelh td{padding:.25em}.B5XUoft7ajzWeLY9QZQ9{clear:both;padding:.5em 0;border:2px solid rgba(0,0,0,0);margin:.5em}.MXCudOGdPDTJtcb0KFtk{color:#000;text-align:right;width:4.5em}.MXCudOGdPDTJtcb0KFtk.oGGbruZcUCrKnRswgvhX{color:blue}.MXCudOGdPDTJtcb0KFtk.LFTPI4HvrN257b34VKog{color:green}.MXCudOGdPDTJtcb0KFtk.LFTPI4HvrN257b34VKog::before{content:\"↖\"}.MXCudOGdPDTJtcb0KFtk.IYciZuUEzLYtaU3GzLql{color:red}.MXCudOGdPDTJtcb0KFtk.IYciZuUEzLYtaU3GzLql::before{content:\"↘\"}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/containers/Quotes/styles.module.scss\"],\"names\":[],\"mappings\":\"AAAA,sBAAA,YACE,CAAA,4CAEF,sCAEE,CAAA,cACA,CAAA,wDACA,wBACE,CAAA,0EAEE,wBACE,CAAA,kFAKJ,wBACE,CAAA,oGAGJ,aAEE,CAAA,sBAGJ,UACE,CAAA,cACA,CAAA,8BACA,CAAA,WACA,CAAA,sBAEF,UACE,CAAA,gBACA,CAAA,WACA,CAAA,2CACA,UACE,CAAA,2CAEF,WACE,CAAA,mDACA,WACE,CAAA,2CAGJ,SACE,CAAA,mDACA,WACE\",\"sourcesContent\":[\".Section {\\n  color: purple;\\n}\\n.Investments,\\n.Transactions {\\n  font-family: Arial, Helvetica, sans-serif;\\n  font-size: 0.7em;\\n  table {\\n    border-collapse: collapse;\\n    tr {\\n      &:hover {\\n        background-color: #e0e0e0;\\n      }\\n    }\\n  }\\n  tr {\\n    &:nth-child(even) {\\n      background-color: #f7f7f7;\\n    }\\n  }\\n  th,\\n  td {\\n    padding: 0.25em;\\n  }\\n}\\n.Row {\\n  clear: both;\\n  padding: 0.5em 0;\\n  border: 2px solid transparent;\\n  margin: 0.5em;\\n}\\n.Percent {\\n  color: black;\\n  text-align: right;\\n  width: 4.5em;\\n  &.eq {\\n    color: blue;\\n  }\\n  &.gt {\\n    color: green;\\n    &::before {\\n      content: \\\"\\\\2196\\\";\\n    }\\n  }\\n  &.lt {\\n    color: red;\\n    &::before {\\n      content: \\\"\\\\2198\\\";\\n    }\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Section\": `_ESpGSPPpzgrCHtLDC15`,\n\t\"Investments\": `TdrVPL_ZKxEpsGqtgAKw`,\n\t\"Transactions\": `XpEtlXAz0qkmc2pUZelh`,\n\t\"Row\": `B5XUoft7ajzWeLY9QZQ9`,\n\t\"Percent\": `MXCudOGdPDTJtcb0KFtk`,\n\t\"eq\": `oGGbruZcUCrKnRswgvhX`,\n\t\"gt\": `LFTPI4HvrN257b34VKog`,\n\t\"lt\": `IYciZuUEzLYtaU3GzLql`\n};\nmodule.exports = ___CSS_LOADER_EXPORT___;\n","import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    return operate(function (source, subscriber) {\n        var activeTask = null;\n        var lastValue = null;\n        var lastTime = null;\n        var emit = function () {\n            if (activeTask) {\n                activeTask.unsubscribe();\n                activeTask = null;\n                var value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        function emitWhenIdle() {\n            var targetTime = lastTime + dueTime;\n            var now = scheduler.now();\n            if (now < targetTime) {\n                activeTask = this.schedule(undefined, targetTime - now);\n                subscriber.add(activeTask);\n                return;\n            }\n            emit();\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            lastValue = value;\n            lastTime = scheduler.now();\n            if (!activeTask) {\n                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n                subscriber.add(activeTask);\n            }\n        }, function () {\n            emit();\n            subscriber.complete();\n        }, undefined, function () {\n            lastValue = activeTask = null;\n        }));\n    });\n}\n//# sourceMappingURL=debounceTime.js.map","import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function distinctUntilChanged(comparator, keySelector) {\n    if (keySelector === void 0) { keySelector = identity; }\n    comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n    return operate(function (source, subscriber) {\n        var previousKey;\n        var first = true;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var currentKey = keySelector(value);\n            if (first || !comparator(previousKey, currentKey)) {\n                first = false;\n                previousKey = currentKey;\n                subscriber.next(value);\n            }\n        }));\n    });\n}\nfunction defaultCompare(a, b) {\n    return a === b;\n}\n//# sourceMappingURL=distinctUntilChanged.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function map(project, thisArg) {\n    return operate(function (source, subscriber) {\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            subscriber.next(project.call(thisArg, value, index++));\n        }));\n    });\n}\n//# sourceMappingURL=map.js.map","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be added.\n *\n * @returns The new date with the months added\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n *\n * // Add one month to 30 January 2023:\n * const result = addMonths(new Date(2023, 0, 30), 1)\n * //=> Tue Feb 28 2023 00:00:00\n */\nexport function addMonths(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  const dayOfMonth = _date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  const endOfDesiredMonth = constructFrom(date, _date.getTime());\n  endOfDesiredMonth.setMonth(_date.getMonth() + amount + 1, 0);\n  const daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    _date.setFullYear(\n      endOfDesiredMonth.getFullYear(),\n      endOfDesiredMonth.getMonth(),\n      dayOfMonth,\n    );\n    return _date;\n  }\n}\n\n// Fallback for modularized imports:\nexport default addMonths;\n","import { subDays } from \"./subDays.mjs\";\nimport { subMonths } from \"./subMonths.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns The new date with the seconds subtracted\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\nexport function sub(date, duration) {\n  const {\n    years = 0,\n    months = 0,\n    weeks = 0,\n    days = 0,\n    hours = 0,\n    minutes = 0,\n    seconds = 0,\n  } = duration;\n\n  // Subtract years and months\n  const dateWithoutMonths = subMonths(date, months + years * 12);\n\n  // Subtract weeks and days\n  const dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7);\n\n  // Subtract hours, minutes and seconds\n  const minutestoSub = minutes + hours * 60;\n  const secondstoSub = seconds + minutestoSub * 60;\n  const mstoSub = secondstoSub * 1000;\n  const finalDate = constructFrom(date, dateWithoutDays.getTime() - mstoSub);\n\n  return finalDate;\n}\n\n// Fallback for modularized imports:\nexport default sub;\n","import { addDays } from \"./addDays.mjs\";\n\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be subtracted.\n *\n * @returns The new date with the days subtracted\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\nexport function subDays(date, amount) {\n  return addDays(date, -amount);\n}\n\n// Fallback for modularized imports:\nexport default subDays;\n","import { addMonths } from \"./addMonths.mjs\";\n\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be subtracted.\n *\n * @returns The new date with the months subtracted\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function subMonths(date, amount) {\n  return addMonths(date, -amount);\n}\n\n// Fallback for modularized imports:\nexport default subMonths;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","Chart","_ref","list","groupRef","useRef","useEffect","createPie","d3","value","d","sort","createArc","innerRadius","outerRadius","colors","data","groupWithData","current","selectAll","exit","remove","groupWithUpdate","enter","append","attr","merge","select","i","concat","centroid","style","text","_ref2","label","React","className","cx","styles","ref","transform","getValueNearDate","values","date","format","sub","days","Percent","isNaN","Intl","NumberFormat","minimumFractionDigits","Math","round","Investments","investments","rates","selected","setSelected","_useState2","_slicedToArray","useState","expanded","setExpanded","useMemo","map","item","_Object$entries$pop2","Object","entries","id","pop","unitValue","_objectSpread","Date","type","checked","length","onChange","useCallback","_ref3","target","_ref4","key","includes","_ref5","filter","href","onClick","e","preventDefault","name","align","months","colSpan","JSON","stringify","getInvestmentTransaction","names","investment_id","units","valueNetto","valueBrutto","Transactions","transactions","quotes","keys","reduce","result","assign","Boolean","_","n","_ref6","quote","_regeneratorRuntime","t","r","prototype","hasOwnProperty","o","defineProperty","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","getPrototypeOf","v","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","ERA","DAYS","asset","createAsset","_callee","version","res","_context","fetch","json","metas","objects","arguments","apply","_next","_throw","_x","getInvestmentTransactionValue","valueDate","unitValueDate","Data","_ref5$version","read","results","investment","_ref7","b","localeCompare","_ref8","_defineProperty","_ref9","_useState4","search","filters","_useState6","queries","setQueries","search$","Subject","subscription","pipe","_ref10","_objectWithoutProperties","_excluded","trim","distinctUntilChanged","debounceTime","subscribe","parse","unsubscribe","console","log","unified","_ref11","getTime","from","_useState8","_useState10","selectedDate","setSelectedDate","_useState12","investmentsSelected","setInvestmentsSelected","_ref12","_ref13","getRelatedValue","formattedDate","SyncZoomProvider","_ref14","_excluded2","group","legend","rule","_ref15","_ref16","_ref17","_ref18","_excluded3","_toConsumableArray","Array","transaction","_ref19","_ref20","_ref21","flat","_ref22","_ref23","value2","_ref24","_ref25","_ref26","DonutChart","_ref27","_ref28","Section","___CSS_LOADER_API_SOURCEMAP_IMPORT___","___CSS_LOADER_EXPORT___","___CSS_LOADER_API_IMPORT___","module","locals","exports","dueTime","scheduler","source","subscriber","activeTask","lastValue","lastTime","emit","emitWhenIdle","targetTime","now","this","schedule","add","comparator","keySelector","defaultCompare","previousKey","first","currentKey","project","thisArg","index","addDays","amount","_date","NaN","setDate","getDate","addMonths","dayOfMonth","endOfDesiredMonth","setMonth","getMonth","setFullYear","getFullYear","duration","years","weeks","hours","minutes","seconds","dateWithoutDays","subDays","subMonths","mstoSub","constructFrom"],"sourceRoot":""}