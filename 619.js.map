{"version":3,"file":"619.js","mappings":"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","sources":["webpack://@dev/web/../../node_modules/observable-hooks/dist/esm/helpers.js","webpack://@dev/web/../../node_modules/observable-hooks/dist/esm/use-subscription.js","webpack://@dev/web/../../node_modules/observable-hooks/dist/esm/internal/use-subscription-internal.js","webpack://@dev/web/../../node_modules/react-truncate/lib/Truncate.js","webpack://@dev/web/../../node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js","webpack://@dev/web/../../node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js","webpack://@dev/web/../../node_modules/rxjs/dist/esm5/internal/operators/map.js"],"sourcesContent":["/**\n * Useful utilities\n */\nimport { useRef, useState, useLayoutEffect, useEffect } from 'react';\nimport { Subject } from 'rxjs';\nimport { pluck } from 'rxjs/operators';\n/**\n * Returns the first argument it receives.\n */\nexport function identity(value) {\n    return value;\n}\n/**\n * Maps an Observable of Arraylike to an Observable\n * of the first item.\n *\n * Example:\n *\n * ```typescript\n * const text$ = useObservable(pluckFirst, [props.text])\n * ```\n *\n * @param inputs$ An Observable of arraylike.\n *\n */\nexport function pluckFirst(inputs$) {\n    return pluck(0)(inputs$);\n}\n/**\n * Maps an Observable of DOM events to an Observable\n * of the currentTarget value.\n *\n * Example:\n *\n * ```typescript\n * const [onChange, textChange$] = useObservableCallback<\n *  string,\n *  React.FormEvent<HTMLInputElement>\n * >(pluckCurrentTargetValue)\n * ```\n *\n */\nexport function pluckCurrentTargetValue(event$) {\n    return pluck('currentTarget', 'value')(event$);\n}\n/**\n * Maps an Observable of DOM events to an Observable\n * of the currentTarget checked.\n *\n * Example:\n *\n * ```typescript\n * const [onChange, checked$] = useObservableCallback<\n *  boolean,\n *  React.FormEvent<HTMLInputElement>\n * >(pluckCurrentTargetChecked)\n * ```\n *\n */\nexport function pluckCurrentTargetChecked(event$) {\n    return pluck('currentTarget', 'checked')(event$);\n}\n/**\n * Return an empty Subject\n * @ignore\n */\nexport function getEmptySubject() {\n    return new Subject();\n}\n/**\n * One-time ref init.\n * @param init A function that returns a value. Will be called only once.\n * @returns A ref object with the returned value.\n */\nexport function useRefFn(init) {\n    var firstRef = useRef(true);\n    var ref = useRef(null);\n    if (firstRef.current) {\n        firstRef.current = false;\n        ref.current = init();\n    }\n    return ref;\n}\n/**\n * Force re-renders Component.\n */\nexport function useForceUpdate() {\n    var updateState = useState(0)[1];\n    return useRef(function () { return updateState(increment); }).current;\n}\nfunction increment(n) {\n    return (n + 1) % 1000000;\n}\n/**\n * Prevent React warning when using useLayoutEffect on server.\n */\nexport var useIsomorphicLayoutEffect = typeof window !== 'undefined' &&\n    typeof window.document !== 'undefined' &&\n    typeof window.document.createElement !== 'undefined'\n    ? useLayoutEffect\n    : /* istanbul ignore next: both are not called on server */\n        useEffect;\n//# sourceMappingURL=helpers.js.map","import { useEffect } from 'react';\nimport { useSubscriptionInternal } from './internal/use-subscription-internal';\nexport function useSubscription(input$, observerOrNext$, error, complete) {\n    return useSubscriptionInternal(useEffect, [\n        input$,\n        observerOrNext$,\n        error,\n        complete\n    ]);\n}\n//# sourceMappingURL=use-subscription.js.map","import { useIsomorphicLayoutEffect } from '../helpers';\nimport { useRef } from 'react';\n/**\n *\n * @template TInput Input value within Observable.\n *\n * @param useCustomEffect useEffect or useLayoutEffect\n * @param args collected arguments\n */\nexport function useSubscriptionInternal(useCustomEffect, args) {\n    var argsRef = useRef(args);\n    var subscriptionRef = useRef();\n    // Update the latest observable and callbacks\n    // synchronously after render being committed\n    useIsomorphicLayoutEffect(function () {\n        argsRef.current = args;\n    });\n    useCustomEffect(function () {\n        // keep in closure for checking staleness\n        var input$ = argsRef.current[0];\n        var subscription = input$.subscribe({\n            next: function (value) {\n                var _a;\n                if (input$ !== argsRef.current[0]) {\n                    // stale observable\n                    return;\n                }\n                var nextObserver = ((_a = argsRef.current[1]) === null || _a === void 0 ? void 0 : _a.next) ||\n                    argsRef.current[1];\n                if (nextObserver) {\n                    return nextObserver(value);\n                }\n            },\n            error: function (error) {\n                var _a;\n                if (input$ !== argsRef.current[0]) {\n                    // stale observable\n                    return;\n                }\n                var errorObserver = ((_a = argsRef.current[1]) === null || _a === void 0 ? void 0 : _a.error) ||\n                    argsRef.current[2];\n                if (errorObserver) {\n                    return errorObserver(error);\n                }\n                console.error(error);\n            },\n            complete: function () {\n                var _a;\n                if (input$ !== argsRef.current[0]) {\n                    // stale observable\n                    return;\n                }\n                var completeObserver = ((_a = argsRef.current[1]) === null || _a === void 0 ? void 0 : _a.complete) ||\n                    argsRef.current[3];\n                if (completeObserver) {\n                    return completeObserver();\n                }\n            }\n        });\n        subscriptionRef.current = subscription;\n        return function () {\n            subscription.unsubscribe();\n        };\n    }, [args[0]]);\n    return subscriptionRef;\n}\n//# sourceMappingURL=use-subscription-internal.js.map","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar Truncate = function (_Component) {\n    _inherits(Truncate, _Component);\n\n    function Truncate() {\n        var _ref;\n\n        _classCallCheck(this, Truncate);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        var _this = _possibleConstructorReturn(this, (_ref = Truncate.__proto__ || Object.getPrototypeOf(Truncate)).call.apply(_ref, [this].concat(args)));\n\n        _this.state = {};\n        _this.styles = {\n            ellipsis: {\n                position: 'fixed',\n                visibility: 'hidden',\n                top: 0,\n                left: 0\n            }\n        };\n\n\n        _this.elements = {};\n\n        _this.onResize = _this.onResize.bind(_this);\n        _this.onTruncate = _this.onTruncate.bind(_this);\n        _this.calcTargetWidth = _this.calcTargetWidth.bind(_this);\n        _this.measureWidth = _this.measureWidth.bind(_this);\n        _this.getLines = _this.getLines.bind(_this);\n        _this.renderLine = _this.renderLine.bind(_this);\n        return _this;\n    }\n\n    _createClass(Truncate, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var text = this.elements.text,\n                calcTargetWidth = this.calcTargetWidth,\n                onResize = this.onResize;\n\n\n            var canvas = document.createElement('canvas');\n            this.canvasContext = canvas.getContext('2d');\n\n            calcTargetWidth(function () {\n                // Node not needed in document tree to read its content\n                if (text) {\n                    text.parentNode.removeChild(text);\n                }\n            });\n\n            window.addEventListener('resize', onResize);\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate(prevProps) {\n            // Render was based on outdated refs and needs to be rerun\n            if (this.props.children !== prevProps.children) {\n                this.forceUpdate();\n            }\n\n            // If the width prop has changed, recalculate size of contents\n            if (this.props.width !== prevProps.width) {\n                this.calcTargetWidth();\n            }\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            var ellipsis = this.elements.ellipsis,\n                onResize = this.onResize,\n                timeout = this.timeout;\n\n\n            ellipsis.parentNode.removeChild(ellipsis);\n\n            window.removeEventListener('resize', onResize);\n\n            window.cancelAnimationFrame(timeout);\n        }\n\n        // Shim innerText to consistently break lines at <br/> but not at \\n\n\n    }, {\n        key: 'innerText',\n        value: function innerText(node) {\n            var div = document.createElement('div');\n            var contentKey = 'innerText' in window.HTMLElement.prototype ? 'innerText' : 'textContent';\n\n            div.innerHTML = node.innerHTML.replace(/\\r\\n|\\r|\\n/g, ' ');\n\n            var text = div[contentKey];\n\n            var test = document.createElement('div');\n            test.innerHTML = 'foo<br/>bar';\n\n            if (test[contentKey].replace(/\\r\\n|\\r/g, '\\n') !== 'foo\\nbar') {\n                div.innerHTML = div.innerHTML.replace(/<br.*?[\\/]?>/gi, '\\n');\n                text = div[contentKey];\n            }\n\n            return text;\n        }\n    }, {\n        key: 'onResize',\n        value: function onResize() {\n            this.calcTargetWidth();\n        }\n    }, {\n        key: 'onTruncate',\n        value: function onTruncate(didTruncate) {\n            var onTruncate = this.props.onTruncate;\n\n\n            if (typeof onTruncate === 'function') {\n                this.timeout = window.requestAnimationFrame(function () {\n                    onTruncate(didTruncate);\n                });\n            }\n        }\n    }, {\n        key: 'calcTargetWidth',\n        value: function calcTargetWidth(callback) {\n            var target = this.elements.target,\n                calcTargetWidth = this.calcTargetWidth,\n                canvasContext = this.canvasContext,\n                width = this.props.width;\n\n            // Calculation is no longer relevant, since node has been removed\n\n            if (!target) {\n                return;\n            }\n\n            var targetWidth = width ||\n            // Floor the result to deal with browser subpixel precision\n            Math.floor(target.parentNode.getBoundingClientRect().width);\n\n            // Delay calculation until parent node is inserted to the document\n            // Mounting order in React is ChildComponent, ParentComponent\n            if (!targetWidth) {\n                return window.requestAnimationFrame(function () {\n                    return calcTargetWidth(callback);\n                });\n            }\n\n            var style = window.getComputedStyle(target);\n\n            var font = [style['font-weight'], style['font-style'], style['font-size'], style['font-family']].join(' ');\n\n            canvasContext.font = font;\n\n            this.setState({\n                targetWidth: targetWidth\n            }, callback);\n        }\n    }, {\n        key: 'measureWidth',\n        value: function measureWidth(text) {\n            return this.canvasContext.measureText(text).width;\n        }\n    }, {\n        key: 'ellipsisWidth',\n        value: function ellipsisWidth(node) {\n            return node.offsetWidth;\n        }\n    }, {\n        key: 'trimRight',\n        value: function trimRight(text) {\n            return text.replace(/\\s+$/, '');\n        }\n    }, {\n        key: 'getLines',\n        value: function getLines() {\n            var elements = this.elements,\n                _props = this.props,\n                numLines = _props.lines,\n                ellipsis = _props.ellipsis,\n                trimWhitespace = _props.trimWhitespace,\n                targetWidth = this.state.targetWidth,\n                innerText = this.innerText,\n                measureWidth = this.measureWidth,\n                onTruncate = this.onTruncate,\n                trimRight = this.trimRight;\n\n\n            var lines = [];\n            var text = innerText(elements.text);\n            var textLines = text.split('\\n').map(function (line) {\n                return line.split(' ');\n            });\n            var didTruncate = true;\n            var ellipsisWidth = this.ellipsisWidth(this.elements.ellipsis);\n\n            for (var line = 1; line <= numLines; line++) {\n                var textWords = textLines[0];\n\n                // Handle newline\n                if (textWords.length === 0) {\n                    lines.push();\n                    textLines.shift();\n                    line--;\n                    continue;\n                }\n\n                var resultLine = textWords.join(' ');\n\n                if (measureWidth(resultLine) <= targetWidth) {\n                    if (textLines.length === 1) {\n                        // Line is end of text and fits without truncating\n                        didTruncate = false;\n\n                        lines.push(resultLine);\n                        break;\n                    }\n                }\n\n                if (line === numLines) {\n                    // Binary search determining the longest possible line inluding truncate string\n                    var textRest = textWords.join(' ');\n\n                    var lower = 0;\n                    var upper = textRest.length - 1;\n\n                    while (lower <= upper) {\n                        var middle = Math.floor((lower + upper) / 2);\n\n                        var testLine = textRest.slice(0, middle + 1);\n\n                        if (measureWidth(testLine) + ellipsisWidth <= targetWidth) {\n                            lower = middle + 1;\n                        } else {\n                            upper = middle - 1;\n                        }\n                    }\n\n                    var lastLineText = textRest.slice(0, lower);\n\n                    if (trimWhitespace) {\n                        lastLineText = trimRight(lastLineText);\n\n                        // Remove blank lines from the end of text\n                        while (!lastLineText.length && lines.length) {\n                            var prevLine = lines.pop();\n\n                            lastLineText = trimRight(prevLine);\n                        }\n                    }\n\n                    resultLine = React.createElement(\n                        'span',\n                        null,\n                        lastLineText,\n                        ellipsis\n                    );\n                } else {\n                    // Binary search determining when the line breaks\n                    var _lower = 0;\n                    var _upper = textWords.length - 1;\n\n                    while (_lower <= _upper) {\n                        var _middle = Math.floor((_lower + _upper) / 2);\n\n                        var _testLine = textWords.slice(0, _middle + 1).join(' ');\n\n                        if (measureWidth(_testLine) <= targetWidth) {\n                            _lower = _middle + 1;\n                        } else {\n                            _upper = _middle - 1;\n                        }\n                    }\n\n                    // The first word of this line is too long to fit it\n                    if (_lower === 0) {\n                        // Jump to processing of last line\n                        line = numLines - 1;\n                        continue;\n                    }\n\n                    resultLine = textWords.slice(0, _lower).join(' ');\n                    textLines[0].splice(0, _lower);\n                }\n\n                lines.push(resultLine);\n            }\n\n            onTruncate(didTruncate);\n\n            return lines;\n        }\n    }, {\n        key: 'renderLine',\n        value: function renderLine(line, i, arr) {\n            if (i === arr.length - 1) {\n                return React.createElement(\n                    'span',\n                    { key: i },\n                    line\n                );\n            } else {\n                var br = React.createElement('br', { key: i + 'br' });\n\n                if (line) {\n                    return [React.createElement(\n                        'span',\n                        { key: i },\n                        line\n                    ), br];\n                } else {\n                    return br;\n                }\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var target = this.elements.target,\n                _props2 = this.props,\n                children = _props2.children,\n                ellipsis = _props2.ellipsis,\n                lines = _props2.lines,\n                spanProps = _objectWithoutProperties(_props2, ['children', 'ellipsis', 'lines']),\n                targetWidth = this.state.targetWidth,\n                getLines = this.getLines,\n                renderLine = this.renderLine,\n                onTruncate = this.onTruncate;\n\n            var text = void 0;\n\n            var mounted = !!(target && targetWidth);\n\n            if (typeof window !== 'undefined' && mounted) {\n                if (lines > 0) {\n                    text = getLines().map(renderLine);\n                } else {\n                    text = children;\n\n                    onTruncate(false);\n                }\n            }\n\n            delete spanProps.onTruncate;\n            delete spanProps.trimWhitespace;\n\n            return React.createElement(\n                'span',\n                _extends({}, spanProps, { ref: function ref(targetEl) {\n                        _this2.elements.target = targetEl;\n                    } }),\n                React.createElement(\n                    'span',\n                    null,\n                    text\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(textEl) {\n                            _this2.elements.text = textEl;\n                        } },\n                    children\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(ellipsisEl) {\n                            _this2.elements.ellipsis = ellipsisEl;\n                        }, style: this.styles.ellipsis },\n                    ellipsis\n                )\n            );\n        }\n    }]);\n\n    return Truncate;\n}(Component);\n\nTruncate.propTypes = {\n    children: PropTypes.node,\n    ellipsis: PropTypes.node,\n    lines: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.number]),\n    trimWhitespace: PropTypes.bool,\n    width: PropTypes.number,\n    onTruncate: PropTypes.func\n};\nTruncate.defaultProps = {\n    children: '',\n    ellipsis: '…',\n    lines: 1,\n    trimWhitespace: false,\n    width: 0\n};\nexport default Truncate;\n;\n","import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    return operate(function (source, subscriber) {\n        var activeTask = null;\n        var lastValue = null;\n        var lastTime = null;\n        var emit = function () {\n            if (activeTask) {\n                activeTask.unsubscribe();\n                activeTask = null;\n                var value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        function emitWhenIdle() {\n            var targetTime = lastTime + dueTime;\n            var now = scheduler.now();\n            if (now < targetTime) {\n                activeTask = this.schedule(undefined, targetTime - now);\n                subscriber.add(activeTask);\n                return;\n            }\n            emit();\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            lastValue = value;\n            lastTime = scheduler.now();\n            if (!activeTask) {\n                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n                subscriber.add(activeTask);\n            }\n        }, function () {\n            emit();\n            subscriber.complete();\n        }, undefined, function () {\n            lastValue = activeTask = null;\n        }));\n    });\n}\n//# sourceMappingURL=debounceTime.js.map","import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function distinctUntilChanged(comparator, keySelector) {\n    if (keySelector === void 0) { keySelector = identity; }\n    comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n    return operate(function (source, subscriber) {\n        var previousKey;\n        var first = true;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var currentKey = keySelector(value);\n            if (first || !comparator(previousKey, currentKey)) {\n                first = false;\n                previousKey = currentKey;\n                subscriber.next(value);\n            }\n        }));\n    });\n}\nfunction defaultCompare(a, b) {\n    return a === b;\n}\n//# sourceMappingURL=distinctUntilChanged.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function map(project, thisArg) {\n    return operate(function (source, subscriber) {\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            subscriber.next(project.call(thisArg, value, index++));\n        }));\n    });\n}\n//# sourceMappingURL=map.js.map"],"names":["useIsomorphicLayoutEffect","window","document","createElement","useLayoutEffect","useEffect","useSubscription","input$","observerOrNext$","error","complete","useCustomEffect","args","argsRef","useRef","subscriptionRef","current","subscription","subscribe","next","value","_a","nextObserver","errorObserver","console","completeObserver","unsubscribe","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","Truncate","_Component","_ref","this","_len","Array","_key","_this","__proto__","getPrototypeOf","apply","concat","state","styles","ellipsis","position","visibility","top","left","elements","onResize","bind","onTruncate","calcTargetWidth","measureWidth","getLines","renderLine","subClass","superClass","create","constructor","setPrototypeOf","_inherits","text","canvas","canvasContext","getContext","parentNode","removeChild","addEventListener","prevProps","children","forceUpdate","width","timeout","removeEventListener","cancelAnimationFrame","node","div","contentKey","HTMLElement","innerHTML","replace","test","didTruncate","requestAnimationFrame","callback","targetWidth","Math","floor","getBoundingClientRect","style","getComputedStyle","font","join","setState","measureText","offsetWidth","_props","numLines","lines","trimWhitespace","innerText","trimRight","textLines","split","map","line","ellipsisWidth","textWords","resultLine","push","textRest","lower","upper","middle","slice","lastLineText","pop","_lower","_upper","_middle","splice","shift","arr","br","_this2","_props2","spanProps","obj","keys","indexOf","_objectWithoutProperties","ref","targetEl","textEl","ellipsisEl","Component","propTypes","defaultProps","debounceTime","dueTime","scheduler","subscriber","activeTask","lastValue","lastTime","emit","emitWhenIdle","targetTime","now","schedule","undefined","add","distinctUntilChanged","comparator","keySelector","defaultCompare","previousKey","first","currentKey","a","b","project","thisArg","index"],"sourceRoot":""}