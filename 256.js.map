{"version":3,"file":"256.js","mappings":"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","sources":["webpack://@dev/web/./src/containers/Exchange/styles.module.scss?7a6c","webpack://@dev/web/./src/containers/Exchange/index.tsx","webpack://@dev/web/./src/containers/Exchange/styles.module.scss","webpack://@dev/web/../../node_modules/rxjs/dist/esm5/internal/operators/map.js"],"sourcesContent":["\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  type ChangeEventHandler,\n  useCallback,\n  useMemo,\n  useState,\n} from \"react\";\nimport { createAsset } from \"use-asset\";\nimport { format } from \"date-fns\";\nimport Chart, { SyncZoomProvider } from \"../../components/ZoomableLineChart\";\nimport styles from \"./styles.module.scss\";\n\nimport type { Rate } from \"@dev/cli/src/services/RatesService/types\";\n\nconst CODES = [\"EUR\", \"USD\", \"CHF\", \"GBP\"];\n\nconst asset = createAsset(async (version) => {\n  const res = await fetch(`api/exchange/data.json?${version}`);\n  return await res.json();\n});\n\nexport default function Section({ version = \"v1\" }) {\n  const { rates } = asset.read(version) as {\n    rates: Rate[];\n  };\n  const [code, setCode] = useState(\"CHF\");\n  const [checked, setCheckedOptions] = useState(CODES);\n  const values = useMemo<Record<string, number[]>>(\n    () => ({\n      [\"2013-05-23\"]: [153.68, 332.17],\n      [\"2013-06-21\"]: [143.1, 342.75],\n      [\"2013-07-23\"]: [154.61, 331.24],\n      [\"2013-08-23\"]: [144.07, 341.78],\n      [\"2013-09-23\"]: [144.54, 341.31],\n      [\"2013-10-23\"]: [156.0, 329.85],\n\n      [\"2013-11-22\"]: [145.54, 340.25],\n      [\"2013-12-23\"]: [156.97, 328.82],\n      [\"2014-01-23\"]: [146.52, 339.27],\n\n      [\"2014-02-21\"]: [146.88, 339.15],\n      [\"2014-03-21\"]: [180.13, 305.9],\n      [\"2014-04-23\"]: [147.94, 338.09],\n\n      [\"2014-05-23\"]: [159.49, 326.12],\n      [\"2014-06-23\"]: [149.14, 336.47],\n      [\"2014-07-23\"]: [160.46, 325.15],\n      [\"2014-08-22\"]: [150.66, 335.2],\n      [\"2014-09-23\"]: [151.15, 334.71],\n      [\"2014-10-23\"]: [162.42, 323.44],\n\n      [\"2014-11-21\"]: [152.21, 333.61],\n      [\"2014-12-23\"]: [163.45, 322.37],\n      [\"2015-01-23\"]: [153.23, 332.59],\n      // [\"2015-02-23\"]: [485.82],\n      // [\"2015-02-23\"]: [485.15],\n      // [\"2015-03-23\"]: [485.15],\n      // [\"2015-04-23\"]: [485.15],\n      [\"2015-02-23\"]: [147.05, 292.54],\n      [\"2015-03-23\"]: [204.34, 235.25],\n      [\"2015-04-23\"]: [179.56, 259.94],\n      [\"2015-05-22\"]: [189.08, 249.18],\n      [\"2015-06-23\"]: [181.25, 257.01],\n      [\"2015-07-23\"]: [189.98, 248.28],\n      [\"2015-08-21\"]: [179.44, 263.49],\n      [\"2015-09-23\"]: [179.91, 263.02],\n      [\"2015-10-23\"]: [188.85, 254.08],\n\n      [\"2015-11-23\"]: [180.29, 263.69],\n      [\"2015-12-23\"]: [189.25, 254.73],\n      [\"2016-01-22\"]: [181.25, 262.73],\n      //\n      [\"2016-08-23\"]: [185.74, 256.36],\n      [\"2016-09-23\"]: [186.22, 255.88],\n      [\"2016-10-21\"]: [194.94, 247.16],\n      //\n      [\"2017-02-23\"]: [187.81, 255.88],\n      [\"2017-03-23\"]: [213.02, 230.67],\n      [\"2017-04-21\"]: [188.86, 254.83],\n      //\n      [\"2017-11-23\"]: [192.24, 251.54],\n      [\"2017-12-22\"]: [200.84, 242.94],\n      [\"2018-01-23\"]: [193.27, 250.51],\n      [\"2018-02-23\"]: [194.26, 248.74],\n      [\"2018-03-23\"]: [218.79, 224.21],\n      [\"2018-04-23\"]: [195.34, 247.66],\n      [\"2018-05-23\"]: [203.47, 240.03],\n      [\"2018-06-22\"]: [196.0, 247.5],\n      [\"2018-07-23\"]: [204.48, 239.02],\n      [\"2018-08-23\"]: [196.8, 247.05],\n      [\"2018-09-21\"]: [197.31, 246.54],\n      [\"2018-10-23\"]: [205.77, 238.08],\n      [\"2018-11-23\"]: [198.89, 244.16],\n      [\"2018-12-21\"]: [207.27, 235.78],\n      [\"2019-01-23\"]: [199.95, 243.1],\n\n      [\"2019-02-22\"]: [443.03], // 1.93 CHF\n      [\"2019-03-22\"]: [443.03],\n      [\"2019-04-23\"]: [443.03],\n      [\"2019-05-23\"]: [209.19, 234.96],\n      [\"2019-06-21\"]: [201.91, 242.24],\n      [\"2019-07-23\"]: [210.23, 233.92],\n      [\"2019-08-23\"]: [204.14, 238.13],\n      [\"2019-09-23\"]: [204.67, 237.6],\n      [\"2019-10-23\"]: [212.85, 229.42],\n      [\"2019-11-22\"]: [206.26, 235.23],\n      [\"2019-12-23\"]: [214.36, 227.13],\n      [\"2020-01-23\"]: [207.34, 234.15],\n      [\"2020-02-21\"]: [205.01, 241.1],\n      [\"2020-03-23\"]: [221.07, 225.04],\n      [\"2020-04-23\"]: [206.14, 239.97],\n      [\"2020-05-22\"]: [211.94, 238.41],\n      [\"2020-06-23\"]: [204.58, 245.77],\n      [\"2020-07-23\"]: [213.04, 237.31],\n      [\"2020-08-21\"]: [208.87, 236.4],\n      [\"2020-09-23\"]: [209.42, 235.85],\n      [\"2020-10-23\"]: [217.56, 227.71],\n      [\"2020-11-23\"]: [212.75, 229.12],\n      [\"2020-12-23\"]: [220.67, 221.2],\n      [\"2021-01-22\"]: [213.87, 228.0],\n      [\"2021-02-23\"]: [214.34, 227.72],\n      [\"2021-03-23\"]: [236.88, 205.18],\n      [\"2021-04-23\"]: [215.5, 226.56],\n      [\"2021-05-21\"]: [222.8, 220.02],\n      [\"2021-06-23\"]: [216.04, 226.78],\n      [\"2021-07-23\"]: [223.9, 218.92],\n      [\"2021-08-23\"]: [217.39, 225.07],\n      [\"2021-09-23\"]: [217.95, 224.51],\n      [\"2021-10-22\"]: [225.74, 216.72],\n      [\"2021-11-23\"]: [219.52, 222.35],\n      [\"2021-12-23\"]: [227.24, 214.63],\n      [\"2022-01-21\"]: [220.67, 221.2],\n      [\"2022-02-23\"]: [219.37, 225.4],\n      [\"2022-03-23\"]: [241.71, 203.06],\n      [\"2022-04-22\"]: [220.59, 224.18],\n      [\"2022-05-23\"]: [444.58],\n      [\"2022-06-23\"]: [444.58],\n      [\"2022-07-22\"]: [444.58],\n      [\"2022-08-23\"]: [217.45, 235.59],\n      [\"2022-09-23\"]: [218.06, 234.98],\n      [\"2022-10-21\"]: [226.23, 226.81],\n      [\"2022-11-23\"]: [205.76, 269.08],\n      [\"2022-12-23\"]: [215.08, 259.76],\n      [\"2023-01-23\"]: [207.12, 267.72],\n      [\"2023-02-23\"]: [504.65],\n      [\"2023-03-23\"]: [504.65],\n      [\"2023-04-21\"]: [504.65],\n      [\"2023-05-23\"]: [193.21, 331.03],\n      [\"2023-06-23\"]: [182.98, 341.26],\n      [\"2023-07-21\"]: [194.73, 329.51],\n      [\"2023-08-23\"]: [174.32, 369.8],\n      [\"2023-09-22\"]: [175.1, 369.02],\n      [\"2023-10-23\"]: [187.77, 356.35],\n      [\"2023-11-23\"]: [172.45, 380.45],\n      [\"2023-12-22\"]: [185.5, 367.4],\n      [\"2024-01-23\"]: [174.12, 378.78],\n      [\"2024-02-23\"]: [175.1, 377.59],\n      [\"2024-03-22\"]: [200.23, 352.46],\n      [\"2024-04-23\"]: [176.86, 375.83],\n    }),\n    [],\n  );\n\n  const list = useMemo(() => {\n    const result = Object.entries(values).reduce(\n      (result, [date, factors]) =>\n        Object.assign(result, {\n          [date]: {\n            date: new Date(date),\n            value: factors.reduce((sum, val) => sum + val, 0),\n            add: 60.0,\n          },\n        }),\n      {} as Record<\n        string,\n        {\n          date: Date;\n          value: number;\n          add: number;\n          name?: string;\n          buy?: number;\n          sell?: number;\n          spread?: number;\n          pay?: number;\n          sum?: number;\n        }\n      >,\n    );\n\n    rates\n      .filter((item) => item.code === code && item.date in result)\n      .forEach(({ buy, code, date, sell, spread, units }) =>\n        Object.assign(result[date], {\n          name: `${units} ${code}`,\n          buy: Number(buy),\n          sell: Number(sell),\n          spread: Number(spread),\n          value: values[date].reduce((sum, val) => sum + val, 0),\n        }),\n      );\n    return Object.values(result)\n      .map((item) =>\n        Object.assign(\n          item,\n          item.sell\n            ? ((pay) => ({\n                pay,\n                sum: pay + item.add,\n              }))(Math.round(100 * item.sell * item.value) / 100)\n            : {},\n        ),\n      )\n      .sort((a, b) => b.date.getTime() - a.date.getTime());\n  }, [rates, values, code]);\n\n  const series = useMemo(\n    () =>\n      rates\n        .filter(({ code }) => checked.includes(code))\n        .map(({ buy, sell, code, date, time, units }) => ({\n          date: new Date(`${date} ${time}`),\n          name: `${units} ${code}`,\n          value: Number(sell),\n          value2: Number(buy),\n          group: code,\n        }))\n        .sort(\n          (a, b) => new Date(a.date).getTime() - new Date(b.date).getTime(),\n        ),\n    [rates, checked],\n  );\n\n  console.log({ rates, code, list });\n\n  return (\n    <div className={styles.Section}>\n      <h2>Exchange</h2>\n      <fieldset>\n        <legend>Code</legend>\n        {CODES.map((code) => (\n          <label key={code}>\n            <input\n              type=\"checkbox\"\n              value={code}\n              checked={checked.includes(code)}\n              onChange={useCallback<ChangeEventHandler<HTMLInputElement>>(\n                ({ target }) =>\n                  setCheckedOptions((checked) =>\n                    target.checked\n                      ? checked.concat(target.value)\n                      : checked.filter((value) => value !== target.value),\n                  ),\n                [],\n              )}\n            />\n            <span>{code}</span>\n          </label>\n        ))}\n      </fieldset>\n      <SyncZoomProvider>\n        <Chart list={series} type=\"area\" legend rule />\n        <Chart list={series} type=\"area\" move />\n      </SyncZoomProvider>\n      <fieldset>\n        <label>\n          <span>Code</span>\n          <select\n            value={code}\n            onChange={useCallback<ChangeEventHandler<HTMLSelectElement>>(\n              ({ target }) => setCode(target.value),\n              [],\n            )}\n          >\n            {CODES.map((code) => (\n              <option key={code} value={code}>\n                {code}\n              </option>\n            ))}\n          </select>\n        </label>\n      </fieldset>\n      <table>\n        <tbody>\n          <tr>\n            <th>Data</th>\n            <th>Nazwa</th>\n            <th>Kupno</th>\n            <th>Sprzedaż</th>\n            <th>Spread</th>\n            <th>Wartość</th>\n            <th>Stała</th>\n            <th>Kwota</th>\n            <th>Płatność</th>\n          </tr>\n          {list.map((item, i) => (\n            <tr\n              key={i}\n              tabIndex={0}\n              onFocus={(e) => {\n                const range = document.createRange();\n                range.selectNode(e.target);\n                ((selection) =>\n                  selection &&\n                  (selection.removeAllRanges(), selection.addRange(range)))(\n                  window.getSelection(),\n                );\n              }}\n            >\n              <td align=\"right\">{format(item.date, \"dd.MM.yyyy\")}</td>\n              <td>{item.name}</td>\n              <td align=\"right\">\n                {item.buy\n                  ? new Intl.NumberFormat(\"pl-PL\", {\n                      minimumFractionDigits: 4,\n                    }).format(item.buy)\n                  : \"\"}\n              </td>\n              <td align=\"right\">\n                {item.sell\n                  ? new Intl.NumberFormat(\"pl-PL\", {\n                      minimumFractionDigits: 4,\n                    }).format(item.sell)\n                  : \"\"}\n              </td>\n              <td align=\"right\">\n                {item.spread\n                  ? new Intl.NumberFormat(\"pl-PL\", {\n                      minimumFractionDigits: 4,\n                    }).format(item.spread)\n                  : \"\"}\n              </td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.value)}\n              </td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.add)}\n              </td>\n              <td align=\"right\">\n                {item.pay\n                  ? new Intl.NumberFormat(\"pl-PL\", {\n                      minimumFractionDigits: 2,\n                    }).format(item.pay)\n                  : \"\"}\n              </td>\n              <td align=\"right\">\n                {item.sum\n                  ? new Intl.NumberFormat(\"pl-PL\", {\n                      minimumFractionDigits: 2,\n                    }).format(item.sum)\n                  : \"\"}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n        <tfoot>\n          {[\n            list.reduce(\n              ({ value, add, pay, sum }, item) => ({\n                value: value + item.value,\n                add: add + item.add,\n                pay: pay + (item.pay || 0),\n                sum: sum + (item.sum || 0),\n              }),\n              {\n                value: 0,\n                add: 0,\n                pay: 0,\n                sum: 0,\n              },\n            ),\n          ].map((item, i) => (\n            <tr key={i}>\n              <td colSpan={5}></td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.value)}\n              </td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.add)}\n              </td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.pay)}\n              </td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.sum)}\n              </td>\n            </tr>\n          ))}\n        </tfoot>\n      </table>\n    </div>\n  );\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.B6Zp7eUYgBpjqmd1ubB8{color:purple;font-family:Arial,Helvetica,sans-serif;font-size:.7em}.B6Zp7eUYgBpjqmd1ubB8 table{border-collapse:collapse}.B6Zp7eUYgBpjqmd1ubB8 table tr:hover{background-color:#e0e0e0}.B6Zp7eUYgBpjqmd1ubB8 table tr:focus{outline:blue auto 5px}.B6Zp7eUYgBpjqmd1ubB8 tr:nth-child(even){background-color:#f7f7f7}.B6Zp7eUYgBpjqmd1ubB8 th,.B6Zp7eUYgBpjqmd1ubB8 td{padding:.25em}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/containers/Exchange/styles.module.scss\"],\"names\":[],\"mappings\":\"AAAA,sBACE,YAAA,CACA,sCAAA,CACA,cAAA,CACA,4BACE,wBAAA,CAEE,qCACE,wBAAA,CAEF,qCACE,qBAAA,CAKJ,yCACE,wBAAA,CAGJ,kDAEE,aAAA\",\"sourcesContent\":[\".Section {\\n  color: purple;\\n  font-family: Arial, Helvetica, sans-serif;\\n  font-size: 0.7em;\\n  table {\\n    border-collapse: collapse;\\n    tr {\\n      &:hover {\\n        background-color: #e0e0e0;\\n      }\\n      &:focus {\\n        outline: blue auto 5px;\\n      }\\n    }\\n  }\\n  tr {\\n    &:nth-child(even) {\\n      background-color: #f7f7f7;\\n    }\\n  }\\n  th,\\n  td {\\n    padding: 0.25em;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Section\": `B6Zp7eUYgBpjqmd1ubB8`\n};\nexport default ___CSS_LOADER_EXPORT___;\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function map(project, thisArg) {\n    return operate(function (source, subscriber) {\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            subscriber.next(project.call(thisArg, value, index++));\n        }));\n    });\n}\n//# sourceMappingURL=map.js.map"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","c","locals","undefined","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","CODES","asset","createAsset","fn","_ref","_callee","version","res","_context","fetch","concat","json","self","args","arguments","apply","err","_x","Section","_ref2","_ref2$version","rates","read","_useState2","_slicedToArray","useState","code","setCode","_useState4","checked","setCheckedOptions","useMemo","_ref4","_defineProperty","list","result","entries","reduce","_ref5","_ref6","date","factors","assign","Date","sum","val","add","filter","item","_ref7","buy","sell","spread","units","Number","map","pay","Math","round","sort","b","getTime","series","_ref8","includes","_ref9","time","value2","group","console","log","React","className","styles","onChange","useCallback","_ref10","target","SyncZoomProvider","Chart","legend","rule","move","_ref11","tabIndex","onFocus","selection","range","document","createRange","selectNode","window","getSelection","removeAllRanges","addRange","align","format","Intl","NumberFormat","minimumFractionDigits","_ref12","colSpan","___CSS_LOADER_EXPORT___","module","id","project","thisArg","source","subscriber","index","subscribe"],"sourceRoot":""}