{"version":3,"file":"254.js","mappings":"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","sources":["webpack://@dev/web/./src/containers/Exchange/styles.module.scss?7a6c","webpack://@dev/web/./src/containers/Exchange/index.tsx","webpack://@dev/web/./src/containers/Exchange/styles.module.scss"],"sourcesContent":["\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { createAsset } from \"use-asset\";\nimport { format } from \"date-fns\";\nimport styles from \"./styles.module.scss\";\n\nconst CODES = [\"EUR\", \"USD\", \"CHF\", \"GBP\"];\n\nconst asset = createAsset(async (version) => {\n  // const res = await fetch(`api/exchange/data.json?${version}`);\n  // return await res.json();\n  return {\n    // https://www.rbinternational.com.pl/rest/rates/?type=kursywalut&range=all&date=2022-02-21\n    results: [\n      {\n        date: \"2021-06-23\",\n        rates: {\n          \"08:07\": [\n            {\n              code: \"EUR\",\n              units: 1,\n              buy: \"4.2949\",\n              sell: \"4.7413\",\n              spread: \"0.4464\",\n              date: \"2021-06-23\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"USD\",\n              units: 1,\n              buy: \"3.6078\",\n              sell: \"3.9684\",\n              spread: \"0.3606\",\n              date: \"2021-06-23\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"CHF\",\n              units: 1,\n              buy: \"4.0220\",\n              sell: \"4.2206\",\n              spread: \"0.1986\",\n              date: \"2021-06-23\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"GBP\",\n              units: 1,\n              buy: \"5.0287\",\n              sell: \"5.5325\",\n              spread: \"0.5038\",\n              date: \"2021-06-23\",\n              time: \"08:07:00\",\n            },\n          ],\n        },\n        range: { minRateDate: \"2000-03-22\", maxRateDate: \"2022-04-21\" },\n      },\n      {\n        date: \"2021-07-23\",\n        rates: {\n          \"08:07\": [\n            {\n              code: \"EUR\",\n              units: 1,\n              buy: \"4.3412\",\n              sell: \"4.7924\",\n              spread: \"0.4512\",\n              date: \"2021-07-23\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"USD\",\n              units: 1,\n              buy: \"3.6974\",\n              sell: \"4.0670\",\n              spread: \"0.3696\",\n              date: \"2021-07-23\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"CHF\",\n              units: 1,\n              buy: \"4.1165\",\n              sell: \"4.3198\",\n              spread: \"0.2033\",\n              date: \"2021-07-23\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"GBP\",\n              units: 1,\n              buy: \"5.0878\",\n              sell: \"5.5975\",\n              spread: \"0.5097\",\n              date: \"2021-07-23\",\n              time: \"08:07:00\",\n            },\n          ],\n        },\n        range: { minRateDate: \"2000-03-22\", maxRateDate: \"2022-04-21\" },\n      },\n      {\n        date: \"2021-08-23\",\n        rates: {\n          \"08:07\": [\n            {\n              code: \"EUR\",\n              units: 1,\n              buy: \"4.3531\",\n              sell: \"4.8056\",\n              spread: \"0.4525\",\n              date: \"2021-08-23\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"USD\",\n              units: 1,\n              buy: \"3.7223\",\n              sell: \"4.0943\",\n              spread: \"0.3720\",\n              date: \"2021-08-23\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"CHF\",\n              units: 1,\n              buy: \"4.1605\",\n              sell: \"4.3660\",\n              spread: \"0.2055\",\n              date: \"2021-08-23\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"GBP\",\n              units: 1,\n              buy: \"5.0817\",\n              sell: \"5.5907\",\n              spread: \"0.5090\",\n              date: \"2021-08-23\",\n              time: \"08:07:00\",\n            },\n          ],\n        },\n        range: { minRateDate: \"2000-03-22\", maxRateDate: \"2022-04-21\" },\n      },\n      {\n        date: \"2021-09-23\",\n        rates: {\n          \"08:07\": [\n            {\n              code: \"EUR\",\n              units: 1,\n              buy: \"4.3920\",\n              sell: \"4.8485\",\n              spread: \"0.4565\",\n              date: \"2021-09-23\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"USD\",\n              units: 1,\n              buy: \"3.7579\",\n              sell: \"4.1335\",\n              spread: \"0.3756\",\n              date: \"2021-09-23\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"CHF\",\n              units: 1,\n              buy: \"4.1585\",\n              sell: \"4.3639\",\n              spread: \"0.2054\",\n              date: \"2021-09-23\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"GBP\",\n              units: 1,\n              buy: \"5.1262\",\n              sell: \"5.6397\",\n              spread: \"0.5135\",\n              date: \"2021-09-23\",\n              time: \"08:07:00\",\n            },\n          ],\n        },\n        range: { minRateDate: \"2000-03-22\", maxRateDate: \"2022-04-21\" },\n      },\n      {\n        date: \"2021-10-22\",\n        rates: {\n          \"08:07\": [\n            {\n              code: \"EUR\",\n              units: 1,\n              buy: \"4.3815\",\n              sell: \"4.8369\",\n              spread: \"0.4554\",\n              date: \"2021-10-22\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"USD\",\n              units: 1,\n              buy: \"3.7757\",\n              sell: \"4.1531\",\n              spread: \"0.3774\",\n              date: \"2021-10-22\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"CHF\",\n              units: 1,\n              buy: \"4.2144\",\n              sell: \"4.4226\",\n              spread: \"0.2082\",\n              date: \"2021-10-22\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"GBP\",\n              units: 1,\n              buy: \"5.2090\",\n              sell: \"5.7308\",\n              spread: \"0.5218\",\n              date: \"2021-10-22\",\n              time: \"08:07:00\",\n            },\n          ],\n        },\n        range: { minRateDate: \"2000-03-22\", maxRateDate: \"2022-04-21\" },\n      },\n      {\n        date: \"2021-11-23\",\n        rates: {\n          \"08:07\": [\n            {\n              code: \"EUR\",\n              units: 1,\n              buy: \"4.4761\",\n              sell: \"4.9413\",\n              spread: \"0.4652\",\n              date: \"2021-11-23\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"USD\",\n              units: 1,\n              buy: \"3.9900\",\n              sell: \"4.3888\",\n              spread: \"0.3988\",\n              date: \"2021-11-23\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"CHF\",\n              units: 1,\n              buy: \"4.3870\",\n              sell: \"4.6036\",\n              spread: \"0.2166\",\n              date: \"2021-11-23\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"GBP\",\n              units: 1,\n              buy: \"5.3406\",\n              sell: \"5.8756\",\n              spread: \"0.5350\",\n              date: \"2021-11-23\",\n              time: \"08:07:00\",\n            },\n          ],\n        },\n        range: { minRateDate: \"2000-03-22\", maxRateDate: \"2022-04-21\" },\n      },\n      {\n        date: \"2021-12-23\",\n        rates: {\n          \"08:07\": [\n            {\n              code: \"EUR\",\n              units: 1,\n              buy: \"4.4073\",\n              sell: \"4.8653\",\n              spread: \"0.4580\",\n              date: \"2021-12-23\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"USD\",\n              units: 1,\n              buy: \"3.8950\",\n              sell: \"4.2844\",\n              spread: \"0.3894\",\n              date: \"2021-12-23\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"CHF\",\n              units: 1,\n              buy: \"4.3410\",\n              sell: \"4.5554\",\n              spread: \"0.2144\",\n              date: \"2021-12-23\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"GBP\",\n              units: 1,\n              buy: \"5.1995\",\n              sell: \"5.7204\",\n              spread: \"0.5209\",\n              date: \"2021-12-23\",\n              time: \"08:07:00\",\n            },\n          ],\n        },\n        range: { minRateDate: \"2000-03-22\", maxRateDate: \"2022-04-21\" },\n      },\n      {\n        date: \"2022-01-21\",\n        rates: {\n          \"08:07\": [\n            {\n              code: \"EUR\",\n              units: 1,\n              buy: \"4.3051\",\n              sell: \"4.7526\",\n              spread: \"0.4475\",\n              date: \"2022-01-21\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"USD\",\n              units: 1,\n              buy: \"3.8071\",\n              sell: \"4.1877\",\n              spread: \"0.3806\",\n              date: \"2022-01-21\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"CHF\",\n              units: 1,\n              buy: \"4.2644\",\n              sell: \"4.4750\",\n              spread: \"0.2106\",\n              date: \"2022-01-21\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"GBP\",\n              units: 1,\n              buy: \"5.1737\",\n              sell: \"5.6920\",\n              spread: \"0.5183\",\n              date: \"2022-01-21\",\n              time: \"08:07:00\",\n            },\n          ],\n        },\n        range: { minRateDate: \"2000-03-22\", maxRateDate: \"2022-04-21\" },\n      },\n      {\n        date: \"2022-02-23\",\n        rates: {\n          \"08:07\": [\n            {\n              code: \"EUR\",\n              units: 1,\n              buy: \"4.3169\",\n              sell: \"4.7656\",\n              spread: \"0.4487\",\n              date: \"2022-02-23\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"USD\",\n              units: 1,\n              buy: \"3.8201\",\n              sell: \"4.2019\",\n              spread: \"0.3818\",\n              date: \"2022-02-23\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"CHF\",\n              units: 1,\n              buy: \"4.2503\",\n              sell: \"4.4602\",\n              spread: \"0.2099\",\n              date: \"2022-02-23\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"GBP\",\n              units: 1,\n              buy: \"5.1921\",\n              sell: \"5.7122\",\n              spread: \"0.5201\",\n              date: \"2022-02-23\",\n              time: \"08:07:00\",\n            },\n          ],\n        },\n        range: { minRateDate: \"2000-03-22\", maxRateDate: \"2022-04-21\" },\n      },\n      {\n        date: \"2022-03-23\",\n        rates: {\n          \"08:07\": [\n            {\n              code: \"EUR\",\n              units: 1,\n              buy: \"4.4521\",\n              sell: \"4.9148\",\n              spread: \"0.4627\",\n              date: \"2022-03-23\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"USD\",\n              units: 1,\n              buy: \"4.0432\",\n              sell: \"4.4474\",\n              spread: \"0.4042\",\n              date: \"2022-03-23\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"CHF\",\n              units: 1,\n              buy: \"4.4329\",\n              sell: \"4.6518\",\n              spread: \"0.2189\",\n              date: \"2022-03-23\",\n              time: \"08:07:00\",\n            },\n            {\n              code: \"GBP\",\n              units: 1,\n              buy: \"5.3672\",\n              sell: \"5.9049\",\n              spread: \"0.5377\",\n              date: \"2022-03-23\",\n              time: \"08:07:00\",\n            },\n          ],\n        },\n        range: { minRateDate: \"2000-03-22\", maxRateDate: \"2022-04-21\" },\n      },\n    ],\n  };\n});\n\nexport default function Section({ version = \"v1\" }) {\n  const { results } = asset.read(version) as {\n    results: object[];\n  };\n\n  const [code, setCode] = useState(\"CHF\");\n\n  const values = useMemo(\n    () => ({\n      [\"2020-11-23\"]: 441.87,\n      [\"2020-12-23\"]: 441.87,\n      [\"2021-01-22\"]: 441.87,\n      [\"2021-02-23\"]: 442.06,\n      [\"2021-03-23\"]: 442.06,\n      [\"2021-04-23\"]: 442.06,\n      [\"2021-05-21\"]: 442.82,\n      [\"2021-06-23\"]: 442.82,\n      [\"2021-07-23\"]: 442.82,\n      [\"2021-08-23\"]: 442.46,\n      [\"2021-09-23\"]: 442.46,\n      [\"2021-10-22\"]: 442.46,\n      [\"2021-11-23\"]: 441.87,\n      [\"2021-12-23\"]: 441.87,\n      [\"2022-01-21\"]: 441.87,\n      [\"2022-02-23\"]: 444.77,\n      [\"2022-03-23\"]: 444.77,\n    }),\n    []\n  );\n\n  const list = useMemo(\n    () =>\n      results\n        .reduce((result, { rates }) => result.concat(Object.values(rates)), [])\n        .flat()\n        .filter((item) => item.code === code)\n        .map(({ buy, code, date, sell, spread, time, units }) => ({\n          date: new Date(date),\n          name: `${units} ${code}`,\n          buy: Number(buy),\n          sell: Number(sell),\n          spread: Number(spread),\n          value: values[date],\n          add: 60.0,\n        }))\n        .map((item) =>\n          Object.assign(item, {\n            pay: Math.round(100 * item.sell * item.value) / 100 + item.add,\n          })\n        ),\n    [results, values, code]\n  );\n\n  console.log({ results, code, list });\n\n  return (\n    <div className={styles.Section}>\n      <h2>Exchange</h2>\n      <fieldset>\n        <label>\n          <span>Code</span>\n          <select\n            value={code}\n            onChange={useCallback<ChangeEventHandler<HTMLSelectElement>>(\n              ({ target }) => setCode(target.value),\n              []\n            )}\n          >\n            {CODES.map((code) => (\n              <option key={code} value={code}>\n                {code}\n              </option>\n            ))}\n          </select>\n        </label>\n      </fieldset>\n      <table>\n        <tbody>\n          <tr>\n            <th>Data</th>\n            <th>Nazwa</th>\n            <th>Kupno</th>\n            <th>Sprzedaż</th>\n            <th>Spread</th>\n            <th>Wartość</th>\n            <th>Stała</th>\n            <th>Kwota</th>\n          </tr>\n          {list.map((item, i) => (\n            <tr key={i}>\n              <td align=\"right\">{format(item.date, \"dd.MM.yyyy\")}</td>\n              <td>{item.name}</td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 4,\n                }).format(item.buy)}\n              </td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 4,\n                }).format(item.sell)}\n              </td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 4,\n                }).format(item.spread)}\n              </td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.value)}\n              </td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.add)}\n              </td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.pay)}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n        <tfoot>\n          {[\n            list.reduce(\n              ({ value, add, pay }, item) => ({\n                value: value + item.value,\n                add: add + item.add,\n                pay: pay + item.pay,\n              }),\n              {\n                value: 0,\n                add: 0,\n                pay: 0,\n              }\n            ),\n          ].map((item, i) => (\n            <tr key={i}>\n              <td colSpan={5}></td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.value)}\n              </td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.add)}\n              </td>\n              <td align=\"right\">\n                {new Intl.NumberFormat(\"pl-PL\", {\n                  minimumFractionDigits: 2,\n                }).format(item.pay)}\n              </td>\n            </tr>\n          ))}\n        </tfoot>\n      </table>\n    </div>\n  );\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".B6Zp7eUYgBpjqmd1ubB8{color:purple}.HYOtY3B5vlGNT0uH_VzY{clear:both}.md3pkb8fMm3YUOeAjzY0{float:left;width:150px;height:200px}.tQM2WTe6cs7QpfRhslqC{color:#d3d3d3}.P19bo6gqrx6NwOpivm_e .ltBjGN_SfGcQnxrjG0DW.KcrPBqhF3Hx7FdbRnVRD{color:#8a2be2}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/containers/Exchange/styles.module.scss\"],\"names\":[],\"mappings\":\"AAAA,sBACE,YAAA,CAEF,sBACE,UAAA,CAEF,sBACE,UAAA,CACA,WAAA,CACA,YAAA,CAEF,sBACE,aAAA,CAIE,iEACE,aAAA\",\"sourcesContent\":[\".Section {\\n  color: purple;\\n}\\n.Row {\\n  clear: both;\\n}\\n.Gallery {\\n  float: left;\\n  width: 150px;\\n  height: 200px;\\n}\\n.Sale {\\n  color: lightgray;\\n}\\n.Details {\\n  .Feature {\\n    &.changed {\\n      color: blueviolet;\\n    }\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Section\": \"B6Zp7eUYgBpjqmd1ubB8\",\n\t\"Row\": \"HYOtY3B5vlGNT0uH_VzY\",\n\t\"Gallery\": \"md3pkb8fMm3YUOeAjzY0\",\n\t\"Sale\": \"tQM2WTe6cs7QpfRhslqC\",\n\t\"Details\": \"P19bo6gqrx6NwOpivm_e\",\n\t\"Feature\": \"ltBjGN_SfGcQnxrjG0DW\",\n\t\"changed\": \"KcrPBqhF3Hx7FdbRnVRD\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","CODES","asset","createAsset","version","results","date","rates","code","units","buy","sell","spread","time","range","minRateDate","maxRateDate","Section","read","useState","setCode","values","useMemo","list","reduce","result","concat","Object","flat","filter","item","map","Date","name","Number","value","add","assign","pay","Math","round","console","log","className","styles","onChange","useCallback","target","key","i","align","format","Intl","NumberFormat","minimumFractionDigits","colSpan","___CSS_LOADER_EXPORT___","push","module","id","locals"],"sourceRoot":""}